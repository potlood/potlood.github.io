{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./src/util/index.ts","webpack://[name]/./src/util/SVG.ts","webpack://[name]/./src/wmfjs/index.ts","webpack://[name]/./src/wmfjs/Renderer.ts","webpack://[name]/./src/wmfjs/Blob.ts","webpack://[name]/./src/wmfjs/Helper.ts","webpack://[name]/./src/wmfjs/GDIContext.ts","webpack://[name]/./src/wmfjs/Primitives.ts","webpack://[name]/./src/wmfjs/Region.ts","webpack://[name]/./src/wmfjs/Style.ts","webpack://[name]/./src/wmfjs/Bitmap.ts","webpack://[name]/./src/wmfjs/WMFRecords.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flood","filter","resultId","color","opacity","_settings","floodElement","document","createElementNS","setAttribute","toString","appendChild","composite","in1","in2","k1","k2","k3","k4","compositeElement","_path","move","x","y","path","substr","line","pts","forEach","point","curveC","x1","y1","x2","y2","close","svg","filters","SVGFilters","_defs","undefined","_svg","parent","width","height","settings","svgElement","_appendSettings","image","url","imageElement","setAttributeNS","rect","rx","ry","rectElement","Number","lineElement","polygon","points","polygonElement","map","join","polyline","polylineElement","ellipse","cx","cy","ellipseElement","builder","pathElement","text","textElement","textNode","createTextNode","id","filterElement","pattern","patternElement","defs","defsElement","clipPath","units","clipElement","createPath","SVGPathBuilder","element","keys","blob","parse","log","render","info","_render","mapMode","xExt","yExt","_img","type","size","placable","headerstart","reader","readUint32","WMFPlacable","pos","readUint16","GDI","MetafileType","MEMORYMETAFILE","DISKMETAFILE","METAHEADER_SIZE","version","MetafileVersion","METAVERSION100","METAVERSION300","WMF","gdi","setViewportExt","setMapMode","left","readInt16","top","right","bottom","skip","boundingBox","WMFRect16","unitsPerInch","hdrsize","_version","_hdrsize","_placable","_records","play","offset","Blob","data","Uint8Array","eof","length","seek","newpos","cnt","newPos","readBinary","ret","String","fromCharCode","readInt8","readUint8","readInt32","val","readString","readNullTermString","maxSize","byte","message","setPrototypeOf","Error","isLoggingEnabled","loggingEnabled","enabled","console","_makeUniqueId","prefix","_uniqueId","_writeUint32Val","uint8arr","_blobToBinary","len","BITMAPINFOHEADER_SIZE","BITMAPCOREHEADER_SIZE","RecordType","META_EOF","META_REALIZEPALETTE","META_SETPALENTRIES","META_SETBKMODE","META_SETMAPMODE","META_SETROP2","META_SETRELABS","META_SETPOLYFILLMODE","META_SETSTRETCHBLTMODE","META_SETTEXTCHAREXTRA","META_RESTOREDC","META_RESIZEPALETTE","META_DIBCREATEPATTERNBRUSH","META_SETLAYOUT","META_SETBKCOLOR","META_SETTEXTCOLOR","META_OFFSETVIEWPORTORG","META_LINETO","META_MOVETO","META_OFFSETCLIPRGN","META_FILLREGION","META_SETMAPPERFLAGS","META_SELECTPALETTE","META_POLYGON","META_POLYLINE","META_SETTEXTJUSTIFICATION","META_SETWINDOWORG","META_SETWINDOWEXT","META_SETVIEWPORTORG","META_SETVIEWPORTEXT","META_OFFSETWINDOWORG","META_SCALEWINDOWEXT","META_SCALEVIEWPORTEXT","META_EXCLUDECLIPRECT","META_INTERSECTCLIPRECT","META_ELLIPSE","META_FLOODFILL","META_FRAMEREGION","META_ANIMATEPALETTE","META_TEXTOUT","META_POLYPOLYGON","META_EXTFLOODFILL","META_RECTANGLE","META_SETPIXEL","META_ROUNDRECT","META_PATBLT","META_SAVEDC","META_PIE","META_STRETCHBLT","META_ESCAPE","META_INVERTREGION","META_PAINTREGION","META_SELECTCLIPREGION","META_SELECTOBJECT","META_SETTEXTALIGN","META_ARC","META_CHORD","META_BITBLT","META_EXTTEXTOUT","META_SETDIBTODEV","META_DIBBITBLT","META_DIBSTRETCHBLT","META_STRETCHDIB","META_DELETEOBJECT","META_CREATEPALETTE","META_CREATEPATTERNBRUSH","META_CREATEPENINDIRECT","META_CREATEFONTINDIRECT","META_CREATEBRUSHINDIRECT","META_CREATEREGION","MetafileEscapes","NEWFRAME","ABORTDOC","NEXTBAND","SETCOLORTABLE","GETCOLORTABLE","FLUSHOUT","DRAFTMODE","QUERYESCSUPPORT","SETABORTPROC","STARTDOC","ENDDOC","GETPHYSPAGESIZE","GETPRINTINGOFFSET","GETSCALINGFACTOR","META_ESCAPE_ENHANCED_METAFILE","SETPENWIDTH","SETCOPYCOUNT","SETPAPERSOURCE","PASSTHROUGH","GETTECHNOLOGY","SETLINECAP","SETLINEJOIN","SETMITERLIMIT","BANDINFO","DRAWPATTERNRECT","GETVECTORPENSIZE","GETVECTORBRUSHSIZE","ENABLEDUPLEX","GETSETPAPERBINS","GETSETPRINTORIENT","ENUMPAPERBINS","SETDIBSCALING","EPSPRINTING","ENUMPAPERMETRICS","GETSETPAPERMETRICS","POSTSCRIPT_DATA","POSTSCRIPT_IGNORE","GETDEVICEUNITS","GETEXTENDEDTEXTMETRICS","GETPAIRKERNTABLE","EXTTEXTOUT","GETFACENAME","DOWNLOADFACE","METAFILE_DRIVER","QUERYDIBSUPPORT","BEGIN_PATH","CLIP_TO_PATH","END_PATH","OPEN_CHANNEL","DOWNLOADHEADER","CLOSE_CHANNEL","POSTSCRIPT_PASSTHROUGH","ENCAPSULATED_POSTSCRIPT","POSTSCRIPT_IDENTIFY","POSTSCRIPT_INJECTION","CHECKJPEGFORMAT","CHECKPNGFORMAT","GET_PS_FEATURESETTING","MXDC_ESCAPE","SPCLPASSTHROUGH2","MapMode","MM_TEXT","MM_LOMETRIC","MM_HIMETRIC","MM_LOENGLISH","MM_HIENGLISH","MM_TWIPS","MM_ISOTROPIC","MM_ANISOTROPIC","StretchMode","BLACKONWHITE","WHITEONBLACK","COLORONCOLOR","HALFTONE","TextAlignmentMode","TA_UPDATECP","TA_RIGHT","TA_CENTER","TA_BOTTOM","TA_BASELINE","TA_RTLREADING","MixMode","TRANSPARENT","OPAQUE","VerticalTextAlignmentMode","VTA_BOTTOM","VTA_CENTER","VTA_LEFT","VTA_BASELINE","BrushStyle","BS_SOLID","BS_NULL","BS_HATCHED","BS_PATTERN","BS_INDEXED","BS_DIBPATTERN","BS_DIBPATTERNPT","BS_PATTERN8X8","BS_DIBPATTERN8X8","BS_MONOPATTERN","PenStyle","PS_SOLID","PS_DASH","PS_DOT","PS_DASHDOT","PS_DASHDOTDOT","PS_NULL","PS_INSIDEFRAME","PS_USERSTYLE","PS_ALTERNATE","PS_ENDCAP_SQUARE","PS_ENDCAP_FLAT","PS_JOIN_BEVEL","PS_JOIN_MITER","PolyFillMode","ALTERNATE","WINDING","ColorUsage","DIB_RGB_COLORS","DIB_PAL_COLORS","DIB_PAL_INDICES","PaletteEntryFlag","PC_RESERVED","PC_EXPLICIT","PC_NOCOLLAPSE","BitmapCompression","BI_RGB","BI_RLE8","BI_RLE4","BI_BITFIELDS","BI_JPEG","BI_PNG","copy","defObjects","_svggroup","_svgclipChanged","_svgtextbkfilter","mapmode","stretchmode","textalign","bkmode","textcolor","clone","bkcolor","polyfillmode","wx","wy","ww","wh","vx","vy","vw","vh","clip","ownclip","selected","defObj","_svgdefs","_svgPatterns","_svgClipPaths","brush","pen","font","palette","region","state","GDIContextState","statestack","objects","setWindowOrg","setWindowExt","offsetWindowOrg","offX","offY","setViewportOrg","offsetViewportOrg","saveDC","prevstate","push","restoreDC","saved","pop","escape","func","count","setStretchBltMode","stretchMode","stretchDib","srcX","srcY","srcW","srcH","dstX","dstY","dstW","dstH","rasterOp","colorUsage","dib","_todevX","_todevY","_todevW","_todevH","_pushGroup","base64ref","stretchDibBits","rectangle","rw","rh","opts","_applyOpts","textOut","escapement","transform","style","filterId","_getSvgDef","toHex","extTextOut","fwOpts","dx","lineTo","toX","toY","fromX","fromY","moveTo","first","polyPolygon","polygons","fill","width2","height2","excludeClipRect","_getClipRgn","subtract","intersectClipRect","intersect","offsetClipRgn","setTextAlign","textAlignmentMode","setBkMode","bkMode","setTextColor","textColor","setBkColor","bkColor","setPolyFillMode","polyFillMode","createBrush","idx","_storeObject","createFont","createPen","createPalette","createRegion","createPatternBrush","patternBrush","selectObject","objIdx","checkType","obj","_getObject","_selectObject","deleteObject","_deleteObject","viewBox","preserveAspectRatio","_getSvgClipPathForRegion","existingId","sclip","complexity","bounds","scans","scan","j","scanlines","scanline","_getSvgPatternForBrush","img","getWidth","getHeight","dibpatternpt","spat","patternUnits","Math","floor","_tologicalX","_tologicalY","_tologicalW","_tologicalH","usePen","useBrush","useFont","stroke","dotWidth","linecap","dashWidth","dotSpacing","facename","abs","PointS","Rect","empty","max","min","scanCnt","Scan","_updateComplexity","Region","si","cloned","splice","last","slen","CreateSimpleRegion","rgn","g","b","ColorRef","slice","orientation","weight","italic","underline","strikeout","charset","outprecision","clipprecision","quality","pitchAndFamily","pitch","family","dataLength","start","Font","JSON","stringify","forceDibPattern","colorusage","hatchstyle","Brush","Pen","flag","PaletteEntry","entries","Palette","skipsize","planes","bitcount","colors","compression","sizeimage","xpelspermeter","ypelspermeter","clrused","clrimportant","usergb","_reader","_offset","_usergb","_infosize","_header","BitmapCoreHeader","BitmapInfoHeader","masks","infosize","header","BitmapBase","_size","_info","BitmapInfo","prevpos","mime","makeBitmapFileHeader","ref","btoa","buf","ArrayBuffer","view","widthBytes","bitsPixel","bitsOffset","bitsSize","Bitmap16","PatternBitmap16","all","curpos","datalength","hasRect","hasDx","polygonsPtCnts","ptCnt","ip","patternBitmap","recordName","main_loop"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAe,MAAID,IAEnBD,EAAY,MAAIC,IARlB,CASGK,MAAM,WACT,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,I,iCClFrD,2D,6BCAA,qIA0BA,+BA6BA,OA3BW,YAAAC,MAAP,SAAaC,EAA0BC,EAAkBC,EAAeC,EAAiBC,GACrF,IAAMC,EAAeC,SAASC,gBAAgB,6BAA8B,WACxEN,GACAI,EAAaG,aAAa,KAAMP,GAEpCI,EAAaG,aAAa,cAAeN,GACzCG,EAAaG,aAAa,gBAAiBL,EAAQM,YACnDT,EAAOU,YAAYL,IAGhB,YAAAM,UAAP,SAAiBX,EACAC,EACAW,EACAC,EACAC,EACAC,EACAC,EACAC,EACAb,GACb,IAAMc,EAAmBZ,SAASC,gBAAgB,6BAA8B,eAC5EN,GACAiB,EAAiBV,aAAa,KAAMP,GAExCiB,EAAiBV,aAAa,KAAMI,GACpCM,EAAiBV,aAAa,MAAOK,GACrCb,EAAOU,YAAYQ,IAE3B,EA7BA,GA+BA,0BACY,KAAAC,MAAQ,GAuBpB,OArBW,YAAAC,KAAP,SAAYC,EAAWC,GACnB3D,KAAKwD,OAAS,MAAME,EAAC,IAAIC,GAGtB,YAAAC,KAAP,WACI,OAAO5D,KAAKwD,MAAMK,OAAO,IAGtB,YAAAC,KAAP,SAAYC,GAAZ,WACIA,EAAIC,SAAQ,SAACC,GACT,EAAKT,OAAS,MAAMS,EAAM,GAAE,IAAIA,EAAM,OAIvC,YAAAC,OAAP,SAAcC,EAAYC,EAAYC,EAAYC,EAAYZ,EAAWC,GACrE3D,KAAKwD,OAAS,MAAMW,EAAE,IAAIC,EAAE,KAAKC,EAAE,IAAIC,EAAE,KAAKZ,EAAC,IAAIC,GAGhD,YAAAY,MAAP,WACIvE,KAAKwD,OAAS,MAEtB,EAxBA,GA0BA,aAKI,WAAYgB,GAJL,KAAAC,QAAU,IAAIC,EAEb,KAAAC,WAAoCC,EAGxC5E,KAAK6E,KAAOL,EAiNpB,OA9MW,YAAAA,IAAP,SAAWM,EACApB,EACAC,EACAoB,EACAC,EACAC,GACP,IAAMC,EAAavC,SAASC,gBAAgB,6BAA8B,OAa1E,OAZAsC,EAAWrC,aAAa,IAAKa,EAAEZ,YAC/BoC,EAAWrC,aAAa,IAAKc,EAAEb,YAC/BoC,EAAWrC,aAAa,QAASkC,EAAMjC,YACvCoC,EAAWrC,aAAa,SAAUmC,EAAOlC,YACzC9C,KAAKmF,gBAAgBF,EAAUC,GAEjB,MAAVJ,EACAA,EAAO/B,YAAYmC,GAEnBlF,KAAK6E,KAAK9B,YAAYmC,GAGnBA,GAGJ,YAAAE,MAAP,SAAaN,EACApB,EACAC,EACAoB,EACAC,EACAK,EACAJ,GACT,IAAMK,EAAe3C,SAASC,gBAAgB,6BAA8B,SAQ5E,OAPA0C,EAAazC,aAAa,IAAKa,EAAEZ,YACjCwC,EAAazC,aAAa,IAAKc,EAAEb,YACjCwC,EAAazC,aAAa,QAASkC,EAAMjC,YACzCwC,EAAazC,aAAa,SAAUmC,EAAOlC,YAC3CwC,EAAaC,eAAe,+BAAgC,OAAQF,GACpErF,KAAKmF,gBAAgBF,EAAUK,GAC/BR,EAAO/B,YAAYuC,GACZA,GAYJ,YAAAE,KAAP,SAAYV,EACApB,EACAC,EACAoB,EACAC,EACAS,EACAC,EACAT,GACR,IAAMU,EAAchD,SAASC,gBAAgB,6BAA8B,QAiB3E,OAhBA+C,EAAY9C,aAAa,IAAKa,EAAEZ,YAChC6C,EAAY9C,aAAa,IAAKc,EAAEb,YAChC6C,EAAY9C,aAAa,QAASkC,EAAMjC,YACxC6C,EAAY9C,aAAa,SAAUmC,EAAOlC,iBAC/B8B,IAAPa,IACIA,aAAcG,OACdD,EAAY9C,aAAa,KAAM4C,EAAG3C,YAC3B2C,aAAc3E,QACrBd,KAAKmF,gBAAgBM,EAAIE,SAGtBf,IAAPc,GACAC,EAAY9C,aAAa,KAAM6C,EAAG5C,YAEtC9C,KAAKmF,gBAAgBF,EAAUU,GAC/Bb,EAAO/B,YAAY4C,GACZA,GAGJ,YAAA7B,KAAP,SAAYgB,EAAiBX,EAAYC,EAAYC,EAAYC,EAAYW,GACzE,IAAMY,EAAclD,SAASC,gBAAgB,6BAA8B,QAO3E,OANAiD,EAAYhD,aAAa,KAAMsB,EAAGrB,YAClC+C,EAAYhD,aAAa,KAAMuB,EAAGtB,YAClC+C,EAAYhD,aAAa,KAAMwB,EAAGvB,YAClC+C,EAAYhD,aAAa,KAAMyB,EAAGxB,YAClC9C,KAAKmF,gBAAgBF,EAAUY,GAC/Bf,EAAO/B,YAAY8C,GACZA,GAGJ,YAAAC,QAAP,SAAehB,EAAiBiB,EAAoBd,GAChD,IAAMe,EAAiBrD,SAASC,gBAAgB,6BAA8B,WAI9E,OAHAoD,EAAenD,aAAa,SAAUkD,EAAOE,KAAI,SAAChC,GAAU,OAAAA,EAAMiC,KAAK,QAAMA,KAAK,MAClFlG,KAAKmF,gBAAgBF,EAAUe,GAC/BlB,EAAO/B,YAAYiD,GACZA,GAGJ,YAAAG,SAAP,SAAgBrB,EAAiBiB,EAAoBd,GACjD,IAAMmB,EAAkBzD,SAASC,gBAAgB,6BAA8B,YAI/E,OAHAwD,EAAgBvD,aAAa,SAAUkD,EAAOE,KAAI,SAAChC,GAAU,OAAAA,EAAMiC,KAAK,QAAMA,KAAK,MACnFlG,KAAKmF,gBAAgBF,EAAUmB,GAC/BtB,EAAO/B,YAAYqD,GACZA,GAGJ,YAAAC,QAAP,SAAevB,EAAiBwB,EAAYC,EAAYd,EAAYC,EAAYT,GAC5E,IAAMuB,EAAiB7D,SAASC,gBAAgB,6BAA8B,WAO9E,OANA4D,EAAe3D,aAAa,KAAMyD,EAAGxD,YACrC0D,EAAe3D,aAAa,KAAM0D,EAAGzD,YACrC0D,EAAe3D,aAAa,KAAM4C,EAAG3C,YACrC0D,EAAe3D,aAAa,KAAM6C,EAAG5C,YACrC9C,KAAKmF,gBAAgBF,EAAUuB,GAC/B1B,EAAO/B,YAAYyD,GACZA,GAGJ,YAAA5C,KAAP,SAAYkB,EAAoB2B,EAAyBxB,GACrD,IAAMyB,EAAc/D,SAASC,gBAAgB,6BAA8B,QAI3E,OAHA8D,EAAY7D,aAAa,IAAK4D,EAAQ7C,QACtC5D,KAAKmF,gBAAgBF,EAAUyB,GAC/B5B,EAAO/B,YAAY2D,GACZA,GAGJ,YAAAC,KAAP,SAAY7B,EAAiBpB,EAAWC,EAAWtC,EAAe4D,GAC9D,IAAM2B,EAAcjE,SAASC,gBAAgB,6BAA8B,QAC3EgE,EAAY/D,aAAa,IAAKa,EAAEZ,YAChC8D,EAAY/D,aAAa,IAAKc,EAAEb,YAChC9C,KAAKmF,gBAAgBF,EAAU2B,GAC/B,IAAMC,EAAWlE,SAASmE,eAAezF,GAGzC,OAFAuF,EAAY7D,YAAY8D,GACxB/B,EAAO/B,YAAY6D,GACZA,GAGJ,YAAAvE,OAAP,SAAcyC,EACAiC,EACArD,EACAC,EACAoB,EACAC,EACAC,GACV,IAAM+B,EAAgBrE,SAASC,gBAAgB,6BAA8B,UAO7E,OANAoE,EAAcnE,aAAa,IAAKa,EAAEZ,YAClCkE,EAAcnE,aAAa,IAAKc,EAAEb,YAClCkE,EAAcnE,aAAa,QAASkC,EAAMjC,YAC1CkE,EAAcnE,aAAa,SAAUmC,EAAOlC,YAC5C9C,KAAKmF,gBAAgBF,EAAU+B,GAC/BlC,EAAO/B,YAAYiE,GACZA,GAGJ,YAAAC,QAAP,SAAenC,EACAxC,EACAoB,EACAC,EACAoB,EACAC,EACAC,GACX,IAAMiC,EAAiBvE,SAASC,gBAAgB,6BAA8B,WAU9E,OATIN,GACA4E,EAAerE,aAAa,KAAMP,GAEtC4E,EAAerE,aAAa,IAAKa,EAAEZ,YACnCoE,EAAerE,aAAa,IAAKc,EAAEb,YACnCoE,EAAerE,aAAa,QAASkC,EAAMjC,YAC3CoE,EAAerE,aAAa,SAAUmC,EAAOlC,YAC7C9C,KAAKmF,gBAAgBF,EAAUiC,GAC/BpC,EAAO/B,YAAYmE,GACZA,GAGJ,YAAAC,KAAP,WACI,QAAmBvC,IAAf5E,KAAK2E,MAAqB,CAC1B,IAAMyC,EAAczE,SAASC,gBAAgB,6BAA8B,QAC3E5C,KAAK6E,KAAK9B,YAAYqE,GACtBpH,KAAK2E,MAAQyC,EAEjB,OAAOpH,KAAK2E,OAGT,YAAA0C,SAAP,SAAgBvC,EAAiBxC,EAAkBgF,EAAgBrC,GAC/D,IAAMsC,EAAc5E,SAASC,gBAAgB,6BAA8B,YAU3E,OATIN,GACAiF,EAAY1E,aAAa,KAAMP,QAErBsC,IAAV0C,IACAA,EAAQ,kBAEZC,EAAY1E,aAAa,gBAAiByE,GAC1CtH,KAAKmF,gBAAgBF,EAAUsC,GAC/BzC,EAAO/B,YAAYwE,GACZA,GAGJ,YAAAC,WAAP,WACI,OAAO,IAAIC,GAGP,YAAAtC,gBAAR,SAAwBF,EAA2ByC,QAC9B9C,IAAbK,GACAnE,OAAO6G,KAAK1C,GAAUjB,SAAQ,SAACrC,GAC3B+F,EAAQ7E,aAAalB,EAAKsD,EAAStD,QAKnD,EAvNA,I,2DCnFA,iM,6BCAA,qNAwCA,aAGI,WAAYiG,GACR5H,KAAK6H,MAAMD,GACX,SAAOE,IAAI,+BA+DnB,OA5DW,YAAAC,OAAP,SAAcC,GACV,IAAM9C,EAAavC,SAASC,gBAAgB,6BAA8B,OAO1E,OALA5C,KAAKiI,QAAQ,IAAI,MAAI/C,GAAa8C,EAAKE,QAASF,EAAKG,KAAMH,EAAKI,MAChElD,EAAWrC,aAAa,UAAW,CAAC,EAAG,EAAGmF,EAAKG,KAAMH,EAAKI,MAAMlC,KAAK,MACrEhB,EAAWrC,aAAa,sBAAuB,QAC/CqC,EAAWrC,aAAa,QAASmF,EAAKjD,OACtCG,EAAWrC,aAAa,SAAUmF,EAAKhD,QAChCE,GAGH,YAAA2C,MAAR,SAAcD,GACV5H,KAAKqI,KAAO,KAEZ,IAEIC,EACAC,EACAC,EACAC,EALEC,EAAS,IAAI,OAAKd,GAMlBjG,EAAM+G,EAAOC,aAWnB,OAVY,aAARhH,GACA6G,EAAW,IAAII,EAAYF,GAC3BD,EAAcC,EAAOG,IACrBP,EAAOI,EAAOI,aACdP,EAAOG,EAAOI,eAEdL,EAAc,EACdH,EAAa,MAAN3G,EACP4G,EAAQ5G,IAAQ,GAAM,OAElB2G,GACJ,KAAK,SAAOS,IAAIC,aAAaC,eAC7B,KAAK,SAAOF,IAAIC,aAAaE,aACzB,GAAIX,IAAS,SAAOQ,IAAII,gBAAkB,EAAG,CACzC,IAAMC,EAAUV,EAAOI,aACvB,OAAQM,GACJ,KAAK,SAAOL,IAAIM,gBAAgBC,eAChC,KAAK,SAAOP,IAAIM,gBAAgBE,eAC5BvJ,KAAKqI,KAAO,IAAImB,EAAId,EAAQF,EAAUY,EAASX,EAAsB,EAAPF,KAOlF,GAAiB,MAAbvI,KAAKqI,KACL,MAAM,IAAI,aAAW,0BAIrB,YAAAJ,QAAR,SAAgBzD,EAAU0D,EAAiBC,EAAcC,GAErD,IAAMqB,EAAM,IAAI,aAAWjF,GAC3BiF,EAAIC,eAAevB,EAAMC,GACzBqB,EAAIE,WAAWzB,GACf,SAAOJ,IAAI,iCACX9H,KAAKqI,KAAKN,OAAO0B,GACjB,SAAO3B,IAAI,8BAEnB,EApEA,GAsEA,aAMI,WAAYY,GACR1I,KAAK4J,KAAOlB,EAAOmB,YACnB7J,KAAK8J,IAAMpB,EAAOmB,YAClB7J,KAAK+J,MAAQrB,EAAOmB,YACpB7J,KAAKgK,OAAStB,EAAOmB,YAO7B,OAJW,YAAA/G,SAAP,WACI,MAAO,UAAY9C,KAAK4J,KAAO,UAAY5J,KAAK8J,IAAM,YAAc9J,KAAK+J,MACnE,aAAe/J,KAAKgK,OAAS,KAE3C,EAjBA,GAmBA,EAII,SAAYtB,GACRA,EAAOuB,KAAK,GACZjK,KAAKkK,YAAc,IAAIC,EAAUzB,GACjC1I,KAAKoK,aAAe1B,EAAOmB,YAC3BnB,EAAOuB,KAAK,GACZvB,EAAOuB,KAAK,GACZ,SAAOnC,IAAI,oBAAsB9H,KAAKkK,YAAc,QAAUlK,KAAKoK,aAAe,gBAI1F,aAMI,WAAY1B,EAAcF,EAAuBY,EAAiBiB,GAC9DrK,KAAKsK,SAAWlB,EAChBpJ,KAAKuK,SAAWF,EAChBrK,KAAKwK,UAAYhC,EACjBxI,KAAKyK,SAAW,IAAI,aAAW/B,EAAQ1I,KAAKuK,UAMpD,OAHW,YAAAxC,OAAP,SAAc0B,GACVzJ,KAAKyK,SAASC,KAAKjB,IAE3B,EAhBA,I,6BC/IA,wDA4BA,aAKI,WAAY7B,EAA0B+C,GAC9B/C,aAAgBgD,GAChB5K,KAAK4H,KAAOA,EAAKA,KACjB5H,KAAK6K,KAAOjD,EAAKiD,KACjB7K,KAAK6I,IAAM8B,GAAU/C,EAAKiB,MAE1B7I,KAAK4H,KAAOA,EACZ5H,KAAK6K,KAAO,IAAIC,WAAWlD,GAC3B5H,KAAK6I,IAAM8B,GAAU,GA0GjC,OAtGW,YAAAI,IAAP,WACI,OAAO/K,KAAK6I,KAAO7I,KAAK6K,KAAKG,QAG1B,YAAAC,KAAP,SAAYC,GACR,GAAIA,EAAS,GAAKA,EAASlL,KAAK6K,KAAKG,OACjC,MAAM,IAAI,aAAW,yBAEzBhL,KAAK6I,IAAMqC,GAGR,YAAAjB,KAAP,SAAYkB,GACR,IAAMC,EAASpL,KAAK6I,IAAMsC,EAC1B,GAAIC,EAASpL,KAAK6K,KAAKG,OACnB,MAAM,IAAI,aAAW,0BAEzBhL,KAAK6I,IAAMuC,GAGR,YAAAC,WAAP,SAAkBF,GAEd,GADYnL,KAAK6I,IAAMsC,EACbnL,KAAK6K,KAAKG,OAChB,MAAM,IAAI,aAAW,0BAGzB,IADA,IAAIM,EAAM,GACHH,KAAQ,GACXG,GAAOC,OAAOC,aAAaxL,KAAK6K,KAAK7K,KAAK6I,QAE9C,OAAOyC,GAGJ,YAAAG,SAAP,WACI,GAAIzL,KAAK6I,IAAM,EAAI7I,KAAK6K,KAAKG,OACzB,MAAM,IAAI,aAAW,0BAEzB,OAAOhL,KAAK6K,KAAK7K,KAAK6I,QAGnB,YAAA6C,UAAP,WACI,OAAO1L,KAAKyL,aAAe,GAGxB,YAAAE,UAAP,WACI,GAAI3L,KAAK6I,IAAM,EAAI7I,KAAK6K,KAAKG,OACzB,MAAM,IAAI,aAAW,0BAEzB,IAAIY,EAAM5L,KAAK6K,KAAK7K,KAAK6I,OAIzB,OAHA+C,GAAO5L,KAAK6K,KAAK7K,KAAK6I,QAAU,EAChC+C,GAAO5L,KAAK6K,KAAK7K,KAAK6I,QAAU,GAChC+C,GAAO5L,KAAK6K,KAAK7K,KAAK6I,QAAU,IAI7B,YAAAF,WAAP,WACI,OAAO3I,KAAK2L,cAAgB,GAGzB,YAAA7C,WAAP,WACI,GAAI9I,KAAK6I,IAAM,EAAI7I,KAAK6K,KAAKG,OACzB,MAAM,IAAI,aAAW,0BAEzB,IAAIY,EAAM5L,KAAK6K,KAAK7K,KAAK6I,OAEzB,OADA+C,GAAO5L,KAAK6K,KAAK7K,KAAK6I,QAAU,GAI7B,YAAAgB,UAAP,WACI,IAAI+B,EAAM5L,KAAK8I,aAIf,OAHI8C,EAAM,QACNA,GAAO,OAEJA,GAGJ,YAAAC,WAAP,SAAkBb,GACd,GAAIhL,KAAK6I,IAAMmC,EAAShL,KAAK6K,KAAKG,OAC9B,MAAM,IAAI,aAAW,0BAGzB,IADA,IAAIM,EAAM,GACDlL,EAAI,EAAGA,EAAI4K,EAAQ5K,IACxBkL,GAAOC,OAAOC,aAAaxL,KAAK6K,KAAK7K,KAAK6I,SAAW,GAEzD,OAAOyC,GAGJ,YAAAQ,mBAAP,SAA0BC,GACtB,IAAIT,EAAM,GACV,GAAIS,EAAU,EAAG,CACbA,IACA,IAAK,IAAI3L,EAAI,EAAGA,EAAI2L,EAAS3L,IAAK,CAC9B,GAAIJ,KAAK6I,IAAMzI,EAAI,EAAIJ,KAAK6K,KAAKG,OAC7B,MAAM,IAAI,aAAW,0BAEzB,IAAMgB,EAAOhM,KAAK6K,KAAK7K,KAAK6I,IAAMzI,KAAO,EACzC,GAAa,IAAT4L,EACA,MAEJV,GAAOC,OAAOC,aAAaQ,IAGnC,OAAOV,GAEf,EAvHA,I,6BC5BA,wI,0TA0BA,cACI,WAAYW,G,uBAAZ,EACI,YAAMA,IAAQ,K,OACdnL,OAAOoL,eAAe,EAAM,EAAWlK,W,EAE/C,OALgC,OAKhC,EALA,CAAgCmK,OAO5BC,GAAmB,EAChB,SAASC,EAAeC,GAC3BF,EAAmBE,EAGvB,+BAmQA,OA1BkB,EAAAxE,IAAd,SAAkBmE,GACVG,GAEAG,QAAQzE,IAAImE,IAIN,EAAAO,cAAd,SAA4BC,GACxB,MAAO,SAAWA,EAAUzM,KAAK0M,aAGvB,EAAAC,gBAAd,SAA8BC,EAAsB/D,EAAa+C,GAC7DgB,EAAS/D,KAAe,IAAN+C,EAClBgB,EAAS/D,KAAU+C,IAAQ,EAAK,IAChCgB,EAAS/D,KAAU+C,IAAQ,GAAM,IACjCgB,EAAS/D,KAAU+C,IAAQ,GAAM,KAGvB,EAAAiB,cAAd,SAA4BjF,GAGxB,IAFA,IAAI0D,EAAM,GACJwB,EAAMlF,EAAKoD,OACR5K,EAAI,EAAGA,EAAI0M,EAAK1M,IACrBkL,GAAOC,OAAOC,aAAa5D,EAAKxH,IAEpC,OAAOkL,GAhQG,EAAAvC,IAAM,CAChBI,gBAAiB,GACjB4D,sBAAuB,GACvBC,sBAAuB,GACvBhE,aAAc,CACVC,eAAgB,EAChBC,aAAc,GAElBG,gBAAiB,CACbC,eAAgB,IAChBC,eAAgB,KAEpB0D,WAAY,CACRC,SAAU,EACVC,oBAAqB,GACrBC,mBAAoB,GACpBC,eAAgB,IAChBC,gBAAiB,IACjBC,aAAc,IACdC,eAAgB,IAChBC,qBAAsB,IACtBC,uBAAwB,IACxBC,sBAAuB,IACvBC,eAAgB,IAChBC,mBAAoB,IACpBC,2BAA4B,IAC5BC,eAAgB,IAChBC,gBAAiB,IACjBC,kBAAmB,IACnBC,uBAAwB,IACxBC,YAAa,IACbC,YAAa,IACbC,mBAAoB,IACpBC,gBAAiB,IACjBC,oBAAqB,IACrBC,mBAAoB,IACpBC,aAAc,IACdC,cAAe,IACfC,0BAA2B,IAC3BC,kBAAmB,IACnBC,kBAAmB,IACnBC,oBAAqB,IACrBC,oBAAqB,IACrBC,qBAAsB,IACtBC,oBAAqB,KACrBC,sBAAuB,KACvBC,qBAAsB,KACtBC,uBAAwB,KACxBC,aAAc,KACdC,eAAgB,KAChBC,iBAAkB,KAClBC,oBAAqB,KACrBC,aAAc,KACdC,iBAAkB,KAClBC,kBAAmB,KACnBC,eAAgB,KAChBC,cAAe,KACfC,eAAgB,KAChBC,YAAa,KACbC,YAAa,GACbC,SAAU,KACVC,gBAAiB,KACjBC,YAAa,KACbC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IACvBC,kBAAmB,IACnBC,kBAAmB,IACnBC,SAAU,KACVC,WAAY,KACZC,YAAa,KACbC,gBAAiB,KACjBC,iBAAkB,KAClBC,eAAgB,KAChBC,mBAAoB,KACpBC,gBAAiB,KACjBC,kBAAmB,IACnBC,mBAAoB,IACpBC,wBAAyB,IACzBC,uBAAwB,IACxBC,wBAAyB,IACzBC,yBAA0B,IAC1BC,kBAAmB,MAEvBC,gBAAiB,CACbC,SAAU,EACVC,SAAU,EACVC,SAAU,EACVC,cAAe,EACfC,cAAe,EACfC,SAAU,EACVC,UAAW,EACXC,gBAAiB,EACjBC,aAAc,EACdC,SAAU,GACVC,OAAQ,GACRC,gBAAiB,GACjBC,kBAAmB,GACnBC,iBAAkB,GAClBC,8BAA+B,GAC/BC,YAAa,GACbC,aAAc,GACdC,eAAgB,GAChBC,YAAa,GACbC,cAAe,GACfC,WAAY,GACZC,YAAa,GACbC,cAAe,GACfC,SAAU,GACVC,gBAAiB,GACjBC,iBAAkB,GAClBC,mBAAoB,GACpBC,aAAc,GACdC,gBAAiB,GACjBC,kBAAmB,GACnBC,cAAe,GACfC,cAAe,GACfC,YAAa,GACbC,iBAAkB,GAClBC,mBAAoB,GACpBC,gBAAiB,GACjBC,kBAAmB,GACnBC,eAAgB,GAChBC,uBAAwB,IACxBC,iBAAkB,IAClBC,WAAY,IACZC,YAAa,IACbC,aAAc,IACdC,gBAAiB,KACjBC,gBAAiB,KACjBC,WAAY,KACZC,aAAc,KACdC,SAAU,KACVC,aAAc,KACdC,eAAgB,KAChBC,cAAe,KACfC,uBAAwB,KACxBC,wBAAyB,KACzBC,oBAAqB,KACrBC,qBAAsB,KACtBC,gBAAiB,KACjBC,eAAgB,KAChBC,sBAAuB,KACvBC,YAAa,KACbC,iBAAkB,MAEtBC,QAAS,CACLC,QAAS,EACTC,YAAa,EACbC,YAAa,EACbC,aAAc,EACdC,aAAc,EACdC,SAAU,EACVC,aAAc,EACdC,eAAgB,GAEpBC,YAAa,CACTC,aAAc,EACdC,aAAc,EACdC,aAAc,EACdC,SAAU,GAEdC,kBAAmB,CACfC,YAAa,EACbC,SAAU,EACVC,UAAW,EACXC,UAAW,EACXC,YAAa,GACbC,cAAe,KAEnBC,QAAS,CACLC,YAAa,EACbC,OAAQ,GAEZC,0BAA2B,CACvBC,WAAY,EACZC,WAAY,EACZC,SAAU,EACVC,aAAc,IAElBC,WAAY,CACRC,SAAU,EACVC,QAAS,EACTC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,cAAe,EACfC,gBAAiB,EACjBC,cAAe,EACfC,iBAAkB,EAClBC,eAAgB,GAEpBC,SAAU,CACNC,SAAU,EACVC,QAAS,EACTC,OAAQ,EACRC,WAAY,EACZC,cAAe,EACfC,QAAS,EACTC,eAAgB,EAChBC,aAAc,EACdC,aAAc,EACdC,iBAAkB,IAClBC,eAAgB,IAChBC,cAAe,KACfC,cAAe,MAEnBC,aAAc,CACVC,UAAW,EACXC,QAAS,GAEbC,WAAY,CACRC,eAAgB,EAChBC,eAAgB,EAChBC,gBAAiB,GAErBC,iBAAkB,CACdC,YAAa,EACbC,YAAa,EACbC,cAAe,GAEnBC,kBAAmB,CACfC,OAAQ,EACRC,QAAS,EACTC,QAAS,EACTC,aAAc,EACdC,QAAS,EACTC,OAAQ,IAGF,EAAAlN,UAAY,EA4B9B,EAnQA,I,6BCtCA,sIA2CA,EAyBI,SAAYmN,EAAuBC,GAC/B,GAAY,MAARD,EA0BA,IAAK,IAAMvR,KAzBXtI,KAAK+Z,UAAYF,EAAKE,UACtB/Z,KAAKga,gBAAkBH,EAAKG,gBAC5Bha,KAAKia,iBAAmBJ,EAAKI,iBAC7Bja,KAAKka,QAAUL,EAAKK,QACpBla,KAAKma,YAAcN,EAAKM,YACxBna,KAAKoa,UAAYP,EAAKO,UACtBpa,KAAKqa,OAASR,EAAKQ,OACnBra,KAAKsa,UAAYT,EAAKS,UAAUC,QAChCva,KAAKwa,QAAUX,EAAKW,QAAQD,QAC5Bva,KAAKya,aAAeZ,EAAKY,aACzBza,KAAK0a,GAAKb,EAAKa,GACf1a,KAAK2a,GAAKd,EAAKc,GACf3a,KAAK4a,GAAKf,EAAKe,GACf5a,KAAK6a,GAAKhB,EAAKgB,GACf7a,KAAK8a,GAAKjB,EAAKiB,GACf9a,KAAK+a,GAAKlB,EAAKkB,GACf/a,KAAKgb,GAAKnB,EAAKmB,GACfhb,KAAKib,GAAKpB,EAAKoB,GACfjb,KAAK0D,EAAImW,EAAKnW,EACd1D,KAAK2D,EAAIkW,EAAKlW,EAEd3D,KAAKkb,KAAOrB,EAAKqB,KACjBlb,KAAKmb,SAAU,EAEfnb,KAAKob,SAAW,GACGvB,EAAKuB,SACpBpb,KAAKob,SAAS9S,GAAQuR,EAAKuB,SAAS9S,QA4BxC,IAAK,IAAMA,KAzBXtI,KAAK+Z,UAAY,KACjB/Z,KAAKga,iBAAkB,EACvBha,KAAKia,iBAAmB,KACxBja,KAAKka,QAAU,SAAOnR,IAAIsM,QAAQQ,eAClC7V,KAAKma,YAAc,SAAOpR,IAAI+M,YAAYG,aAC1CjW,KAAKoa,UAAY,EACjBpa,KAAKqa,OAAS,SAAOtR,IAAI2N,QAAQE,OACjC5W,KAAKsa,UAAY,IAAI,WAAS,KAAM,EAAG,EAAG,GAC1Cta,KAAKwa,QAAU,IAAI,WAAS,KAAM,IAAK,IAAK,KAC5Cxa,KAAKya,aAAe,SAAO1R,IAAI4P,aAAaC,UAC5C5Y,KAAK0a,GAAK,EACV1a,KAAK2a,GAAK,EACV3a,KAAK4a,GAAK,EACV5a,KAAK6a,GAAK,EACV7a,KAAK8a,GAAK,EACV9a,KAAK+a,GAAK,EACV/a,KAAKgb,GAAK,EACVhb,KAAKib,GAAK,EACVjb,KAAK0D,EAAI,EACT1D,KAAK2D,EAAI,EAET3D,KAAKkb,KAAO,KACZlb,KAAKmb,SAAU,EAEfnb,KAAKob,SAAW,GACGtB,EAAY,CAC3B,IAAMuB,EAASvB,EAAWxR,GAC1BtI,KAAKob,SAAS9S,GAAkB,MAAV+S,EAAiBA,EAAOd,QAAU,OAMxE,aAUI,WAAY/V,GACRxE,KAAK6E,KAAOL,EACZxE,KAAKsb,SAAW,KAChBtb,KAAKub,aAAe,GACpBvb,KAAKwb,cAAgB,GAErBxb,KAAK8Z,WAAa,CACd2B,MAAO,IAAI,QAAM,KAAM,MACvBC,IAAK,IAAI,MAAI,KAAM,SAAO3S,IAAI8O,SAASC,SAAU,IAAI,SAAO,KAAM,EAAG,GAAI,IAAI,WAAS,KAAM,EAAG,EAAG,GAAI,EAAG,GACzG6D,KAAM,IAAI,OAAK,KAAM,MACrBC,QAAS,KACTC,OAAQ,MAGZ7b,KAAK8b,MAAQ,IAAIC,EAAgB,KAAM/b,KAAK8Z,YAC5C9Z,KAAKgc,WAAa,CAAChc,KAAK8b,OACxB9b,KAAKic,QAAU,GAyoBvB,OAtoBW,YAAAtS,WAAP,SAAkBpI,GACd,SAAOuG,IAAI,0BAA4BvG,GACvCvB,KAAK8b,MAAM5B,QAAU3Y,EACrBvB,KAAK8b,MAAM/B,UAAY,MAGpB,YAAAmC,aAAP,SAAoBxY,EAAWC,GAC3B,SAAOmE,IAAI,yBAA2BpE,EAAI,MAAQC,GAClD3D,KAAK8b,MAAMpB,GAAKhX,EAChB1D,KAAK8b,MAAMnB,GAAKhX,EAChB3D,KAAK8b,MAAM/B,UAAY,MAGpB,YAAAoC,aAAP,SAAoBzY,EAAWC,GAC3B,SAAOmE,IAAI,yBAA2BpE,EAAI,MAAQC,GAClD3D,KAAK8b,MAAMlB,GAAKlX,EAChB1D,KAAK8b,MAAMjB,GAAKlX,EAChB3D,KAAK8b,MAAM/B,UAAY,MAGpB,YAAAqC,gBAAP,SAAuBC,EAAcC,GACjC,SAAOxU,IAAI,+BAAiCuU,EAAO,SAAWC,GAC9Dtc,KAAK8b,MAAMpB,IAAM2B,EACjBrc,KAAK8b,MAAMnB,IAAM2B,EACjBtc,KAAK8b,MAAM/B,UAAY,MAGpB,YAAAwC,eAAP,SAAsB7Y,EAAWC,GAC7B,SAAOmE,IAAI,2BAA6BpE,EAAI,MAAQC,GACpD3D,KAAK8b,MAAMhB,GAAKpX,EAChB1D,KAAK8b,MAAMf,GAAKpX,EAChB3D,KAAK8b,MAAM/B,UAAY,MAGpB,YAAArQ,eAAP,SAAsBhG,EAAWC,GAC7B,SAAOmE,IAAI,2BAA6BpE,EAAI,MAAQC,GACpD3D,KAAK8b,MAAMd,GAAKtX,EAChB1D,KAAK8b,MAAMb,GAAKtX,EAChB3D,KAAK8b,MAAM/B,UAAY,MAGpB,YAAAyC,kBAAP,SAAyBH,EAAcC,GACnC,SAAOxU,IAAI,iCAAmCuU,EAAO,SAAWC,GAChEtc,KAAK8b,MAAMhB,IAAMuB,EACjBrc,KAAK8b,MAAMf,IAAMuB,EACjBtc,KAAK8b,MAAM/B,UAAY,MAGpB,YAAA0C,OAAP,WACI,SAAO3U,IAAI,gBACX,IAAM4U,EAAY1c,KAAK8b,MACvB9b,KAAK8b,MAAQ,IAAIC,EAAgB/b,KAAK8b,OACtC9b,KAAKgc,WAAWW,KAAKD,GACrB1c,KAAK8b,MAAM/B,UAAY,MAGpB,YAAA6C,UAAP,SAAiBC,GAEb,GADA,SAAO/U,IAAI,0BAA4B+U,KACnC7c,KAAKgc,WAAWhR,OAAS,GASzB,MAAM,IAAI,aAAW,qBARrB,IAAe,IAAX6R,EACA7c,KAAK8b,MAAQ9b,KAAKgc,WAAWc,UAC1B,IAAID,GAAS,EAChB,MAAM,IAAI,aAAW,+CAClB,GAAIA,EAAQ,EACf,MAAM,IAAI,aAAW,+CAM7B7c,KAAK8b,MAAM/B,UAAY,MAGpB,YAAAgD,OAAP,SAAcC,EAAcpV,EAAY+C,EAAgBsS,GACpD,SAAOnV,IAAI,sBAAwBkV,EAAO,WAAarS,EAAS,UAAYsS,IAGzE,YAAAC,kBAAP,SAAyBC,GACrB,SAAOrV,IAAI,wCAA0CqV,IAGlD,YAAAC,WAAP,SAAkBC,EAAcC,EAAcC,EAAcC,EAC1CC,EAAcC,EAAcC,EAAcC,EAC1CC,EAAkBC,EAAoBC,GACpD,SAAOjW,IAAI,0BAA4BuV,EAAO,SAAWC,EAAO,SAAWC,EAAO,SAAWC,EACvF,SAAWC,EAAO,SAAWC,EAAO,SAAWC,EAAO,SAAWC,EACjE,eAAiBC,EAAS/a,SAAS,KACzCua,EAAOrd,KAAKge,QAAQX,GACpBC,EAAOtd,KAAKie,QAAQX,GACpBC,EAAOvd,KAAKke,QAAQX,GACpBC,EAAOxd,KAAKme,QAAQX,GACpBC,EAAOzd,KAAKge,QAAQP,GACpBC,EAAO1d,KAAKie,QAAQP,GACpBC,EAAO3d,KAAKke,QAAQP,GACpBC,EAAO5d,KAAKme,QAAQP,GACpB,SAAO9V,IAAI,sCAAwCuV,EAAO,SAAWC,EAAO,SAAWC,EAAO,SAAWC,EACnG,SAAWC,EAAO,SAAWC,EAAO,SAAWC,EAAO,SAAWC,EACjE,eAAiBC,EAAS/a,SAAS,IAAM,iBAAmBgb,EAAWhb,SAAS,KACtF9C,KAAKoe,aACLpe,KAAK6E,KAAKO,MAAMpF,KAAK8b,MAAM/B,UAAW0D,EAAMC,EAAMC,EAAMC,EAAMG,EAAIM,cAG/D,YAAAC,eAAP,SAAsBjB,EAAcC,EAAcC,EAAcC,EAC1CC,EAAcC,EAAcC,EAAcC,EAC1CC,EAAkBE,GACpC,SAAOjW,IAAI,8BAAgCuV,EAAO,SAAWC,EAAO,SAAWC,EAAO,SAAWC,EAC3F,SAAWC,EAAO,SAAWC,EAAO,SAAWC,EAAO,SAAWC,EACjE,eAAiBC,EAAS/a,SAAS,KACzCua,EAAOrd,KAAKge,QAAQX,GACpBC,EAAOtd,KAAKie,QAAQX,GACpBC,EAAOvd,KAAKke,QAAQX,GACpBC,EAAOxd,KAAKme,QAAQX,GACpBC,EAAOzd,KAAKge,QAAQP,GACpBC,EAAO1d,KAAKie,QAAQP,GACpBC,EAAO3d,KAAKke,QAAQP,GACpBC,EAAO5d,KAAKme,QAAQP,GACpB,SAAO9V,IAAI,0CACMuV,EAAO,SAAWC,EAAO,SAAWC,EAAO,SAAWC,EACjE,SAAWC,EAAO,SAAWC,EAAO,SAAWC,EAAO,SAAWC,EACjE,eAAiBC,EAAS/a,SAAS,KACzC9C,KAAKoe,aACLpe,KAAK6E,KAAKO,MAAMpF,KAAK8b,MAAM/B,UAAW0D,EAAMC,EAAMC,EAAMC,EAAMG,EAAIM,cAG/D,YAAAE,UAAP,SAAiB/Y,EAAYgZ,EAAYC,GACrC,SAAO3W,IAAI,yBAA2BtC,EAAK1C,WAAa,aAAe9C,KAAK8b,MAAMV,SAASM,IAAI5Y,WACzF,cAAgB9C,KAAK8b,MAAMV,SAASK,MAAM3Y,YAChD,IAAMkH,EAAShK,KAAKie,QAAQzY,EAAKwE,QAC3BD,EAAQ/J,KAAKge,QAAQxY,EAAKuE,OAC1BD,EAAM9J,KAAKie,QAAQzY,EAAKsE,KACxBF,EAAO5J,KAAKge,QAAQxY,EAAKoE,MAC/B4U,EAAKxe,KAAKme,QAAQK,GAClBC,EAAKze,KAAKme,QAAQM,GAClB,SAAO3W,IAAI,uCAAyCkC,EAAS,UAAYD,EAAQ,QAAUD,EACrF,SAAWF,EAAO,OAAS6U,EAAK,OAASD,GAC/Cxe,KAAKoe,aAEL,IAAMM,EAAO1e,KAAK2e,WAAW,MAAM,GAAM,GAAM,GAC/C3e,KAAK6E,KAAKW,KAAKxF,KAAK8b,MAAM/B,UAAWnQ,EAAME,EAAKC,EAAQH,EAAMI,EAASF,EAAK0U,EAAK,EAAGC,EAAK,EAAGC,IAGzF,YAAAE,QAAP,SAAelb,EAAWC,EAAWgD,GACjC,SAAOmB,IAAI,oBAAsBpE,EAAI,MAAQC,EAAI,SAAWgD,EACtD,cAAgB3G,KAAK8b,MAAMV,SAASO,KAAK7Y,YAC/CY,EAAI1D,KAAKge,QAAQta,GACjBC,EAAI3D,KAAKie,QAAQta,GACjB,SAAOmE,IAAI,gCAAkCpE,EAAI,MAAQC,GACzD3D,KAAKoe,aAEL,IAAMM,EAAO1e,KAAK2e,WAAW,MAAM,GAAO,GAAO,GAKjD,GAJ4C,IAAxC3e,KAAK8b,MAAMV,SAASO,KAAKkD,aACzBH,EAAKI,UAAY,UAAY,EAAG9e,KAAK8b,MAAMV,SAASO,KAAKkD,WAAa,GAAKnb,EAAGC,GAAK,IACnF+a,EAAKK,MAAQ,kDAEb/e,KAAK8b,MAAMzB,SAAW,SAAOtR,IAAI2N,QAAQE,OAAQ,CACjD,GAAmC,MAA/B5W,KAAK8b,MAAM7B,iBAA0B,CACrC,IAAM+E,EAAW,SAAOxS,cAAc,KAChCnK,EAASrC,KAAK6E,KAAKxC,OAAOrC,KAAKif,aAAcD,EAAU,EAAG,EAAG,EAAG,GACtEhf,KAAK6E,KAAKJ,QAAQrC,MAAMC,EAAQ,KAAM,IAAMrC,KAAK8b,MAAMtB,QAAQ0E,QAAS,GACxElf,KAAK6E,KAAKJ,QAAQzB,UAAUX,EAAQ,KAAM,KAAM,iBAChDrC,KAAK8b,MAAM7B,iBAAmB5X,EAGlCqc,EAAKrc,OAAS,QAAUrC,KAAK8b,MAAM7B,iBAAiBlT,GAAK,IAE7D/G,KAAK6E,KAAK8B,KAAK3G,KAAK8b,MAAM/B,UAAWrW,EAAGC,EAAGgD,EAAM+X,IAG9C,YAAAS,WAAP,SAAkBzb,EAAWC,EAAWgD,EAAcyY,EAAgB5Z,EAAY6Z,GAC9E,SAAOvX,IAAI,uBAAyBpE,EAAI,MAAQC,EAAI,SAAWgD,EACzD,cAAgB3G,KAAK8b,MAAMV,SAASO,KAAK7Y,YAC/CY,EAAI1D,KAAKge,QAAQta,GACjBC,EAAI3D,KAAKie,QAAQta,GACjB,SAAOmE,IAAI,mCAAqCpE,EAAI,MAAQC,GAC5D3D,KAAKoe,aAEL,IAAMM,EAAO1e,KAAK2e,WAAW,MAAM,GAAO,GAAO,GAKjD,GAJ4C,IAAxC3e,KAAK8b,MAAMV,SAASO,KAAKkD,aACzBH,EAAKI,UAAY,UAAY,EAAG9e,KAAK8b,MAAMV,SAASO,KAAKkD,WAAa,GAAKnb,EAAGC,GAAK,IACnF+a,EAAKK,MAAQ,kDAEb/e,KAAK8b,MAAMzB,SAAW,SAAOtR,IAAI2N,QAAQE,OAAQ,CACjD,GAAmC,MAA/B5W,KAAK8b,MAAM7B,iBAA0B,CACrC,IAAM+E,EAAW,SAAOxS,cAAc,KAChCnK,EAASrC,KAAK6E,KAAKxC,OAAOrC,KAAKif,aAAcD,EAAU,EAAG,EAAG,EAAG,GACtEhf,KAAK6E,KAAKJ,QAAQrC,MAAMC,EAAQ,KAAM,IAAMrC,KAAK8b,MAAMtB,QAAQ0E,QAAS,GACxElf,KAAK6E,KAAKJ,QAAQzB,UAAUX,EAAQ,KAAM,KAAM,iBAChDrC,KAAK8b,MAAM7B,iBAAmB5X,EAGlCqc,EAAKrc,OAAS,QAAUrC,KAAK8b,MAAM7B,iBAAiBlT,GAAK,IAE7D/G,KAAK6E,KAAK8B,KAAK3G,KAAK8b,MAAM/B,UAAWrW,EAAGC,EAAGgD,EAAM+X,IAG9C,YAAAY,OAAP,SAAc5b,EAAWC,GACrB,SAAOmE,IAAI,mBAAqBpE,EAAI,MAAQC,EAAI,aAAe3D,KAAK8b,MAAMV,SAASM,IAAI5Y,YACvF,IAAMyc,EAAMvf,KAAKge,QAAQta,GACnB8b,EAAMxf,KAAKie,QAAQta,GACnB8b,EAAQzf,KAAKge,QAAQhe,KAAK8b,MAAMpY,GAChCgc,EAAQ1f,KAAKie,QAAQje,KAAK8b,MAAMnY,GAGtC3D,KAAK8b,MAAMpY,EAAIA,EACf1D,KAAK8b,MAAMnY,EAAIA,EAEf,SAAOmE,IAAI,iCAAmCyX,EAAM,QAAUC,EAAM,UAAYC,EAAQ,UAAYC,GACpG1f,KAAKoe,aAEL,IAAMM,EAAO1e,KAAK2e,WAAW,MAAM,GAAM,GAAO,GAChD3e,KAAK6E,KAAKf,KAAK9D,KAAK8b,MAAM/B,UAAW0F,EAAOC,EAAOH,EAAKC,EAAKd,IAG1D,YAAAiB,OAAP,SAAcjc,EAAWC,GACrB,SAAOmE,IAAI,mBAAqBpE,EAAI,MAAQC,GAC5C3D,KAAK8b,MAAMpY,EAAIA,EACf1D,KAAK8b,MAAMnY,EAAIA,GAGZ,YAAAmC,QAAP,SAAeC,EAAkB6Z,GAC7B,SAAO9X,IAAI,yBAA2B/B,EAAS,aAAe/F,KAAK8b,MAAMV,SAASM,IAAI5Y,WAChF,cAAgB9C,KAAK8b,MAAMV,SAASK,MAAM3Y,YAEhD,IADA,IAAMiB,EAAM,GACH3D,EAAI,EAAGA,EAAI2F,EAAOiF,OAAQ5K,IAAK,CACpC,IAAM6D,EAAQ8B,EAAO3F,GACrB2D,EAAI4Y,KAAK,CAAC3c,KAAKge,QAAQ/Z,EAAMP,GAAI1D,KAAKie,QAAQha,EAAMN,KAExD,SAAOmE,IAAI,kCAAoC/D,GAC3C6b,GACA5f,KAAKoe,aAET,IAAMM,EAAO,CACT,YAAa1e,KAAK8b,MAAMrB,eAAiB,SAAO1R,IAAI4P,aAAaC,UAAY,UAAY,WAE7F5Y,KAAK2e,WAAWD,GAAM,GAAM,GAAM,GAClC1e,KAAK6E,KAAKiB,QAAQ9F,KAAK8b,MAAM/B,UAAWhW,EAAK2a,IAG1C,YAAAmB,YAAP,SAAmBC,GACf,SAAOhY,IAAI,sCAAwCgY,EAAS9U,OACtD,aAAehL,KAAK8b,MAAMV,SAASM,IAAI5Y,WACvC,cAAgB9C,KAAK8b,MAAMV,SAASK,MAAM3Y,YAGhD,IADA,IAAMqI,EAAM2U,EAAS9U,OACZ5K,EAAI,EAAGA,EAAI+K,EAAK/K,IACrBJ,KAAK8F,QAAQga,EAAS1f,GAAU,IAANA,IAI3B,YAAA+F,SAAP,SAAgBJ,GACZ,SAAO+B,IAAI,0BAA4B/B,EAAS,aAAe/F,KAAK8b,MAAMV,SAASM,IAAI5Y,YAEvF,IADA,IAAMiB,EAAM,GACH3D,EAAI,EAAGA,EAAI2F,EAAOiF,OAAQ5K,IAAK,CACpC,IAAM6D,EAAQ8B,EAAO3F,GACrB2D,EAAI4Y,KAAK,CAAC3c,KAAKge,QAAQ/Z,EAAMP,GAAI1D,KAAKie,QAAQha,EAAMN,KAExD,SAAOmE,IAAI,mCAAqC/D,GAChD/D,KAAKoe,aACL,IAAMM,EAAO1e,KAAK2e,WAAW,CAACoB,KAAM,SAAS,GAAM,GAAO,GAC1D/f,KAAK6E,KAAKsB,SAASnG,KAAK8b,MAAM/B,UAAWhW,EAAK2a,IAG3C,YAAArY,QAAP,SAAeb,GACX,SAAOsC,IAAI,uBAAyBtC,EAAK1C,WAAa,aAAe9C,KAAK8b,MAAMV,SAASM,IAAI5Y,WACvF,cAAgB9C,KAAK8b,MAAMV,SAASK,MAAM3Y,YAChD,IAAMkH,EAAShK,KAAKie,QAAQzY,EAAKwE,QAC3BD,EAAQ/J,KAAKge,QAAQxY,EAAKuE,OAC1BD,EAAM9J,KAAKie,QAAQzY,EAAKsE,KACxBF,EAAO5J,KAAKge,QAAQxY,EAAKoE,MAC/B,SAAO9B,IAAI,qCAAuCkC,EAAS,UAAYD,EAAQ,QAAUD,EAAM,SAAWF,GAC1G5J,KAAKoe,aACL,IAAM4B,GAAUjW,EAAQH,GAAQ,EAC1BqW,GAAWjW,EAASF,GAAO,EAC3B4U,EAAO1e,KAAK2e,WAAW,MAAM,GAAM,GAAM,GAC/C3e,KAAK6E,KAAKwB,QAAQrG,KAAK8b,MAAM/B,UAAWnQ,EAAOoW,EAAQlW,EAAMmW,EAASD,EAAQC,EAASvB,IAGpF,YAAAwB,gBAAP,SAAuB1a,GACnB,SAAOsC,IAAI,+BAAiCtC,EAAK1C,YACjD9C,KAAKmgB,cAAcC,SAAS5a,IAGzB,YAAA6a,kBAAP,SAAyB7a,GACrB,SAAOsC,IAAI,iCAAmCtC,EAAK1C,YACnD9C,KAAKmgB,cAAcG,UAAU9a,IAG1B,YAAA+a,cAAP,SAAqBlE,EAAcC,GAC/B,SAAOxU,IAAI,6BAA+BuU,EAAO,SAAWC,GAC5Dtc,KAAKmgB,cAAcxV,OAAO0R,EAAMC,IAG7B,YAAAkE,aAAP,SAAoBC,GAChB,SAAO3Y,IAAI,2CAA6C2Y,EAAkB3d,SAAS,KACnF9C,KAAK8b,MAAM1B,UAAYqG,GAGpB,YAAAC,UAAP,SAAiBC,GACb,SAAO7Y,IAAI,6BAA+B6Y,EAAO7d,SAAS,KAC1D9C,KAAK8b,MAAMzB,OAASsG,GAGjB,YAAAC,aAAP,SAAoBC,GAChB,SAAO/Y,IAAI,iCAAmC+Y,EAAU/d,YACxD9C,KAAK8b,MAAMxB,UAAYuG,GAGpB,YAAAC,WAAP,SAAkBC,GACd,SAAOjZ,IAAI,6BAA+BiZ,EAAQje,YAClD9C,KAAK8b,MAAMtB,QAAUuG,EACrB/gB,KAAK8b,MAAM7B,iBAAmB,MAG3B,YAAA+G,gBAAP,SAAuBC,GACnB,SAAOnZ,IAAI,uCAAyCmZ,GACpDjhB,KAAK8b,MAAMrB,aAAewG,GAGvB,YAAAC,YAAP,SAAmBzF,GACf,IAAM0F,EAAMnhB,KAAKohB,aAAa3F,GAC9B,SAAO3T,IAAI,4BAA8B2T,EAAM3Y,WAAa,gBAAkBqe,IAG3E,YAAAE,WAAP,SAAkB1F,GACd,IAAMwF,EAAMnhB,KAAKohB,aAAazF,GAC9B,SAAO7T,IAAI,0BAA4B6T,EAAK7Y,WAAa,gBAAkBqe,IAGxE,YAAAG,UAAP,SAAiB5F,GACb,IAAMyF,EAAMnhB,KAAKohB,aAAa1F,GAC9B,SAAO5T,IAAI,wBAA0B4T,EAAI5Y,WAAa,iBAAmBqe,IAGtE,YAAAI,cAAP,SAAqB3F,GACjB,IAAMuF,EAAMnhB,KAAKohB,aAAaxF,GAC9B,SAAO9T,IAAI,gCAAkC8T,EAAQ9Y,WAAa,iBAAmBqe,IAGlF,YAAAK,aAAP,SAAoB3F,GAChB,IAAMsF,EAAMnhB,KAAKohB,aAAavF,GAC9B,SAAO/T,IAAI,8BAAgC+T,EAAO/Y,WAAa,iBAAmBqe,IAG/E,YAAAM,mBAAP,SAA0BC,GACtB,IAAMP,EAAMnhB,KAAKohB,aAAaM,GAC9B,SAAO5Z,IAAI,8BAAgC4Z,EAAa5e,WAAa,iBAAmBqe,IAGrF,YAAAQ,aAAP,SAAoBC,EAAgBC,GAChC,IAAMC,EAAM9hB,KAAK+hB,WAAWH,GACjB,MAAPE,GAA6B,MAAbD,GAAqBC,EAAIxZ,OAASuZ,EAKlD,SAAO/Z,IAAI,8BAAgC8Z,GACpCE,EAAM,yBAA2BA,EAAIxZ,KAAO,qBALnDtI,KAAKgiB,cAAcF,GACnB,SAAOha,IAAI,8BAAgC8Z,GACpCE,EAAM,aAAeA,EAAIxZ,KAAO,KAAOwZ,EAAIhf,WAAa,sBAOhE,YAAAmf,aAAP,SAAoBL,GAChB,IAAMtW,EAAMtL,KAAKkiB,cAAcN,GAC/B,SAAO9Z,IAAI,8BAAgC8Z,GAAUtW,EAAM,kBAAoB,qBAG3E,YAAA8S,WAAR,WACI,GAA4B,MAAxBpe,KAAK8b,MAAM/B,WAAqB/Z,KAAK8b,MAAM9B,gBAAiB,CAC5Dha,KAAK8b,MAAM9B,iBAAkB,EAC7Bha,KAAK8b,MAAM7B,iBAAmB,KAE9B,IAAMhV,EAAgB,CAClBkd,QAAS,CAACniB,KAAK8b,MAAMhB,GAAI9a,KAAK8b,MAAMf,GAAI/a,KAAK8b,MAAMd,GAAIhb,KAAK8b,MAAMb,IAAI/U,KAAK,KAC3Ekc,oBAAqB,QAEF,MAAnBpiB,KAAK8b,MAAMZ,MACX,SAAOpT,IAAI,mBAAqB9H,KAAK8b,MAAMhB,GAAK,MAAQ9a,KAAK8b,MAAMf,GAC7D,UAAY/a,KAAK8b,MAAMd,GAAK,WAAahb,KAAK8b,MAAMb,GAAK,kBAC/DhW,EAAS,aAAe,QAAUjF,KAAKqiB,yBAAyBriB,KAAK8b,MAAMZ,MAAQ,KAEnF,SAAOpT,IAAI,mBAAqB9H,KAAK8b,MAAMhB,GAAK,MAAQ9a,KAAK8b,MAAMf,GAC7D,UAAY/a,KAAK8b,MAAMd,GAAK,WAAahb,KAAK8b,MAAMb,GAAK,qBAEnEjb,KAAK8b,MAAM/B,UAAY/Z,KAAK6E,KAAKL,IAAIxE,KAAK8b,MAAM/B,UAC5C/Z,KAAK8b,MAAMhB,GAAI9a,KAAK8b,MAAMf,GAAI/a,KAAK8b,MAAMd,GAAIhb,KAAK8b,MAAMb,GAAIhW,KAIhE,YAAAmc,aAAR,SAAqBU,GAEjB,IADA,IAAI1hB,EAAI,EAC6B,MAA9BJ,KAAKic,QAAQ7b,EAAE0C,aAAuB1C,GAAK,OAC9CA,IAEJ,OAAIA,EAAI,OACJ,SAAO0H,IAAI,4BACH,IAGZ9H,KAAKic,QAAQ7b,EAAE0C,YAAcgf,EACtB1hB,IAGH,YAAA2hB,WAAR,SAAmBH,GACf,IAAME,EAAM9hB,KAAKic,QAAQ2F,EAAO9e,YAIhC,OAHW,MAAPgf,GACA,SAAOha,IAAI,+BAAiC8Z,GAEzCE,GAGH,YAAA7C,WAAR,WAII,OAHqB,MAAjBjf,KAAKsb,WACLtb,KAAKsb,SAAWtb,KAAK6E,KAAKsC,QAEvBnH,KAAKsb,UAGR,YAAA+G,yBAAR,SAAiCxG,GAC7B,IAAK,IAAMyG,KAActiB,KAAKwb,cAAe,CAEzC,GADYxb,KAAKwb,cAAc8G,KACnBzG,EACR,OAAOyG,EAIf,IAAMvb,EAAK,SAAOyF,cAAc,KAC1B+V,EAAQviB,KAAK6E,KAAKwC,SAASrH,KAAKif,aAAclY,EAAI,kBACxD,OAAQ8U,EAAO2G,YACX,KAAK,EACDxiB,KAAK6E,KAAKW,KAAK+c,EAAOviB,KAAKge,QAAQnC,EAAO4G,OAAO7Y,MAAO5J,KAAKie,QAAQpC,EAAO4G,OAAO3Y,KAC/E9J,KAAKke,QAAQrC,EAAO4G,OAAO1Y,MAAQ8R,EAAO4G,OAAO7Y,MACjD5J,KAAKme,QAAQtC,EAAO4G,OAAOzY,OAAS6R,EAAO4G,OAAO3Y,KAClD,CAAE,KAAQ,QAAS,eAAgB,IACvC,MACJ,KAAK,EACD,IAAK,IAAI1J,EAAI,EAAGA,EAAIyb,EAAO6G,MAAM1X,OAAQ5K,IAErC,IADA,IAAMuiB,EAAO9G,EAAO6G,MAAMtiB,GACjBwiB,EAAI,EAAGA,EAAID,EAAKE,UAAU7X,OAAQ4X,IAAK,CAC5C,IAAME,EAAWH,EAAKE,UAAUD,GAChC5iB,KAAK6E,KAAKW,KAAK+c,EAAOviB,KAAKge,QAAQ8E,EAASlZ,MAAO5J,KAAKie,QAAQ0E,EAAK7Y,KACjE9J,KAAKke,QAAQ4E,EAAS/Y,MAAQ+Y,EAASlZ,MAAO5J,KAAKme,QAAQwE,EAAK3Y,OAAS2Y,EAAK7Y,KAC9E,CAAE,KAAQ,QAAS,eAAgB,KAMvD,OADA9J,KAAKwb,cAAczU,GAAM8U,EAClB9U,GAGH,YAAAgc,uBAAR,SAA+BtH,GAC3B,IAAK,IAAM6G,KAActiB,KAAKub,aAAc,CAExC,GADYvb,KAAKub,aAAa+G,KAClB7G,EACR,OAAO6G,EAIf,IAAIvd,EACAC,EACAge,EACJ,OAAQvH,EAAMsD,OACV,KAAK,SAAOhW,IAAImO,WAAWI,WACvBvS,EAAQ0W,EAAMxU,QAAQgc,WACtBje,EAASyW,EAAMxU,QAAQic,YACvB,MACJ,KAAK,SAAOna,IAAImO,WAAWO,gBACvB1S,EAAQ0W,EAAM0H,aAAaF,WAC3Bje,EAASyW,EAAM0H,aAAaD,YAC5BF,EAAMvH,EAAM0H,aAAa9E,YACzB,MACJ,QACI,MAAM,IAAI,aAAW,uBAG7B,IAAMtX,EAAK,SAAOyF,cAAc,KAC1B4W,EAAOpjB,KAAK6E,KAAKoC,QAAQjH,KAAKif,aAAclY,EAAI,EAAG,EAAGhC,EAAOC,EAAQ,CAACqe,aAAc,mBAG1F,OAFArjB,KAAK6E,KAAKO,MAAMge,EAAM,EAAG,EAAGre,EAAOC,EAAQge,GAC3ChjB,KAAKub,aAAaxU,GAAM0U,EACjB1U,GAGH,YAAAib,cAAR,SAAsBF,GAClB9hB,KAAK8b,MAAMV,SAAS0G,EAAIxZ,MAAQwZ,EACf,WAAbA,EAAIxZ,OACJtI,KAAK8b,MAAM9B,iBAAkB,IAI7B,YAAAkI,cAAR,SAAsBN,GAClB,IAAME,EAAM9hB,KAAKic,QAAQ2F,EAAO9e,YAChC,GAAW,MAAPgf,EAAa,CACb,IAAK,IAAI1hB,EAAI,EAAGA,EAAIJ,KAAKgc,WAAWhR,OAAQ5K,IAAK,CAC7C,IAAM0b,EAAQ9b,KAAKgc,WAAW5b,GAC1B0b,EAAMV,SAAS0G,EAAIxZ,QAAUwZ,IAC7BhG,EAAMV,SAAS0G,EAAIxZ,MAAQtI,KAAK8Z,WAAWgI,EAAIxZ,MAAMiS,SAI7D,cADOva,KAAKic,QAAQ2F,EAAO9e,aACpB,EAIX,OADA,SAAOgF,IAAI,kDAAoD8Z,IACxD,GAGH,YAAAzB,YAAR,WAcI,OAbuB,MAAnBngB,KAAK8b,MAAMZ,KACNlb,KAAK8b,MAAMX,UACZnb,KAAK8b,MAAMZ,KAAOlb,KAAK8b,MAAMZ,KAAKX,SAGJ,MAA9Bva,KAAK8b,MAAMV,SAASS,OACpB7b,KAAK8b,MAAMZ,KAAOlb,KAAK8b,MAAMV,SAASS,OAAOtB,QAE7Cva,KAAK8b,MAAMZ,KAAO,6BAAmBlb,KAAK8b,MAAMpB,GAAI1a,KAAK8b,MAAMnB,GAAI3a,KAAK8b,MAAMpB,GAAK1a,KAAK8b,MAAMlB,GAC1F5a,KAAK8b,MAAMnB,GAAK3a,KAAK8b,MAAMjB,IAGvC7a,KAAK8b,MAAMX,SAAU,EACdnb,KAAK8b,MAAMZ,MAGd,YAAA8C,QAAR,SAAgBpS,GAGZ,OAAO0X,KAAKC,OAAO3X,EAAM5L,KAAK8b,MAAMpB,KAAO1a,KAAK8b,MAAMd,GAAKhb,KAAK8b,MAAMlB,KAAO5a,KAAK8b,MAAMhB,IAGpF,YAAAmD,QAAR,SAAgBrS,GAGZ,OAAO0X,KAAKC,OAAO3X,EAAM5L,KAAK8b,MAAMnB,KAAO3a,KAAK8b,MAAMb,GAAKjb,KAAK8b,MAAMjB,KAAO7a,KAAK8b,MAAMf,IAGpF,YAAAmD,QAAR,SAAgBtS,GAGZ,OAAO0X,KAAKC,MAAM3X,GAAO5L,KAAK8b,MAAMd,GAAKhb,KAAK8b,MAAMlB,KAAO5a,KAAK8b,MAAMhB,IAGlE,YAAAqD,QAAR,SAAgBvS,GAGZ,OAAO0X,KAAKC,MAAM3X,GAAO5L,KAAK8b,MAAMb,GAAKjb,KAAK8b,MAAMjB,KAAO7a,KAAK8b,MAAMf,IAGlE,YAAAyI,YAAR,SAAoB5X,GAGhB,OAAO0X,KAAKC,OAAO3X,EAAM5L,KAAK8b,MAAMhB,KAAO9a,KAAK8b,MAAMd,GAAKhb,KAAK8b,MAAMlB,KAAO5a,KAAK8b,MAAMpB,IAGpF,YAAA+I,YAAR,SAAoB7X,GAGhB,OAAO0X,KAAKC,OAAO3X,EAAM5L,KAAK8b,MAAMf,KAAO/a,KAAK8b,MAAMb,GAAKjb,KAAK8b,MAAMjB,KAAO7a,KAAK8b,MAAMnB,IAGpF,YAAA+I,YAAR,SAAoB9X,GAGhB,OAAO0X,KAAKC,MAAM3X,GAAO5L,KAAK8b,MAAMd,GAAKhb,KAAK8b,MAAMlB,KAAO5a,KAAK8b,MAAMpB,IAGlE,YAAAiJ,YAAR,SAAoB/X,GAGhB,OAAO0X,KAAKC,MAAM3X,GAAO5L,KAAK8b,MAAMb,GAAKjb,KAAK8b,MAAMjB,KAAO7a,KAAK8b,MAAMnB,IAGlE,YAAAgE,WAAR,SAAmBD,EAAWkF,EAAiBC,EAAmBC,GAI9D,GAHY,MAARpF,IACAA,EAAO,IAEPkF,EAAQ,CACR,IAAMlI,EAAM1b,KAAK8b,MAAMV,SAASM,IAChC,GAAIA,EAAIqD,QAAU,SAAOhW,IAAI8O,SAASM,QAAS,CAC3CuG,EAAKqF,OAAU,IAAMrI,EAAInZ,MAAM2c,QAC3BR,EAAK,gBAAkB1e,KAAKke,QAAQxC,EAAI3W,MAAMrB,GAElD,IAAIsgB,OAAQ,EACiD,IAAxDtI,EAAIuI,QAAU,SAAOlb,IAAI8O,SAASU,mBACnCmG,EAAK,kBAAoB,SACzBsF,EAAW,GACmD,IAAtDtI,EAAIuI,QAAU,SAAOlb,IAAI8O,SAASW,iBAC1CkG,EAAK,kBAAoB,OACzBsF,EAAWtF,EAAK,kBAEhBA,EAAK,kBAAoB,QACzBsF,EAAW,GAGwC,IAAlDtI,EAAIxV,KAAO,SAAO6C,IAAI8O,SAASY,eAChCiG,EAAK,mBAAqB,QACgC,IAAlDhD,EAAIxV,KAAO,SAAO6C,IAAI8O,SAASa,eACvCgG,EAAK,mBAAqB,QAE1BA,EAAK,mBAAqB,QAG9B,IAAMwF,EAAmC,EAAvBxF,EAAK,gBACjByF,EAAqC,EAAxBzF,EAAK,gBACxB,OAAQhD,EAAIqD,OACR,KAAK,SAAOhW,IAAI8O,SAASE,QACrB2G,EAAK,oBAAsB,CAACwF,EAAWC,GAAYrhB,WACnD,MACJ,KAAK,SAAOiG,IAAI8O,SAASG,OACrB0G,EAAK,oBAAsB,CAACsF,EAAUG,GAAYrhB,WAClD,MACJ,KAAK,SAAOiG,IAAI8O,SAASI,WACrByG,EAAK,oBAAsB,CAACwF,EAAWC,EAAYH,EAAUG,GAAYrhB,WACzE,MACJ,KAAK,SAAOiG,IAAI8O,SAASK,cACrBwG,EAAK,oBACC,CAACwF,EAAWC,EAAYH,EAAUG,EAAYH,EAAUG,GAAYrhB,aAK1F,GAAI+gB,EAAU,CACV,IAAMpI,EAAQzb,KAAK8b,MAAMV,SAASK,MAClC,OAAQA,EAAMsD,OACV,KAAK,SAAOhW,IAAImO,WAAWC,SACvBuH,EAAKqB,KAAO,IAAMtE,EAAMlZ,MAAM2c,QAC9B,MACJ,KAAK,SAAOnW,IAAImO,WAAWI,WAC3B,KAAK,SAAOvO,IAAImO,WAAWO,gBACvBiH,EAAKqB,KAAO,QAAU/f,KAAK+iB,uBAAuBtH,GAAS,IAC3D,MACJ,KAAK,SAAO1S,IAAImO,WAAWE,QACvBsH,EAAKqB,KAAO,OACZ,MACJ,QACI,SAAOjY,IAAI,kCAAoC2T,EAAMsD,OACrDL,EAAKqB,KAAO,QAIxB,GAAI+D,EAAS,CACT,IAAMnI,EAAO3b,KAAK8b,MAAMV,SAASO,KACjC+C,EAAK,eAAiB/C,EAAKyI,SAC3B1F,EAAK,aAAe1e,KAAKme,QAAQmF,KAAKe,IAAI1I,EAAK3W,SAC/C0Z,EAAKqB,KAAO,IAAM/f,KAAK8b,MAAMxB,UAAU4E,QAE3C,OAAOR,GAEf,EAnqBA,I,6BCpIA,mIA6BA,aAII,WAAYhW,EAAchF,EAAYC,GACpB,MAAV+E,GACA1I,KAAK0D,EAAIgF,EAAOmB,YAChB7J,KAAK2D,EAAI+E,EAAOmB,cAEhB7J,KAAK0D,EAAIA,EACT1D,KAAK2D,EAAIA,GAWrB,OAPW,YAAA4W,MAAP,WACI,OAAO,IAAI+J,EAAO,KAAMtkB,KAAK0D,EAAG1D,KAAK2D,IAGlC,YAAAb,SAAP,WACI,MAAO,OAAS9C,KAAK0D,EAAI,QAAU1D,KAAK2D,EAAI,KAEpD,EArBA,GAuBA,aAMI,WAAY+E,EAAckB,EAAeE,EAAcC,EAAgBC,GACrD,MAAVtB,GACA1I,KAAKgK,OAAStB,EAAOmB,YACrB7J,KAAK+J,MAAQrB,EAAOmB,YACpB7J,KAAK8J,IAAMpB,EAAOmB,YAClB7J,KAAK4J,KAAOlB,EAAOmB,cAEnB7J,KAAKgK,OAASA,EACdhK,KAAK+J,MAAQA,EACb/J,KAAK8J,IAAMA,EACX9J,KAAK4J,KAAOA,GA4BxB,OAxBW,YAAA2Q,MAAP,WACI,OAAO,IAAIgK,EAAK,KAAMvkB,KAAK4J,KAAM5J,KAAK8J,IAAK9J,KAAK+J,MAAO/J,KAAKgK,SAGzD,YAAAlH,SAAP,WACI,MAAO,UAAY9C,KAAK4J,KAAO,UAAY5J,KAAK8J,IAAM,YAAc9J,KAAK+J,MACnE,aAAe/J,KAAKgK,OAAS,KAGhC,YAAAwa,MAAP,WACI,OAAOxkB,KAAK4J,MAAQ5J,KAAK+J,OAAS/J,KAAK8J,KAAO9J,KAAKgK,QAGhD,YAAAsW,UAAP,SAAiB9a,GACb,OAAIxF,KAAKwkB,SAAWhf,EAAKgf,QACd,KAEPxkB,KAAK4J,MAAQpE,EAAKuE,OAAS/J,KAAK8J,KAAOtE,EAAKwE,QAC5ChK,KAAK+J,OAASvE,EAAKoE,MAAQ5J,KAAKgK,QAAUxE,EAAKsE,IACxC,KAEJ,IAAIya,EAAK,KAAMjB,KAAKmB,IAAIzkB,KAAK4J,KAAMpE,EAAKoE,MAAO0Z,KAAKmB,IAAIzkB,KAAK8J,IAAKtE,EAAKsE,KAC1EwZ,KAAKoB,IAAI1kB,KAAK+J,MAAOvE,EAAKuE,OAAQuZ,KAAKoB,IAAI1kB,KAAKgK,OAAQxE,EAAKwE,UAEzE,EA5CA,GA8CA,aAGI,WAAY1B,GACRtI,KAAKsI,KAAOA,EAUpB,OAPW,YAAAiS,MAAP,WACI,MAAM,IAAI,aAAW,0BAGlB,YAAAzX,SAAP,WACI,MAAM,IAAI,aAAW,6BAE7B,EAdA,I,6BClGA,0I,EAAA,gB,oTA8BA,cAKI,WAAY4F,EAAcmR,GAA1B,MACI,YAAM,WAAS,KACf,GAAc,MAAVnR,EAAgB,CAEhB,GADAA,EAAOuB,KAAK,GACe,IAAvBvB,EAAOmB,YACP,MAAM,IAAI,aAAW,6BAEzBnB,EAAOuB,KAAK,GACIvB,EAAOmB,YAAvB,IACM8a,EAAUjc,EAAOmB,YACvBnB,EAAOuB,KAAK,GAEZ,IAAML,EAAOlB,EAAOmB,YACd,EAAMnB,EAAOmB,YACbE,EAAQrB,EAAOmB,YACfG,EAAStB,EAAOmB,YACtB,EAAK4Y,OAAS,IAAI,OAAK,KAAM7Y,EAAM,EAAKG,EAAOC,GAC/C,EAAK0Y,MAAQ,GACb,IAAK,IAAItiB,EAAI,EAAGA,EAAIukB,EAASvkB,IACzB,EAAKsiB,MAAM/F,KAAK,IAAIiI,EAAKlc,IAE7B,EAAKmc,yBACF,GAAY,MAARhL,EAAc,CAErB,GADA,EAAK4I,OAAwB,MAAf5I,EAAK4I,OAAiB5I,EAAK4I,OAAOlI,QAAU,KACxC,MAAdV,EAAK6I,MAAe,CACpB,EAAKA,MAAQ,GACb,IAAStiB,EAAI,EAAGA,EAAIyZ,EAAK6I,MAAM1X,OAAQ5K,IACnC,EAAKsiB,MAAM/F,KAAK9C,EAAK6I,MAAMtiB,GAAGma,cAGlC,EAAKmI,MAAQ,KAEjB,EAAKF,WAAa3I,EAAK2I,gBAEvB,EAAKC,OAAS,KACd,EAAKC,MAAQ,KACb,EAAKF,WAAa,E,SA2P9B,OApS4B,OA6CjB,YAAAjI,MAAP,WACI,OAAO,IAAIuK,EAAO,KAAM9kB,OAGrB,YAAA8C,SAAP,WAEI,MAAO,gBADa,CAAC,OAAQ,SAAU,WACF9C,KAAKwiB,YACpC,aAA8B,MAAfxiB,KAAKyiB,OAAiBziB,KAAKyiB,OAAO3f,WAAa,UAC9D,aAA6B,MAAd9C,KAAK0iB,MAAgB1iB,KAAK0iB,MAAM1X,OAAS,UAAY,KAGvE,YAAA6Z,kBAAP,WACI,GAAmB,MAAf7kB,KAAKyiB,OACLziB,KAAKwiB,WAAa,EAClBxiB,KAAK0iB,MAAQ,UACV,GAAI1iB,KAAKyiB,OAAO+B,QACnBxkB,KAAKwiB,WAAa,EAClBxiB,KAAK0iB,MAAQ,KACb1iB,KAAKyiB,OAAS,UACX,GAAkB,MAAdziB,KAAK0iB,MACZ1iB,KAAKwiB,WAAa,OAGlB,GADAxiB,KAAKwiB,WAAa,EACQ,IAAtBxiB,KAAK0iB,MAAM1X,OAAc,CACzB,IAAM2X,EAAO3iB,KAAK0iB,MAAM,GACxB,GAAIC,EAAK7Y,MAAQ9J,KAAKyiB,OAAO3Y,KAAO6Y,EAAK3Y,SAAWhK,KAAKyiB,OAAOzY,QAAoC,IAA1B2Y,EAAKE,UAAU7X,OAAc,CACnG,IAAM8X,EAAWH,EAAKE,UAAU,GAC5BC,EAASlZ,OAAS5J,KAAKyiB,OAAO7Y,MAAQkZ,EAAS/Y,QAAU/J,KAAKyiB,OAAO1Y,QACrE/J,KAAK0iB,MAAQ,KACb1iB,KAAKwiB,WAAa,MAO/B,YAAApC,SAAP,SAAgB5a,GAGZ,IAFA,SAAOsC,IAAI,gBAAkB9H,KAAK8C,WAAa,aAAe0C,EAAK1C,YAEhD,MAAf9C,KAAKyiB,SAEQ,MADCziB,KAAKyiB,OAAOnC,UAAU9a,GACjB,CACG,MAAdxF,KAAK0iB,QAIL1iB,KAAK0iB,MAAQ,GACb1iB,KAAK0iB,MAAM/F,KAAM,IAAIiI,EAAK,KAAM,KAAM5kB,KAAKyiB,OAAO3Y,IAAK9J,KAAKyiB,OAAOzY,OAC/D,CAAC,CAACJ,KAAM5J,KAAKyiB,OAAO7Y,KAAMG,MAAO/J,KAAKyiB,OAAO1Y,UACjD/J,KAAKwiB,WAAa,GAMtB,IADA,IAAIuC,EAAK,EACFA,EAAK/kB,KAAK0iB,MAAM1X,QAAQ,CAE3B,IADM2X,EAAO3iB,KAAK0iB,MAAMqC,IACf/a,QAAUxE,EAAKsE,IAAK,CAEzB,IAAMkb,EAASrC,EAAKpI,QACpBoI,EAAK3Y,OAASxE,EAAKsE,IAAM,EACzBkb,EAAOlb,IAAMtE,EAAKsE,IACd6Y,EAAK7Y,KAAO6Y,EAAK3Y,OACjBhK,KAAK0iB,MAAMqC,GAAMC,GAEjB,SAAOld,IAAI,+BAAiCid,EAAK,qBACjD/kB,KAAK0iB,MAAMuC,SAASF,EAAI,EAAGC,IAE/B,MAEJD,IAMJ,IADA,IAAMnF,EAAQmF,EACPA,EAAK/kB,KAAK0iB,MAAM1X,QAAQ,CAE3B,IADM2X,EAAO3iB,KAAK0iB,MAAMqC,IACfjb,IAAMtE,EAAKwE,OAChB,MAEJ,GAAI2Y,EAAK3Y,OAASxE,EAAKwE,OAAQ,CAErBgb,EAASrC,EAAKpI,QACpBoI,EAAK3Y,OAASxE,EAAKwE,OACnBgb,EAAOlb,IAAMtE,EAAKwE,OAAS,EACvB2Y,EAAK7Y,KAAO6Y,EAAK3Y,OACjBhK,KAAK0iB,MAAMqC,GAAMC,GAEjB,SAAOld,IAAI,kCAAoCid,EAAK,qBACpD/kB,KAAK0iB,MAAMuC,SAASF,EAAI,EAAGC,IAE/B,MAEJD,IAMJ,GAAInF,EAAQ5f,KAAK0iB,MAAM1X,OAAQ,CAC3B,IAAIka,EAAOH,EAEX,IADAA,EAAKnF,EACEmF,EAAKG,GAAM,EACRvC,EAAO3iB,KAAK0iB,MAAMqC,IACd3E,SAAS5a,EAAKoE,KAAMpE,EAAKuE,OAOnCgb,KANI,SAAOjd,IAAI,sCAAwCid,EAAK,uBACxD/kB,KAAK0iB,MAAMuC,OAAOF,EAAI,GACtBG,MASZ,GAAkB,MAAdllB,KAAK0iB,MAAe,CAMpB,IALA,IACI,EADA9Y,OAAI,EAEJG,OAAK,EACLC,OAAM,EACJ8C,EAAM9M,KAAK0iB,MAAM1X,OACd5K,EAAI,EAAGA,EAAI0M,EAAK1M,IAAK,CAC1B,IAAMuiB,EAAO3iB,KAAK0iB,MAAMtiB,GACd,IAANA,IACA,EAAMuiB,EAAK7Y,KAEX1J,IAAM0M,EAAM,IACZ9C,EAAS2Y,EAAK3Y,QAGlB,IAAMmb,EAAOxC,EAAKE,UAAU7X,OAC5B,GAAIma,EAAO,EAAG,CACV,IAAIrC,EAAWH,EAAKE,UAAU,IAClB,MAARjZ,GAAgBkZ,EAASlZ,KAAOA,KAChCA,EAAOkZ,EAASlZ,MAEpBkZ,EAAWH,EAAKE,UAAUsC,EAAO,IACpB,MAATpb,GAAiB+Y,EAAS/Y,MAAQA,KAClCA,EAAQ+Y,EAAS/Y,QAKjB,MAARH,GAAuB,MAAP,GAAwB,MAATG,GAA2B,MAAVC,GAChDhK,KAAKyiB,OAAS,IAAI,OAAK,KAAM7Y,EAAM,EAAKG,EAAOC,GAC/ChK,KAAK6kB,sBAGL7kB,KAAKyiB,OAAS,KACdziB,KAAK0iB,MAAQ,KACb1iB,KAAKwiB,WAAa,QAGtBxiB,KAAK6kB,oBAKjB,SAAO/c,IAAI,+BAAiC9H,KAAK8C,aAG9C,YAAAwd,UAAP,SAAiB9a,GAEb,GADA,SAAOsC,IAAI,gBAAkB9H,KAAK8C,WAAa,mBAAqB0C,EAAK1C,YACtD,MAAf9C,KAAKyiB,OAEL,GADAziB,KAAKyiB,OAASziB,KAAKyiB,OAAOnC,UAAU9a,GACjB,MAAfxF,KAAKyiB,QACL,GAAkB,MAAdziB,KAAK0iB,MAAe,CAGpB,IAFA,IAAIqC,EAAK,EAEFA,EAAK/kB,KAAK0iB,MAAM1X,QAAQ,CAE3B,MADM2X,EAAO3iB,KAAK0iB,MAAMqC,IACf/a,OAAShK,KAAKyiB,OAAO3Y,KAG1B,MAFAib,IAiBR,IAZIA,EAAK,IACL,SAAOjd,IAAI,uBAAyBid,EAAK,mBACzC/kB,KAAK0iB,MAAMuC,OAAO,EAAGF,GAGjB/kB,KAAK0iB,MAAM1X,OAAS,IACpBhL,KAAK0iB,MAAM,GAAG5Y,IAAM9J,KAAKyiB,OAAO3Y,MAKxCib,EAAK,EACEA,EAAK/kB,KAAK0iB,MAAM1X,QAAQ,CAC3B,IAAM2X,EACN,IADMA,EAAO3iB,KAAK0iB,MAAMqC,IACfjb,IAAM9J,KAAKyiB,OAAOzY,OAAQ,CAE/B,SAAOlC,IAAI,wBAA0B9H,KAAK0iB,MAAM1X,OAAS+Z,GAAM,sBAC/D/kB,KAAK0iB,MAAMuC,OAAOF,EAAI/kB,KAAK0iB,MAAM1X,OAAS+Z,GAC1C,MAECpC,EAAKrC,UAAUtgB,KAAKyiB,OAAO7Y,KAAM5J,KAAKyiB,OAAO1Y,OAMlDgb,KAJI,SAAOjd,IAAI,sCAAwCid,EAAK,wBACxD/kB,KAAK0iB,MAAMuC,OAAOF,EAAI,IAO1B/kB,KAAK0iB,MAAM1X,OAAS,IACpBhL,KAAK0iB,MAAM1iB,KAAK0iB,MAAM1X,OAAS,GAAGhB,OAAShK,KAAKyiB,OAAOzY,QAG3DhK,KAAK6kB,0BAGT7kB,KAAK0iB,MAAQ,KACb1iB,KAAKwiB,WAAa,EAG1B,SAAO1a,IAAI,gCAAkC9H,KAAK8C,aAG/C,YAAA6H,OAAP,SAAc0R,EAAcC,GAQxB,GAPmB,MAAftc,KAAKyiB,SACLziB,KAAKyiB,OAAO7Y,MAAQyS,EACpBrc,KAAKyiB,OAAO3Y,KAAOwS,EACnBtc,KAAKyiB,OAAO1Y,OAASsS,EACrBrc,KAAKyiB,OAAOzY,QAAUsS,GAGR,MAAdtc,KAAK0iB,MAEL,IADA,IAAMyC,EAAOnlB,KAAK0iB,MAAM1X,OACf+Z,EAAK,EAAGA,EAAKI,EAAMJ,IAAM,CAC9B,IAAMpC,EAAO3iB,KAAK0iB,MAAMqC,GACxBpC,EAAK7Y,KAAOwS,EACZqG,EAAK3Y,QAAUsS,EAGf,IADA,IAAMxP,EAAM6V,EAAKE,UAAU7X,OAClB5K,EAAI,EAAGA,EAAI0M,EAAK1M,IAAK,CAC1B,IAAM0iB,EAAWH,EAAKE,UAAUziB,GAChC0iB,EAASlZ,MAAQyS,EACjByG,EAAS/Y,OAASsS,KAKtC,EApSA,CAA4B,OAsSrB,SAAS+I,EAAmBxb,EAAcE,EAAaC,EAAeC,GACzE,IAAMqb,EAAM,IAAIP,EAAO,KAAM,MAG7B,OAFAO,EAAI5C,OAAS,IAAI,OAAK,KAAM7Y,EAAME,EAAKC,EAAOC,GAC9Cqb,EAAIR,oBACGQ,EAGX,iBAKI,WAAY3c,EAAcmR,EAAa/P,EAAcE,EACzC6Y,GACR,GAAc,MAAVna,EAAgB,CAChB,IAAMyC,EAAMzC,EAAOI,aACnB9I,KAAK8J,IAAMpB,EAAOI,aAClB9I,KAAKgK,OAAStB,EAAOI,aACrB9I,KAAK6iB,UAAY,GACjB,IAAK,IAAIziB,EAAI,EAAGA,EAAI+K,EAAK/K,IAAK,CAC1B,IAAMwJ,EAAOlB,EAAOI,aACdiB,EAAQrB,EAAOI,aACrB9I,KAAK6iB,UAAUlG,KAAK,CAAC/S,KAAI,EAAEG,MAAK,IAEpCrB,EAAOuB,KAAK,QACT,GAAY,MAAR4P,EAAc,CACrB7Z,KAAK8J,IAAM+P,EAAK/P,IAChB9J,KAAKgK,OAAS6P,EAAK7P,OACnBhK,KAAK6iB,UAAY,GACjB,IAASziB,EAAI,EAAGA,EAAIyZ,EAAKgJ,UAAU7X,OAAQ5K,IAAK,CAC5C,IAAM0iB,EAAWjJ,EAAKgJ,UAAUziB,GAChCJ,KAAK6iB,UAAUlG,KAAK,CAAC/S,KAAMkZ,EAASlZ,KAAMG,MAAO+Y,EAAS/Y,cAG9D/J,KAAK8J,IAAMA,EACX9J,KAAKgK,OAASA,EACdhK,KAAK6iB,UAAYA,EA+F7B,OA3FW,YAAAtI,MAAP,WACI,OAAO,IAAIqK,EAAK,KAAM5kB,OAGnB,YAAAogB,SAAP,SAAgBxW,EAAcG,GAC1B,IAAI3J,EAIJ,IADAA,EAAI,EACGA,EAAIJ,KAAK6iB,UAAU7X,QAAQ,CAE9B,MADM8X,EAAW9iB,KAAK6iB,UAAUziB,IACnBwJ,MAAQA,GAUjB,MATIkZ,EAAS/Y,OAASH,IAClBkZ,EAAS/Y,MAAQH,EAAO,EACpBkZ,EAASlZ,MAAQkZ,EAAS/Y,OAC1B/J,KAAK6iB,UAAUoC,OAAO7kB,EAAG,GAIjCA,IASR,IAFA,IAAMwf,EAAQxf,EACV+K,EAAM,EACH/K,EAAIJ,KAAK6iB,UAAU7X,QAAQ,CAC9B,IAAM8X,EACN,IADMA,EAAW9iB,KAAK6iB,UAAUziB,IACnB2J,MAAQA,EAAO,CACxB+Y,EAASlZ,KAAOG,EAChBoB,EAAM/K,EAAIwf,EACNkD,EAASlZ,MAAQkZ,EAAS/Y,OAC1BoB,IAEJ,MAEJ/K,IAQJ,OAJI+K,EAAM,GAAKyU,EAAQ5f,KAAK6iB,UAAU7X,QAClChL,KAAK6iB,UAAUoC,OAAOrF,EAAOzU,GAG1BnL,KAAK6iB,UAAU7X,OAAS,GAG5B,YAAAsV,UAAP,SAAiB1W,EAAcG,GAE3B,IAAK,IAAI3J,EAAI,EAAGA,EAAIJ,KAAK6iB,UAAU7X,OAAQ5K,IAAK,CAE5C,IADM0iB,EAAW9iB,KAAK6iB,UAAUziB,IACnBwJ,MAAQA,GAAQkZ,EAAS/Y,OAASH,EAAM,CAC7CxJ,EAAI,GACJJ,KAAK6iB,UAAUoC,OAAO,EAAG7kB,GAE7B,OAIR,GAAIJ,KAAK6iB,UAAU7X,OAAS,EAAG,CAE3B,IAAI8X,KAAW9iB,KAAK6iB,UAAU,IACjBjZ,KAAOA,IAChBkZ,EAASlZ,KAAOA,GAIpB,IAASxJ,EAAI,EAAGA,EAAIJ,KAAK6iB,UAAU7X,OAAQ5K,IAEvC,IADA0iB,EAAW9iB,KAAK6iB,UAAUziB,IACbwJ,KAAOG,EAAO,CACvB/J,KAAK6iB,UAAUoC,OAAO7kB,EAAGJ,KAAK6iB,UAAU7X,OAAS5K,GACjD,MAIJJ,KAAK6iB,UAAU7X,OAAS,IAExB8X,EAAW9iB,KAAK6iB,UAAU7iB,KAAK6iB,UAAU7X,OAAS,IACrCjB,MAAQA,IACjB+Y,EAAS/Y,MAAQA,GAI7B,OAAO/J,KAAK6iB,UAAU7X,OAAS,GAG5B,YAAAlI,SAAP,WACI,MAAO,iBAAmB9C,KAAK6iB,UAAU7X,OAAS,KAE1D,EA5HA,I,6BC3UA,wP,EAAA,wB,oTA+BA,aAKI,WAAYtC,EAAcxH,EAAYokB,EAAYC,GAChC,MAAV7c,GACA1I,KAAKkB,EAAIwH,EAAOgD,YAChB1L,KAAKslB,EAAI5c,EAAOgD,YAChB1L,KAAKulB,EAAI7c,EAAOgD,YAChBhD,EAAOuB,KAAK,KAEZjK,KAAKkB,EAAIA,EACTlB,KAAKslB,EAAIA,EACTtlB,KAAKulB,EAAIA,GAgBrB,OAZW,YAAAhL,MAAP,WACI,OAAO,IAAIiL,EAAS,KAAMxlB,KAAKkB,EAAGlB,KAAKslB,EAAGtlB,KAAKulB,IAG5C,YAAArG,MAAP,WAEI,OAAQ,UADKlf,KAAKkB,GAAK,GAAOlB,KAAKslB,GAAK,EAAKtlB,KAAKulB,IACzBziB,SAAS,IAAI2iB,MAAM,IAGzC,YAAA3iB,SAAP,WACI,MAAO,OAAS9C,KAAKkB,EAAI,QAAUlB,KAAKslB,EAAI,QAAUtlB,KAAKulB,EAAI,KAEvE,EA9BA,GAgCA,cAiBI,WAAY7c,EAAcmR,GAA1B,MACI,YAAM,SAAO,KACb,GAAc,MAAVnR,EAAgB,CAChB,EAAK1D,OAAS0D,EAAOmB,YACrB,EAAK9E,MAAQ2D,EAAOmB,YACpB,EAAKgV,WAAanW,EAAOmB,YACzB,EAAK6b,YAAchd,EAAOmB,YAC1B,EAAK8b,OAASjd,EAAOmB,YACrB,EAAK+b,OAASld,EAAOgD,YACrB,EAAKma,UAAYnd,EAAOgD,YACxB,EAAKoa,UAAYpd,EAAOgD,YACxB,EAAKqa,QAAUrd,EAAOgD,YACtB,EAAKsa,aAAetd,EAAOgD,YAC3B,EAAKua,cAAgBvd,EAAOgD,YAC5B,EAAKwa,QAAUxd,EAAOgD,YACtB,IAAMya,EAAiBzd,EAAOgD,YAC9B,EAAK0a,MAAyB,GAAjBD,EACb,EAAKE,OAAUF,GAAkB,EAAK,EAEtC,IAAMG,EAAazM,EACb0M,EAAQ7d,EAAOG,IACrB,EAAKub,SAAW1b,EAAOoD,mBAAmBwX,KAAKoB,IAAI4B,GAAc5d,EAAOG,IAAM0d,GAAQ,UACvE,MAAR1M,GACPA,EAAOA,EACP,EAAK7U,OAAS6U,EAAK7U,OACnB,EAAKD,MAAQ8U,EAAK9U,MAClB,EAAK8Z,WAAahF,EAAKgF,WACvB,EAAK6G,YAAc7L,EAAK6L,YACxB,EAAKC,OAAS9L,EAAK8L,OACnB,EAAKC,OAAS/L,EAAK+L,OACnB,EAAKC,UAAYhM,EAAKgM,UACtB,EAAKC,UAAYjM,EAAKiM,UACtB,EAAKC,QAAUlM,EAAKkM,QACpB,EAAKC,aAAenM,EAAKmM,aACzB,EAAKC,cAAgBpM,EAAKoM,cAC1B,EAAKC,QAAUrM,EAAKqM,QACpB,EAAKE,MAAQvM,EAAKuM,MAClB,EAAKC,OAASxM,EAAKwM,OACnB,EAAKjC,SAAWvK,EAAKuK,WAGrB,EAAKpf,QAAU,GACf,EAAKD,MAAQ,EACb,EAAK8Z,WAAa,EAClB,EAAK6G,YAAc,EACnB,EAAKC,OAAS,IACd,EAAKC,OAAS,EACd,EAAKC,UAAY,EACjB,EAAKC,UAAY,EACjB,EAAKC,QAAU,EACf,EAAKC,aAAe,EACpB,EAAKC,cAAgB,EACrB,EAAKC,QAAU,EACf,EAAKE,MAAQ,EACb,EAAKC,OAAS,EACd,EAAKjC,SAAW,a,SAW5B,OAnF0B,OA4Ef,YAAA7J,MAAP,WACI,OAAO,IAAIiM,EAAK,KAAMxmB,OAGnB,YAAA8C,SAAP,WACI,OAAO2jB,KAAKC,UAAU1mB,OAE9B,EAnFA,CAA0B,OAqF1B,cAQI,WAAY0I,EAAcmR,EAAsB8M,GAAhD,MACI,YAAM,UAAQ,KACd,GAAc,MAAVje,EAAgB,CAChB,IAAM4d,EAAazM,EACb0M,EAAQ7d,EAAOG,IAErB,IAAwB,IAApB8d,IAAgD,IAApBA,EAK5B,OAJA,EAAK5H,MAAQrW,EAAOI,aAChB6d,GAAmB,EAAK5H,QAAU,SAAOhW,IAAImO,WAAWI,aACxD,EAAKyH,MAAQ,SAAOhW,IAAImO,WAAWO,iBAE/B,EAAKsH,OACT,KAAK,SAAOhW,IAAImO,WAAWC,SACvB,EAAK5U,MAAQ,IAAIijB,EAAS9c,GAC1B,MACJ,KAAK,SAAOK,IAAImO,WAAWI,WACvB5O,EAAOuB,KAAK0c,EAAkB,EAAI,GAClC,EAAK1f,QAAU,IAAI,WAASyB,EAAQ4d,GAAc5d,EAAOG,IAAM0d,IAC/D,MACJ,KAAK,SAAOxd,IAAImO,WAAWO,gBACvB,EAAKmP,WAAaD,EAAkBje,EAAOI,aAAeJ,EAAOC,aAC5Dge,GACDje,EAAOuB,KAAK,GAEhB,EAAKkZ,aAAe,IAAI,WAASza,EAAQ4d,GAAc5d,EAAOG,IAAM0d,IACpE,MACJ,KAAK,SAAOxd,IAAImO,WAAWG,WACvB,EAAK9U,MAAQ,IAAIijB,EAAS9c,GAC1B,EAAKme,WAAane,EAAOI,kBAG1B6d,aAA2B,oBAClC,EAAK5H,MAAQ,SAAOhW,IAAImO,WAAWI,WACnC,EAAKrQ,QAAU0f,QAEhB,GAAY,MAAR9M,EAGP,OAFAA,EAAOA,EACP,EAAKkF,MAAQlF,EAAKkF,MACV,EAAKA,OACT,KAAK,SAAOhW,IAAImO,WAAWC,SACvB,EAAK5U,MAAQsX,EAAKtX,MAAMgY,QACxB,MACJ,KAAK,SAAOxR,IAAImO,WAAWI,WACvB,EAAKrQ,QAAU4S,EAAK5S,QAAQsT,QAC5B,MACJ,KAAK,SAAOxR,IAAImO,WAAWO,gBACvB,EAAKmP,WAAa/M,EAAK+M,WACvB,EAAKzD,aAAetJ,EAAKsJ,aACzB,MACJ,KAAK,SAAOpa,IAAImO,WAAWG,WACvB,EAAK9U,MAAQsX,EAAKtX,MAAMgY,QACxB,EAAKsM,WAAahN,EAAKgN,W,SAyB3C,OApF2B,OAiEhB,YAAAtM,MAAP,WACI,OAAO,IAAIuM,EAAM,KAAM9mB,OAGpB,YAAA8C,SAAP,WACI,IAAIwI,EAAM,WAAatL,KAAK+e,MAC5B,OAAQ/e,KAAK+e,OACT,KAAK,SAAOhW,IAAImO,WAAWC,SACvB7L,GAAO,YAActL,KAAKuC,MAAMO,WAChC,MACJ,KAAK,SAAOiG,IAAImO,WAAWO,gBACvBnM,GAAO,iBAAmBtL,KAAK4mB,WAC/B,MACJ,KAAK,SAAO7d,IAAImO,WAAWG,WACvB/L,GAAO,YAActL,KAAKuC,MAAMO,WAAa,iBAAmB9C,KAAK6mB,WAG7E,OAAOvb,EAAM,KAErB,EApFA,CAA2B,OAsF3B,cAOI,WAAY5C,EAAcqW,EAAgBha,EAAgBxC,EAAkB0hB,EAAkB/d,GAA9F,MACI,YAAM,QAAM,K,OACE,MAAVwC,GACAqW,EAAQrW,EAAOI,aACf,EAAKiW,MAAgB,IAARA,EACb,EAAKha,MAAQ,IAAI,SAAO2D,GACxB,EAAKnG,MAAQ,IAAIijB,EAAS9c,GAC1B,EAAKub,QAAWlF,GAAS,SAAOhW,IAAI8O,SAASU,iBAAmB,SAAOxP,IAAI8O,SAASW,gBACpF,EAAKtS,KAAQ6Y,GAAS,SAAOhW,IAAI8O,SAASY,cAAgB,SAAO1P,IAAI8O,SAASa,iBAE9E,EAAKqG,MAAQA,EACb,EAAKha,MAAQA,EACb,EAAKxC,MAAQA,EACb,EAAK0hB,QAAUA,EACf,EAAK/d,KAAOA,G,EAYxB,OAjCyB,OAyBd,YAAAqU,MAAP,WACI,OAAO,IAAIwM,EAAI,KAAM/mB,KAAK+e,MAAO/e,KAAK+E,MAAMwV,QAASva,KAAKuC,MAAMgY,QAASva,KAAKikB,QAASjkB,KAAKkG,OAGzF,YAAApD,SAAP,WACI,MAAO,WAAa9C,KAAK+e,MAAQ,YAAc/e,KAAK+E,MAAMjC,WAAa,YAAc9C,KAAKuC,MAAMO,WAC1F,cAAgB9C,KAAKikB,QAAU,WAAajkB,KAAKkG,KAAO,KAEtE,EAjCA,CAAyB,OAmCzB,aAMI,WAAYwC,EAAcmR,GACR,MAAVnR,GACA1I,KAAKgnB,KAAOte,EAAOgD,YACnB1L,KAAKulB,EAAI7c,EAAOgD,YAChB1L,KAAKslB,EAAI5c,EAAOgD,YAChB1L,KAAKkB,EAAIwH,EAAOgD,cAEhB1L,KAAKgnB,KAAOnN,EAAKmN,KACjBhnB,KAAKulB,EAAI1L,EAAK0L,EACdvlB,KAAKslB,EAAIzL,EAAKyL,EACdtlB,KAAKkB,EAAI2Y,EAAK3Y,GAO1B,OAHW,YAAAqZ,MAAP,WACI,OAAO,IAAI0M,EAAa,KAAMjnB,OAEtC,EAvBA,GAyBA,cAII,WAAY0I,EAAcmR,GAA1B,MACI,YAAM,YAAU,KAChB,GAAc,MAAVnR,EAAgB,CAChB,EAAK6d,MAAQ7d,EAAOI,aACpB,IAAIqC,EAAMzC,EAAOI,aAEjB,IADA,EAAKoe,QAAU,GACR/b,EAAM,GACT,EAAK+b,QAAQvK,KAAK,IAAIsK,EAAave,IACnCyC,QAED,CACH,EAAKob,MAAQ1M,EAAK0M,MAClB,EAAKW,QAAU,GAEf,IADA,IAAMpa,EAAM+M,EAAKqN,QAAQlc,OAChB5K,EAAI,EAAGA,EAAI0M,EAAK1M,IACrB,EAAK8mB,QAAQvK,KAAK9C,EAAKqN,QAAQ9mB,I,SAY/C,OA/B6B,OAwBlB,YAAAma,MAAP,WACI,OAAO,IAAI4M,EAAQ,KAAMnnB,OAGtB,YAAA8C,SAAP,WACI,MAAO,eAAiB9C,KAAKknB,QAAQlc,OAAS,KAEtD,EA/BA,CAA6B,Q,6BCtS7B,qU,EAAA,Q,oTA6BA,2BAQA,OAPW,YAAAiY,SAAP,WACI,MAAM,IAAI,aAAW,6BAGlB,YAAAC,UAAP,WACI,MAAM,IAAI,aAAW,8BAE7B,EARA,GAUA,aAMI,WAAYxa,EAAc0e,GAClBA,GACA1e,EAAOuB,KAAK,GAEhBjK,KAAK+E,MAAQ2D,EAAOI,aACpB9I,KAAKgF,OAAS0D,EAAOI,aACrB9I,KAAKqnB,OAAS3e,EAAOI,aACrB9I,KAAKsnB,SAAW5e,EAAOI,aAM/B,OAHW,YAAAye,OAAP,WACI,OAAOvnB,KAAKsnB,UAAY,EAAI,GAAKtnB,KAAKsnB,SAAW,GAEzD,EAnBA,GAqBA,aAYI,WAAY5e,EAAc0e,GAClBA,GACA1e,EAAOuB,KAAK,GAEhBjK,KAAK+E,MAAQ2D,EAAOiD,YACpB3L,KAAKgF,OAAS0D,EAAOiD,YACrB3L,KAAKqnB,OAAS3e,EAAOI,aACrB9I,KAAKsnB,SAAW5e,EAAOI,aACvB9I,KAAKwnB,YAAc9e,EAAOC,aAC1B3I,KAAKynB,UAAY/e,EAAOC,aACxB3I,KAAK0nB,cAAgBhf,EAAOiD,YAC5B3L,KAAK2nB,cAAgBjf,EAAOiD,YAC5B3L,KAAK4nB,QAAUlf,EAAOC,aACtB3I,KAAK6nB,aAAenf,EAAOC,aAUnC,OAPW,YAAA4e,OAAP,WACI,OAAqB,IAAjBvnB,KAAK4nB,QACE5nB,KAAK4nB,QAAU,IAAM5nB,KAAK4nB,QAAU,IAEpC5nB,KAAKsnB,SAAW,EAAI,EAAI,GAAKtnB,KAAKsnB,UAGrD,EAnCA,GAqCA,cAOI,WAAY5e,EAAcof,GAA1B,MACI,cAAO,KACP,EAAKC,QAAUrf,EACf,EAAKsf,QAAUtf,EAAOG,IACtB,EAAKof,QAAUH,EACf,IAAMzd,EAAU3B,EAAOC,aAEvB,GADA,EAAKuf,UAAY7d,EACbA,IAAY,SAAOtB,IAAIiE,sBACvB,EAAKmb,QAAU,IAAIC,EAAiB1f,GAAQ,GAC5C,EAAKwf,WAAa,EAAKC,QAAQZ,UAAYO,EAAS,EAAI,OACrD,CACH,EAAKK,QAAU,IAAIE,EAAiB3f,GAAQ,GAC5C,IAAM4f,EACD,EAAKH,QAA6BX,cAAgB,SAAOze,IAAIuQ,kBAAkBI,aAAe,EAAI,EACnGrP,GAAW,SAAOtB,IAAIgE,sBAAiC,EAARub,IAC/C,EAAKJ,UAAY,SAAOnf,IAAIgE,sBAAiC,EAARub,GAEzD,EAAKJ,WAAa,EAAKC,QAAQZ,UAAYO,EAAS,EAAI,G,SAmBpE,OA3CgC,OA4BrB,YAAA7E,SAAP,WACI,OAAOjjB,KAAKmoB,QAAQpjB,OAGjB,YAAAme,UAAP,WACI,OAAOI,KAAKe,IAAIrkB,KAAKmoB,QAAQnjB,SAG1B,YAAAujB,SAAP,WACI,OAAOvoB,KAAKkoB,WAGT,YAAAM,OAAP,WACI,OAAOxoB,KAAKmoB,SAEpB,EA3CA,CAAgCM,GA6ChC,cAMI,WAAY/f,EAAcH,GAA1B,MACI,cAAO,K,OACP,EAAKwf,QAAUrf,EACf,EAAKsf,QAAUtf,EAAOG,IACtB,EAAK6f,MAAQngB,EACb,EAAKogB,MAAQ,IAAIC,EAAWlgB,GAAQ,G,EAqD5C,OAhE8B,OAcnB,YAAAua,SAAP,WACI,OAAOjjB,KAAK2oB,MAAM1F,YAGf,YAAAC,UAAP,WACI,OAAOljB,KAAK2oB,MAAMzF,aAGf,YAAA7E,UAAP,WACI,IAAMwK,EAAU7oB,KAAK+nB,QAAQlf,IAC7B7I,KAAK+nB,QAAQ9c,KAAKjL,KAAKgoB,SACvB,IAEInd,EAFAie,EAAO,YACLN,EAASxoB,KAAK2oB,MAAMH,SAE1B,GAAIA,aAAmBH,GAA0C,MAAtBG,EAAOhB,YAC9C,OAAQgB,EAAOhB,aACX,KAAK,SAAOze,IAAIuQ,kBAAkBK,QAC9BmP,EAAO,kBACP,MACJ,KAAK,SAAO/f,IAAIuQ,kBAAkBM,OAC9BkP,EAAO,iBACP,MACJ,QACIje,EAAO7K,KAAK+oB,4BAIpBle,EAAO7K,KAAK+oB,uBAGJ,MAARle,EACAA,GAAQ7K,KAAK+nB,QAAQ1c,WAAWrL,KAAK0oB,OAErC7d,EAAO7K,KAAK+nB,QAAQ1c,WAAWrL,KAAK0oB,OAGxC,IAAMM,EAAM,QAAUF,EAAO,WAAaG,KAAKpe,GAE/C,OADA7K,KAAK+nB,QAAQ9c,KAAK4d,GACXG,GAGH,YAAAD,qBAAR,WACI,IAAMG,EAAM,IAAIC,YAAY,IACtBC,EAAO,IAAIte,WAAWoe,GAK5B,OAJAE,EAAK,GAAK,GACVA,EAAK,GAAK,GACV,SAAOzc,gBAAgByc,EAAM,EAAGppB,KAAK0oB,MAAQ,IAC7C,SAAO/b,gBAAgByc,EAAM,GAAIppB,KAAK2oB,MAAMJ,WAAa,IAClD,SAAO1b,cAAcuc,IAEpC,EAhEA,CAA8BX,GAkE9B,cAaI,WAAY/f,EAAcH,GAA1B,MACI,cAAO,KACP,GAAc,MAAVG,GAaA,GAZAH,EAAOA,EACP,EAAKwf,QAAUrf,EACf,EAAKsf,QAAUtf,EAAOG,IACtB,EAAK6f,MAAQngB,EACb,EAAKD,KAAOI,EAAOmB,YACnB,EAAK9E,MAAQ2D,EAAOmB,YACpB,EAAK7E,OAAS0D,EAAOmB,YACrB,EAAKwf,WAAa3gB,EAAOmB,YACzB,EAAKwd,OAAS3e,EAAOgD,YACrB,EAAK4d,UAAY5gB,EAAOgD,YACxB,EAAK6d,WAAa7gB,EAAOG,IACzB,EAAK2gB,UAAc,EAAKzkB,MAAQ,EAAKukB,UAAY,IAAO,GAAM,GAAK,EAAKtkB,OACpE,EAAKwkB,SAAWjhB,EAAO,GACvB,MAAM,IAAI,aAAW,sBAAwB,EAAKihB,SAAW,oBAAsBjhB,EAAO,SAE3F,CACH,IAAMsR,EAAOtR,EACb,EAAKwf,QAAUlO,EAAKkO,QACpB,EAAKC,QAAUnO,EAAKmO,QACpB,EAAKU,MAAQ7O,EAAK6O,MAClB,EAAKpgB,KAAOuR,EAAKvR,KACjB,EAAKvD,MAAQ8U,EAAK9U,MAClB,EAAKC,OAAS6U,EAAK7U,OACnB,EAAKqkB,WAAaxP,EAAKwP,WACvB,EAAKhC,OAASxN,EAAKwN,OACnB,EAAKiC,UAAYzP,EAAKyP,UACtB,EAAKC,WAAa1P,EAAK0P,WACvB,EAAKC,SAAW3P,EAAK2P,S,SAejC,OA1D8B,OA+CnB,YAAAvG,SAAP,WACI,OAAOjjB,KAAK+E,OAGT,YAAAme,UAAP,WACI,OAAOljB,KAAKgF,QAGT,YAAAuV,MAAP,WACI,OAAO,IAAIkP,EAAS,KAAMzpB,OAElC,EA1DA,CAA8ByoB,GA4D9B,cACI,WAAY/f,EAAcH,GAA1B,MACI,YAAMG,EAAQH,IAAK,K,OACL,MAAVG,IACA,EAAK6gB,YAAc,I,EAO/B,OAXqC,OAQ1B,YAAAhP,MAAP,WACI,OAAO,IAAImP,EAAgB,KAAM1pB,OAEzC,EAXA,CAAqCypB,I,6BC5QrC,sGAkCA,aAGI,WAAY/gB,EAAckX,GACtB5f,KAAKyK,SAAW,GAEhB,IAAIkf,GAAM,EACNC,EAAShK,E,aAETlX,EAAOuC,KAAK2e,GACZ,IAAMrhB,EAAOG,EAAOC,aACpB,GAAIJ,EAAO,EACP,MAAM,IAAI,aAAW,uBAEzB,IAAMD,EAAOI,EAAOI,aACpB,OAAQR,GACJ,KAAK,SAAOS,IAAIkE,WAAWC,S,OACvByc,GAAM,E,kBAEV,KAAK,SAAO5gB,IAAIkE,WAAWK,gBACvB,IAAM,EAAU5E,EAAOI,aACvB,EAAK2B,SAASkS,MAAK,SAAClT,GAChBA,EAAIE,WAAW,MAEnB,MAEJ,KAAK,SAAOZ,IAAIkE,WAAW2B,kBACvB,IAAM,EAAIlG,EAAOmB,YACX,EAAInB,EAAOmB,YACjB,EAAKY,SAASkS,MAAK,SAAClT,GAChBA,EAAIyS,aAAa,EAAG,MAExB,MAEJ,KAAK,SAAOnT,IAAIkE,WAAW4B,kBACvB,IAAM,EAAInG,EAAOmB,YACX,EAAInB,EAAOmB,YACjB,EAAKY,SAASkS,MAAK,SAAClT,GAChBA,EAAI0S,aAAa,EAAG,MAExB,MAEJ,KAAK,SAAOpT,IAAIkE,WAAW+B,qBACvB,IAAM,EAAOtG,EAAOmB,YACd,EAAOnB,EAAOmB,YACpB,EAAKY,SAASkS,MAAK,SAAClT,GAChBA,EAAI2S,gBAAgB,EAAM,MAE9B,MAEJ,KAAK,SAAOrT,IAAIkE,WAAW6B,oBACvB,IAAM,EAAIpG,EAAOmB,YACX,EAAInB,EAAOmB,YACjB,EAAKY,SAASkS,MAAK,SAAClT,GAChBA,EAAI8S,eAAe,EAAG,MAE1B,MAEJ,KAAK,SAAOxT,IAAIkE,WAAW8B,oBACvB,IAAM,EAAIrG,EAAOmB,YACX,EAAInB,EAAOmB,YACjB,EAAKY,SAASkS,MAAK,SAAClT,GAChBA,EAAIC,eAAe,EAAG,MAE1B,MAEJ,KAAK,SAAOX,IAAIkE,WAAWiB,uBACvB,IAAM,EAAOxF,EAAOmB,YACd,EAAOnB,EAAOmB,YACpB,EAAKY,SAASkS,MAAK,SAAClT,GAChBA,EAAI+S,kBAAkB,EAAM,MAEhC,MAEJ,KAAK,SAAOzT,IAAIkE,WAAW+C,YACvB,EAAKvF,SAASkS,MAAK,SAAClT,GAChBA,EAAIgT,YAER,MAEJ,KAAK,SAAO1T,IAAIkE,WAAWW,eACvB,IAAM,EAAQlF,EAAOmB,YACrB,EAAKY,SAASkS,MAAK,SAAClT,GAChBA,EAAImT,UAAU,MAElB,MAEJ,KAAK,SAAO7T,IAAIkE,WAAWS,uBACvB,IAAM,EAAchF,EAAOI,aAC3B,EAAK2B,SAASkS,MAAK,SAAClT,GAChBA,EAAIyT,kBAAkB,MAE1B,MAEJ,KAAK,SAAOnU,IAAIkE,WAAW8D,mBACvB,IACM,EAAWrI,EAAOI,aAAgBJ,EAAOI,cAAgB,GACzD,EAAOJ,EAAOmB,YACd,EAAOnB,EAAOmB,YACd,EAAOnB,EAAOmB,YACd,EAAOnB,EAAOmB,YACd,EAAQnB,EAAOmB,YACf,EAAQnB,EAAOmB,YACf,EAAQnB,EAAOmB,YACf,EAAQnB,EAAOmB,YACfggB,EAAoB,EAAPthB,GAAYG,EAAOG,IAAM+gB,GACtC,EAAM,IAAI,WAASlhB,EAAQmhB,GACjC,EAAKpf,SAASkS,MAAK,SAAClT,GAChBA,EAAI6U,eAAe,EAAM,EAAM,EAAM,EAAM,EAAO,EAAO,EAAO,EAAO,EAAU,MAErF,MAEJ,KAAK,SAAOvV,IAAIkE,WAAW+D,gBACvB,IAAM,EAAWtI,EAAOI,aAAgBJ,EAAOI,cAAgB,GACzD,EAAaJ,EAAOmB,YACpB,EAAOnB,EAAOmB,YACd,EAAOnB,EAAOmB,YACd,EAAOnB,EAAOmB,YACd,EAAOnB,EAAOmB,YACd,EAAQnB,EAAOmB,YACf,EAAQnB,EAAOmB,YACf,EAAQnB,EAAOmB,YACf,EAAQnB,EAAOmB,YAEf,GADAggB,EAAoB,EAAPthB,GAAYG,EAAOG,IAAM+gB,GAChC,IAAI,WAASlhB,EAAQmhB,IACjC,EAAKpf,SAASkS,MAAK,SAAClT,GAChBA,EAAI2T,WAAW,EAAM,EAAM,EAAM,EAAM,EAAO,EAAO,EAAO,EAAO,EAAU,EAAY,MAE7F,MAEJ,KAAK,SAAOrU,IAAIkE,WAAWkD,YACvB,IAAM,EAAOzH,EAAOI,aACd,EAAQJ,EAAOI,aACf,EAASJ,EAAOG,IAChB,EAAO,IAAI,OAAKH,EAAQ,GAC9B,EAAK+B,SAASkS,MAAK,SAAClT,GAChBA,EAAIsT,OAAO,EAAM,EAAM,EAAQ,MAEnC,MAEJ,KAAK,SAAOhU,IAAIkE,WAAWuD,kBACvB,IAAM,EAAY9H,EAAOI,aACzB,EAAK2B,SAASkS,MAAK,SAAClT,GAChBA,EAAI+W,aAAa,MAErB,MAEJ,KAAK,SAAOzX,IAAIkE,WAAWI,eACvB,IAAM,GAAS3E,EAAOI,aACtB,EAAK2B,SAASkS,MAAK,SAAClT,GAChBA,EAAIiX,UAAU,OAElB,MAEJ,KAAK,SAAO3X,IAAIkE,WAAWgB,kBACvB,IAAM,GAAY,IAAI,WAASvF,GAC/B,EAAK+B,SAASkS,MAAK,SAAClT,GAChBA,EAAImX,aAAa,OAErB,MAEJ,KAAK,SAAO7X,IAAIkE,WAAWe,gBACvB,IAAM,GAAU,IAAI,WAAStF,GAC7B,EAAK+B,SAASkS,MAAK,SAAClT,GAChBA,EAAIqX,WAAW,OAEnB,MAEJ,KAAK,SAAO/X,IAAIkE,WAAWqE,yBACjBuY,EAAoB,EAAPthB,GAAYG,EAAOG,IAAM+gB,GAA5C,IACM,GAAQ,IAAI,QAAMlhB,EAAQmhB,GAAY,GAC5C,EAAKpf,SAASkS,MAAK,SAAClT,GAChBA,EAAIyX,YAAY,OAEpB,MAEJ,KAAK,SAAOnY,IAAIkE,WAAWa,2BACjB+b,EAAoB,EAAPthB,GAAYG,EAAOG,IAAM+gB,GAA5C,IACM,GAAQ,IAAI,QAAMlhB,EAAQmhB,GAAY,GAC5C,EAAKpf,SAASkS,MAAK,SAAClT,GAChBA,EAAIyX,YAAY,OAEpB,MAEJ,KAAK,SAAOnY,IAAIkE,WAAWmE,uBACvB,IAAM,GAAM,IAAI,MAAI1I,GACpB,EAAK+B,SAASkS,MAAK,SAAClT,GAChBA,EAAI6X,UAAU,OAElB,MAEJ,KAAK,SAAOvY,IAAIkE,WAAWoE,wBACjBwY,EAAoB,EAAPthB,GAAYG,EAAOG,IAAM+gB,GAA5C,IACM,GAAO,IAAI,OAAKlhB,EAAQmhB,GAC9B,EAAKpf,SAASkS,MAAK,SAAClT,GAChBA,EAAI4X,WAAW,OAEnB,MAEJ,KAAK,SAAOtY,IAAIkE,WAAWsD,kBACvB,IAAM,GAAM7H,EAAOI,aACnB,EAAK2B,SAASkS,MAAK,SAAClT,GAChBA,EAAIkY,aAAa,GAAK,SAE1B,MAEJ,KAAK,SAAO5Y,IAAIkE,WAAWuB,mBACvB,IAAM,GAAM9F,EAAOI,aACnB,EAAK2B,SAASkS,MAAK,SAAClT,GAChBA,EAAIkY,aAAa,GAAK,cAE1B,MAEJ,KAAK,SAAO5Y,IAAIkE,WAAWqD,sBACvB,IAAM,GAAM5H,EAAOI,aACnB,EAAK2B,SAASkS,MAAK,SAAClT,GAChBA,EAAIkY,aAAa,GAAK,aAE1B,MAEJ,KAAK,SAAO5Y,IAAIkE,WAAWgE,kBACvB,IAAM,GAAMvI,EAAOI,aACnB,EAAK2B,SAASkS,MAAK,SAAClT,GAChBA,EAAIwY,aAAa,OAErB,MAEJ,KAAK,SAAOlZ,IAAIkE,WAAW2C,eACvB,IAAM,GAAO,IAAI,OAAKlH,GACtB,EAAK+B,SAASkS,MAAK,SAAClT,GAChBA,EAAI8U,UAAU,GAAM,EAAG,MAE3B,MAEJ,KAAK,SAAOxV,IAAIkE,WAAW6C,eACvB,IAAM,GAAKpH,EAAOmB,YACZ,GAAKnB,EAAOmB,YACZ,GAAO,IAAI,OAAKnB,GACtB,EAAK+B,SAASkS,MAAK,SAAClT,GAChBA,EAAI8U,UAAU,GAAM,GAAI,OAE5B,MAEJ,KAAK,SAAOxV,IAAIkE,WAAWkB,YACvB,IAAM,GAAIzF,EAAOmB,YACX,GAAInB,EAAOmB,YACjB,EAAKY,SAASkS,MAAK,SAAClT,GAChBA,EAAI6V,OAAO,GAAG,OAElB,MAEJ,KAAK,SAAOvW,IAAIkE,WAAWmB,YACvB,IAAM,GAAI1F,EAAOmB,YACX,GAAInB,EAAOmB,YACjB,EAAKY,SAASkS,MAAK,SAAClT,GAChBA,EAAIkW,OAAO,GAAG,OAElB,MAEJ,KAAK,SAAO5W,IAAIkE,WAAWwC,aAEvB,IADM3C,GAAMpE,EAAOmB,aACT,EAAG,CACT,IAAM,GAAOnB,EAAOmD,WAAWiB,IAC/BpE,EAAOuB,KAAK6C,GAAM,GAClB,IAAM,GAAIpE,EAAOmB,YACX,GAAInB,EAAOmB,YACjB,EAAKY,SAASkS,MAAK,SAAClT,GAChBA,EAAImV,QAAQ,GAAG,GAAG,OAG1B,MAEJ,KAAK,SAAO7V,IAAIkE,WAAW2D,gBACvB,IAAM,GAAIlI,EAAOmB,YACX,GAAInB,EAAOmB,YACXiD,GAAMpE,EAAOmB,YACb,GAASnB,EAAOI,aAElBghB,GAAU,KACVC,GAAQ,KACD,EAAPxhB,IAAa,GAAKuE,GAAMA,GAAM,IAC9Bgd,IAAU,EACVC,IAAQ,GAED,EAAPxhB,IAAa,GAASuE,GAAMA,GAAM,IAClCgd,IAAU,EACVC,IAAQ,GAED,EAAPxhB,IAAa,GAAKuE,GAAMA,GAAM,EAAU,EAANA,KAClCgd,IAAU,EACVC,IAAQ,GAED,EAAPxhB,IAAa,GAASuE,GAAMA,GAAM,EAAU,EAANA,KACtCgd,IAAU,EACVC,IAAQ,GAGZ,IAAM,GAAOD,GAAU,IAAI,OAAKphB,GAAU,KAC1C,GAAIoE,GAAM,EAAG,CACT,IAAM,GAAOpE,EAAOmD,WAAWiB,IAC/BpE,EAAOuB,KAAK6C,GAAM,GAElB,IAAM,GAAe,GACrB,GAAIid,GACA,IAAK,IAAI3pB,GAAI,EAAGA,GAAI,GAAK4K,OAAQ5K,KAC7B,GAAGuc,KAAKjU,EAAOmB,aAIvB,EAAKY,SAASkS,MAAK,SAAClT,GAChBA,EAAI0V,WAAW,GAAG,GAAG,GAAM,GAAQ,GAAM,OAGjD,MAEJ,KAAK,SAAOpW,IAAIkE,WAAWkC,qBACvB,IAAM,GAAO,IAAI,OAAKzG,GACtB,EAAK+B,SAASkS,MAAK,SAAClT,GAChBA,EAAIyW,gBAAgB,OAExB,MAEJ,KAAK,SAAOnX,IAAIkE,WAAWmC,uBACvB,IAAM,GAAO,IAAI,OAAK1G,GACtB,EAAK+B,SAASkS,MAAK,SAAClT,GAChBA,EAAI4W,kBAAkB,OAE1B,MAEJ,KAAK,SAAOtX,IAAIkE,WAAWwB,aAGvB,IAFA,IAAItD,GAAMzC,EAAOmB,YACX,GAAmB,GAClBsB,GAAM,GACT,GAAOwR,KAAK,IAAI,SAAOjU,IACvByC,KAEJ,EAAKV,SAASkS,MAAK,SAAClT,GAChBA,EAAI3D,QAAQ,IAAQ,MAExB,MAEJ,KAAK,SAAOiD,IAAIkE,WAAWQ,qBACvB,IAAM,GAAe/E,EAAOI,aAC5B,EAAK2B,SAASkS,MAAK,SAAClT,GAChBA,EAAIuX,gBAAgB,OAExB,MAEJ,KAAK,SAAOjY,IAAIkE,WAAWyC,iBACjBvE,GAAMzC,EAAOI,aAAnB,IACMkhB,GAAiB,GACvB,IAAS5pB,GAAI,EAAGA,GAAI+K,GAAK/K,KACrB4pB,GAAerN,KAAKjU,EAAOI,cAG/B,IAAM,GAAuB,GAC7B,IAAS1I,GAAI,EAAGA,GAAI+K,GAAK/K,KAAK,CAI1B,IAHA,IAAM6pB,GAAQD,GAAe5pB,IAEvB8B,GAAI,GACDgoB,GAAK,EAAGA,GAAKD,GAAOC,KACzBhoB,GAAEya,KAAK,IAAI,SAAOjU,IAEtB,GAASiU,KAAKza,IAElB,EAAKuI,SAASkS,MAAK,SAAClT,GAChBA,EAAIoW,YAAY,OAEpB,MAEJ,KAAK,SAAO9W,IAAIkE,WAAWyB,cACnBvD,GAAMzC,EAAOmB,YAEjB,IAFA,IACM,GAAmB,GAClBsB,GAAM,GACT,GAAOwR,KAAK,IAAI,SAAOjU,IACvByC,KAEJ,EAAKV,SAASkS,MAAK,SAAClT,GAChBA,EAAItD,SAAS,OAEjB,MAEJ,KAAK,SAAO4C,IAAIkE,WAAWoC,aACvB,IAAM,GAAO,IAAI,OAAK3G,GACtB,EAAK+B,SAASkS,MAAK,SAAClT,GAChBA,EAAIpD,QAAQ,OAEhB,MAEJ,KAAK,SAAO0C,IAAIkE,WAAWiE,mBACvB,IAAM,GAAU,IAAI,UAAQxI,GAC5B,EAAK+B,SAASkS,MAAK,SAAClT,GAChBA,EAAI8X,cAAc,OAEtB,MAEJ,KAAK,SAAOxY,IAAIkE,WAAWsE,kBACvB,IAAM,GAAS,IAAI,SAAO7I,GAC1B,EAAK+B,SAASkS,MAAK,SAAClT,GAChBA,EAAI+X,aAAa,OAErB,MAEJ,KAAK,SAAOzY,IAAIkE,WAAWkE,wBACjB0Y,EAAoB,EAAPthB,GAAYG,EAAOG,IAAM+gB,GAA5C,IACMO,GAAgB,IAAI,kBAAgBzhB,EAAQmhB,GAC5C,GAAQ,IAAI,QAAMnhB,EAAQmhB,EAAYM,IAC5C,EAAK1f,SAASkS,MAAK,SAAClT,GAChBA,EAAIgY,mBAAmB,OAE3B,MAEJ,KAAK,SAAO1Y,IAAIkE,WAAWoB,mBACvB,IAAM,GAAO3F,EAAOmB,YACd,GAAOnB,EAAOmB,YACpB,EAAKY,SAASkS,MAAK,SAAClT,GAChBA,EAAI8W,cAAc,GAAM,OAE5B,MAEJ,KAAK,SAAOxX,IAAIkE,WAAWE,oBAC3B,KAAK,SAAOpE,IAAIkE,WAAWG,mBAC3B,KAAK,SAAOrE,IAAIkE,WAAWM,aAC3B,KAAK,SAAOxE,IAAIkE,WAAWO,eAC3B,KAAK,SAAOzE,IAAIkE,WAAWU,sBAC3B,KAAK,SAAO5E,IAAIkE,WAAWY,mBAC3B,KAAK,SAAO9E,IAAIkE,WAAWc,eAC3B,KAAK,SAAOhF,IAAIkE,WAAWqB,gBAC3B,KAAK,SAAOvF,IAAIkE,WAAWsB,oBAC3B,KAAK,SAAOxF,IAAIkE,WAAW0B,0BAC3B,KAAK,SAAO5F,IAAIkE,WAAWgC,oBAC3B,KAAK,SAAOlG,IAAIkE,WAAWiC,sBAC3B,KAAK,SAAOnG,IAAIkE,WAAWqC,eAC3B,KAAK,SAAOvG,IAAIkE,WAAWsC,iBAC3B,KAAK,SAAOxG,IAAIkE,WAAWuC,oBAC3B,KAAK,SAAOzG,IAAIkE,WAAW0C,kBAC3B,KAAK,SAAO5G,IAAIkE,WAAW4C,cAC3B,KAAK,SAAO9G,IAAIkE,WAAW8C,YAC3B,KAAK,SAAOhH,IAAIkE,WAAWgD,SAC3B,KAAK,SAAOlH,IAAIkE,WAAWiD,gBAC3B,KAAK,SAAOnH,IAAIkE,WAAWmD,kBAC3B,KAAK,SAAOrH,IAAIkE,WAAWoD,iBAC3B,KAAK,SAAOtH,IAAIkE,WAAWwD,SAC3B,KAAK,SAAO1H,IAAIkE,WAAWyD,WAC3B,KAAK,SAAO3H,IAAIkE,WAAW0D,YAC3B,KAAK,SAAO5H,IAAIkE,WAAW4D,iBAC3B,KAAK,SAAO9H,IAAIkE,WAAW6D,eAC3B,QACI,IAAIsZ,GAAa,UACjB,IAAK,IAAM,MAAQ,SAAOrhB,IAAIkE,WAAY,CAEtC,GADyB,SAAOlE,IAAIkE,WACpB,MAAU3E,EAAM,CAC5B8hB,GAAa,GACb,OAGR,SAAOtiB,IAAI,SAAWsiB,GAAa,cAAgB9hB,EAAKxF,SAAS,IAAM,iBACjE8mB,EAAO9mB,SAAS,IAAM,SAAmB,EAAPyF,EAAY,UAK5DqhB,GAAiB,EAAPrhB,G,OAtcd8hB,EAAW,MAAQV,GAAK,C,2CAycxB,IAAKA,EACD,MAAM,IAAI,aAAW,8BAUjC,OANW,YAAAjf,KAAP,SAAYjB,GAER,IADA,IAAMqD,EAAM9M,KAAKyK,SAASO,OACjB5K,EAAI,EAAGA,EAAI0M,EAAK1M,IACrBJ,KAAKyK,SAASrK,GAAGqJ,IAG7B,EA5dA","file":"WMFJS.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WMFJS\"] = factory();\n\telse\n\t\troot[\"WMFJS\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2020 Tom Zoehner\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nexport { SVG } from \"./SVG\";\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2020 Ynse Hoornenborg\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nexport class SVGFilters {\n\n    public flood(filter: SVGFilterElement, resultId: string, color: string, opacity: number, _settings?: any): void {\n        const floodElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feFlood\");\n        if (resultId) {\n            floodElement.setAttribute(\"id\", resultId);\n        }\n        floodElement.setAttribute(\"flood-color\", color);\n        floodElement.setAttribute(\"flood-opacity\", opacity.toString());\n        filter.appendChild(floodElement);\n    }\n\n    public composite(filter: SVGFilterElement,\n                     resultId: string,\n                     in1: string,\n                     in2: string,\n                     k1?: number,\n                     k2?: number,\n                     k3?: number,\n                     k4?: number,\n                     _settings?: any): void {\n        const compositeElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feComposite\");\n        if (resultId) {\n            compositeElement.setAttribute(\"id\", resultId);\n        }\n        compositeElement.setAttribute(\"in\", in1);\n        compositeElement.setAttribute(\"in2\", in2);\n        filter.appendChild(compositeElement);\n    }\n}\n\nexport class SVGPathBuilder {\n    private _path = \"\";\n\n    public move(x: number, y: number): void {\n        this._path += ` M ${x} ${y}`;\n    }\n\n    public path(): string {\n        return this._path.substr(1);\n    }\n\n    public line(pts: number[][]): void {\n        pts.forEach((point) => {\n            this._path += ` L ${point[0]} ${point[1]}`;\n        });\n    }\n\n    public curveC(x1: number, y1: number, x2: number, y2: number, x: number, y: number): void {\n        this._path += ` C ${x1} ${y1}, ${x2} ${y2}, ${x} ${y}`;\n    }\n\n    public close(): void {\n        this._path += ` Z`;\n    }\n}\n\nexport class SVG {\n    public filters = new SVGFilters();\n    private _svg: SVGElement;\n    private _defs: SVGDefsElement | undefined = undefined;\n\n    constructor(svg: SVGElement) {\n        this._svg = svg;\n    }\n\n    public svg(parent: Element,\n               x: number,\n               y: number,\n               width: number,\n               height: number,\n               settings?: any): SVGElement {\n        const svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        svgElement.setAttribute(\"x\", x.toString());\n        svgElement.setAttribute(\"y\", y.toString());\n        svgElement.setAttribute(\"width\", width.toString());\n        svgElement.setAttribute(\"height\", height.toString());\n        this._appendSettings(settings, svgElement);\n\n        if (parent != null) {\n            parent.appendChild(svgElement);\n        } else {\n            this._svg.appendChild(svgElement);\n        }\n\n        return svgElement;\n    }\n\n    public image(parent: Element,\n                 x: number,\n                 y: number,\n                 width: number,\n                 height: number,\n                 url: string,\n                 settings?: any): SVGImageElement {\n        const imageElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n        imageElement.setAttribute(\"x\", x.toString());\n        imageElement.setAttribute(\"y\", y.toString());\n        imageElement.setAttribute(\"width\", width.toString());\n        imageElement.setAttribute(\"height\", height.toString());\n        imageElement.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n        this._appendSettings(settings, imageElement);\n        parent.appendChild(imageElement);\n        return imageElement;\n    }\n\n    public rect(parent: Element,\n                x: number,\n                y: number,\n                width: number,\n                height: number,\n                rx?: number,\n                ry?: number,\n                settings?: any): SVGRectElement;\n    public rect(parent: Element, x: number, y: number, width: number, height: number, settings?: any): SVGRectElement;\n    public rect(parent: Element,\n                x: number,\n                y: number,\n                width: number,\n                height: number,\n                rx?: number | any,\n                ry?: number,\n                settings?: any): SVGRectElement {\n        const rectElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        rectElement.setAttribute(\"x\", x.toString());\n        rectElement.setAttribute(\"y\", y.toString());\n        rectElement.setAttribute(\"width\", width.toString());\n        rectElement.setAttribute(\"height\", height.toString());\n        if (rx !== undefined) {\n            if (rx instanceof Number) {\n                rectElement.setAttribute(\"rx\", rx.toString());\n            } else if (rx instanceof Object) {\n                this._appendSettings(rx, rectElement);\n            }\n        }\n        if (ry !== undefined) {\n            rectElement.setAttribute(\"ry\", ry.toString());\n        }\n        this._appendSettings(settings, rectElement);\n        parent.appendChild(rectElement);\n        return rectElement;\n    }\n\n    public line(parent: Element, x1: number, y1: number, x2: number, y2: number, settings?: any): SVGLineElement {\n        const lineElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n        lineElement.setAttribute(\"x1\", x1.toString());\n        lineElement.setAttribute(\"y1\", y1.toString());\n        lineElement.setAttribute(\"x2\", x2.toString());\n        lineElement.setAttribute(\"y2\", y2.toString());\n        this._appendSettings(settings, lineElement);\n        parent.appendChild(lineElement);\n        return lineElement;\n    }\n\n    public polygon(parent: Element, points: number[][], settings?: any): SVGPolygonElement {\n        const polygonElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\n        polygonElement.setAttribute(\"points\", points.map((point) => point.join(\",\")).join(\" \"));\n        this._appendSettings(settings, polygonElement);\n        parent.appendChild(polygonElement);\n        return polygonElement;\n    }\n\n    public polyline(parent: Element, points: number[][], settings?: any): SVGPolylineElement {\n        const polylineElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polyline\");\n        polylineElement.setAttribute(\"points\", points.map((point) => point.join(\",\")).join(\" \"));\n        this._appendSettings(settings, polylineElement);\n        parent.appendChild(polylineElement);\n        return polylineElement;\n    }\n\n    public ellipse(parent: Element, cx: number, cy: number, rx: number, ry: number, settings?: any): SVGEllipseElement {\n        const ellipseElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"ellipse\");\n        ellipseElement.setAttribute(\"cx\", cx.toString());\n        ellipseElement.setAttribute(\"cy\", cy.toString());\n        ellipseElement.setAttribute(\"rx\", rx.toString());\n        ellipseElement.setAttribute(\"ry\", ry.toString());\n        this._appendSettings(settings, ellipseElement);\n        parent.appendChild(ellipseElement);\n        return ellipseElement;\n    }\n\n    public path(parent: SVGElement, builder: SVGPathBuilder, settings?: any) {\n        const pathElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        pathElement.setAttribute(\"d\", builder.path());\n        this._appendSettings(settings, pathElement);\n        parent.appendChild(pathElement);\n        return pathElement;\n    }\n\n    public text(parent: Element, x: number, y: number, value: string, settings?: any): SVGTextElement {\n        const textElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        textElement.setAttribute(\"x\", x.toString());\n        textElement.setAttribute(\"y\", y.toString());\n        this._appendSettings(settings, textElement);\n        const textNode = document.createTextNode(value);\n        textElement.appendChild(textNode);\n        parent.appendChild(textElement);\n        return textElement;\n    }\n\n    public filter(parent: Element,\n                  id: string,\n                  x: number,\n                  y: number,\n                  width: number,\n                  height: number,\n                  settings?: any): SVGFilterElement {\n        const filterElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"filter\");\n        filterElement.setAttribute(\"x\", x.toString());\n        filterElement.setAttribute(\"y\", y.toString());\n        filterElement.setAttribute(\"width\", width.toString());\n        filterElement.setAttribute(\"height\", height.toString());\n        this._appendSettings(settings, filterElement);\n        parent.appendChild(filterElement);\n        return filterElement;\n    }\n\n    public pattern(parent: Element,\n                   resultId: string,\n                   x: number,\n                   y: number,\n                   width: number,\n                   height: number,\n                   settings?: any): SVGPatternElement {\n        const patternElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"pattern\");\n        if (resultId) {\n            patternElement.setAttribute(\"id\", resultId);\n        }\n        patternElement.setAttribute(\"x\", x.toString());\n        patternElement.setAttribute(\"y\", y.toString());\n        patternElement.setAttribute(\"width\", width.toString());\n        patternElement.setAttribute(\"height\", height.toString());\n        this._appendSettings(settings, patternElement);\n        parent.appendChild(patternElement);\n        return patternElement;\n    }\n\n    public defs(): SVGDefsElement {\n        if (this._defs === undefined) {\n            const defsElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n            this._svg.appendChild(defsElement);\n            this._defs = defsElement;\n        }\n        return this._defs;\n    }\n\n    public clipPath(parent: Element, resultId: string, units?: string, settings?: any): SVGClipPathElement {\n        const clipElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        if (resultId) {\n            clipElement.setAttribute(\"id\", resultId);\n        }\n        if (units === undefined) {\n            units = \"userSpaceOnUse\";\n        }\n        clipElement.setAttribute(\"clipPathUnits\", units);\n        this._appendSettings(settings, clipElement);\n        parent.appendChild(clipElement);\n        return clipElement;\n    }\n\n    public createPath(): SVGPathBuilder {\n        return new SVGPathBuilder();\n    }\n\n    private _appendSettings(settings: any | undefined, element: Element): void {\n        if (settings !== undefined) {\n            Object.keys(settings).forEach((key) => {\n                element.setAttribute(key, settings[key]);\n            });\n        }\n    }\n\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nexport { Renderer, IRendererSettings } from \"./Renderer\";\nexport { WMFJSError as Error, loggingEnabled } from \"./Helper\";\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { SVG } from \"../util\";\nimport { Blob } from \"./Blob\";\nimport { GDIContext } from \"./GDIContext\";\nimport { Helper, WMFJSError } from \"./Helper\";\nimport { WMFRecords } from \"./WMFRecords\";\n\nexport interface IRendererSettings {\n    width: string;\n    height: string;\n    xExt: number;\n    yExt: number;\n    mapMode: number;\n}\n\nexport class Renderer {\n    private _img: WMF;\n\n    constructor(blob: ArrayBuffer) {\n        this.parse(blob);\n        Helper.log(\"WMFJS.Renderer instantiated\");\n    }\n\n    public render(info: IRendererSettings): SVGElement {\n        const svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\n        this._render(new SVG(svgElement), info.mapMode, info.xExt, info.yExt);\n        svgElement.setAttribute(\"viewBox\", [0, 0, info.xExt, info.yExt].join(\" \"));\n        svgElement.setAttribute(\"preserveAspectRatio\", \"none\"); // TODO: MM_ISOTROPIC vs MM_ANISOTROPIC\n        svgElement.setAttribute(\"width\", info.width);\n        svgElement.setAttribute(\"height\", info.height);\n        return svgElement;\n    }\n\n    private parse(blob: ArrayBuffer) {\n        this._img = null;\n\n        const reader = new Blob(blob);\n\n        let type;\n        let size;\n        let placable;\n        let headerstart;\n        const key = reader.readUint32();\n        if (key === 0x9ac6cdd7) {\n            placable = new WMFPlacable(reader);\n            headerstart = reader.pos;\n            type = reader.readUint16();\n            size = reader.readUint16();\n        } else {\n            headerstart = 0;\n            type = key & 0xffff;\n            size = (key >>> 16) & 0xffff;\n        }\n        switch (type) {\n            case Helper.GDI.MetafileType.MEMORYMETAFILE:\n            case Helper.GDI.MetafileType.DISKMETAFILE:\n                if (size === Helper.GDI.METAHEADER_SIZE / 2) {\n                    const version = reader.readUint16();\n                    switch (version) {\n                        case Helper.GDI.MetafileVersion.METAVERSION100:\n                        case Helper.GDI.MetafileVersion.METAVERSION300:\n                            this._img = new WMF(reader, placable, version, headerstart + (size * 2));\n                            break;\n                    }\n                }\n                break;\n        }\n\n        if (this._img == null) {\n            throw new WMFJSError(\"Format not recognized\");\n        }\n    }\n\n    private _render(svg: SVG, mapMode: number, xExt: number, yExt: number) {\n        // See https://www-user.tu-chemnitz.de/~ygu/petzold/ch18b.htm\n        const gdi = new GDIContext(svg);\n        gdi.setViewportExt(xExt, yExt);\n        gdi.setMapMode(mapMode);\n        Helper.log(\"[WMF] BEGIN RENDERING --->\");\n        this._img.render(gdi);\n        Helper.log(\"[WMF] <--- DONE RENDERING\");\n    }\n}\n\nexport class WMFRect16 {\n    private left: number;\n    private top: number;\n    private right: number;\n    private bottom: number;\n\n    constructor(reader: Blob) {\n        this.left = reader.readInt16();\n        this.top = reader.readInt16();\n        this.right = reader.readInt16();\n        this.bottom = reader.readInt16();\n    }\n\n    public toString() {\n        return \"{left: \" + this.left + \", top: \" + this.top + \", right: \" + this.right\n            + \", bottom: \" + this.bottom + \"}\";\n    }\n}\n\nexport class WMFPlacable {\n    private boundingBox: WMFRect16;\n    private unitsPerInch: number;\n\n    constructor(reader: Blob) {\n        reader.skip(2);\n        this.boundingBox = new WMFRect16(reader);\n        this.unitsPerInch = reader.readInt16();\n        reader.skip(4);\n        reader.skip(2); // TODO: checksum\n        Helper.log(\"Got bounding box \" + this.boundingBox + \" and \" + this.unitsPerInch + \" units/inch\");\n    }\n}\n\nexport class WMF {\n    private _version: number;\n    private _hdrsize: number;\n    private _placable: WMFPlacable;\n    private _records: WMFRecords;\n\n    constructor(reader: Blob, placable: WMFPlacable, version: number, hdrsize: number) {\n        this._version = version;\n        this._hdrsize = hdrsize;\n        this._placable = placable;\n        this._records = new WMFRecords(reader, this._hdrsize);\n    }\n\n    public render(gdi: GDIContext) {\n        this._records.play(gdi);\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { WMFJSError } from \"./Helper\";\n\nexport class Blob {\n    public pos: number;\n    private blob: Blob | ArrayBuffer;\n    private data: Uint8Array;\n\n    constructor(blob: Blob | ArrayBuffer, offset?: number) {\n        if (blob instanceof Blob) {\n            this.blob = blob.blob;\n            this.data = blob.data;\n            this.pos = offset || blob.pos;\n        } else {\n            this.blob = blob;\n            this.data = new Uint8Array(blob);\n            this.pos = offset || 0;\n        }\n    }\n\n    public eof() {\n        return this.pos >= this.data.length;\n    }\n\n    public seek(newpos: number) {\n        if (newpos < 0 || newpos > this.data.length) {\n            throw new WMFJSError(\"Invalid seek position\");\n        }\n        this.pos = newpos;\n    }\n\n    public skip(cnt: number) {\n        const newPos = this.pos + cnt;\n        if (newPos > this.data.length) {\n            throw new WMFJSError(\"Unexpected end of file\");\n        }\n        this.pos = newPos;\n    }\n\n    public readBinary(cnt: number) {\n        const end = this.pos + cnt;\n        if (end > this.data.length) {\n            throw new WMFJSError(\"Unexpected end of file\");\n        }\n        let ret = \"\";\n        while (cnt-- > 0) {\n            ret += String.fromCharCode(this.data[this.pos++]);\n        }\n        return ret;\n    }\n\n    public readInt8() {\n        if (this.pos + 1 > this.data.length) {\n            throw new WMFJSError(\"Unexpected end of file\");\n        }\n        return this.data[this.pos++];\n    }\n\n    public readUint8() {\n        return this.readInt8() >>> 0;\n    }\n\n    public readInt32() {\n        if (this.pos + 4 > this.data.length) {\n            throw new WMFJSError(\"Unexpected end of file\");\n        }\n        let val = this.data[this.pos++];\n        val |= this.data[this.pos++] << 8;\n        val |= this.data[this.pos++] << 16;\n        val |= this.data[this.pos++] << 24;\n        return val;\n    }\n\n    public readUint32() {\n        return this.readInt32() >>> 0;\n    }\n\n    public readUint16() {\n        if (this.pos + 2 > this.data.length) {\n            throw new WMFJSError(\"Unexpected end of file\");\n        }\n        let val = this.data[this.pos++];\n        val |= this.data[this.pos++] << 8;\n        return val;\n    }\n\n    public readInt16() {\n        let val = this.readUint16();\n        if (val > 32767) {\n            val -= 65536;\n        }\n        return val;\n    }\n\n    public readString(length: number) {\n        if (this.pos + length > this.data.length) {\n            throw new WMFJSError(\"Unexpected end of file\");\n        }\n        let ret = \"\";\n        for (let i = 0; i < length; i++) {\n            ret += String.fromCharCode(this.data[this.pos++] >>> 0);\n        }\n        return ret;\n    }\n\n    public readNullTermString(maxSize: number) {\n        let ret = \"\";\n        if (maxSize > 0) {\n            maxSize--;\n            for (let i = 0; i < maxSize; i++) {\n                if (this.pos + i + 1 > this.data.length) {\n                    throw new WMFJSError(\"Unexpected end of file\");\n                }\n                const byte = this.data[this.pos + i] >>> 0;\n                if (byte === 0) {\n                    break;\n                }\n                ret += String.fromCharCode(byte);\n            }\n        }\n        return ret;\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nexport class WMFJSError extends Error {\n    constructor(message: string) {\n        super(message); // 'Error' breaks prototype chain here\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n}\n\nlet isLoggingEnabled = true;\nexport function loggingEnabled(enabled: boolean) {\n    isLoggingEnabled = enabled;\n}\n\nexport class Helper {\n    public static GDI = {\n        METAHEADER_SIZE: 18,\n        BITMAPINFOHEADER_SIZE: 40,\n        BITMAPCOREHEADER_SIZE: 12,\n        MetafileType: {\n            MEMORYMETAFILE: 1,\n            DISKMETAFILE: 2,\n        },\n        MetafileVersion: {\n            METAVERSION100: 0x100,\n            METAVERSION300: 0x300,\n        },\n        RecordType: {\n            META_EOF: 0x0000,\n            META_REALIZEPALETTE: 0x0035,\n            META_SETPALENTRIES: 0x0037,\n            META_SETBKMODE: 0x0102,\n            META_SETMAPMODE: 0x0103,\n            META_SETROP2: 0x0104,\n            META_SETRELABS: 0x0105,\n            META_SETPOLYFILLMODE: 0x0106,\n            META_SETSTRETCHBLTMODE: 0x0107,\n            META_SETTEXTCHAREXTRA: 0x0108,\n            META_RESTOREDC: 0x0127,\n            META_RESIZEPALETTE: 0x0139,\n            META_DIBCREATEPATTERNBRUSH: 0x0142,\n            META_SETLAYOUT: 0x0149,\n            META_SETBKCOLOR: 0x0201,\n            META_SETTEXTCOLOR: 0x0209,\n            META_OFFSETVIEWPORTORG: 0x0211,\n            META_LINETO: 0x0213,\n            META_MOVETO: 0x0214,\n            META_OFFSETCLIPRGN: 0x0220,\n            META_FILLREGION: 0x0228,\n            META_SETMAPPERFLAGS: 0x0231,\n            META_SELECTPALETTE: 0x0234,\n            META_POLYGON: 0x0324,\n            META_POLYLINE: 0x0325,\n            META_SETTEXTJUSTIFICATION: 0x020a,\n            META_SETWINDOWORG: 0x020b,\n            META_SETWINDOWEXT: 0x020c,\n            META_SETVIEWPORTORG: 0x020d,\n            META_SETVIEWPORTEXT: 0x020e,\n            META_OFFSETWINDOWORG: 0x020f,\n            META_SCALEWINDOWEXT: 0x0410,\n            META_SCALEVIEWPORTEXT: 0x0412,\n            META_EXCLUDECLIPRECT: 0x0415,\n            META_INTERSECTCLIPRECT: 0x0416,\n            META_ELLIPSE: 0x0418,\n            META_FLOODFILL: 0x0419,\n            META_FRAMEREGION: 0x0429,\n            META_ANIMATEPALETTE: 0x0436,\n            META_TEXTOUT: 0x0521,\n            META_POLYPOLYGON: 0x0538,\n            META_EXTFLOODFILL: 0x0548,\n            META_RECTANGLE: 0x041b,\n            META_SETPIXEL: 0x041f,\n            META_ROUNDRECT: 0x061c,\n            META_PATBLT: 0x061d,\n            META_SAVEDC: 0x001e,\n            META_PIE: 0x081a,\n            META_STRETCHBLT: 0x0b23,\n            META_ESCAPE: 0x0626,\n            META_INVERTREGION: 0x012a,\n            META_PAINTREGION: 0x012b,\n            META_SELECTCLIPREGION: 0x012c,\n            META_SELECTOBJECT: 0x012d,\n            META_SETTEXTALIGN: 0x012e,\n            META_ARC: 0x0817,\n            META_CHORD: 0x0830,\n            META_BITBLT: 0x0922,\n            META_EXTTEXTOUT: 0x0a32,\n            META_SETDIBTODEV: 0x0d33,\n            META_DIBBITBLT: 0x0940,\n            META_DIBSTRETCHBLT: 0x0b41,\n            META_STRETCHDIB: 0x0f43,\n            META_DELETEOBJECT: 0x01f0,\n            META_CREATEPALETTE: 0x00f7,\n            META_CREATEPATTERNBRUSH: 0x01f9,\n            META_CREATEPENINDIRECT: 0x02fa,\n            META_CREATEFONTINDIRECT: 0x02fb,\n            META_CREATEBRUSHINDIRECT: 0x02fc,\n            META_CREATEREGION: 0x06ff,\n        },\n        MetafileEscapes: {\n            NEWFRAME: 0x0001,\n            ABORTDOC: 0x0002,\n            NEXTBAND: 0x0003,\n            SETCOLORTABLE: 0x0004,\n            GETCOLORTABLE: 0x0005,\n            FLUSHOUT: 0x0006,\n            DRAFTMODE: 0x0007,\n            QUERYESCSUPPORT: 0x0008,\n            SETABORTPROC: 0x0009,\n            STARTDOC: 0x000a,\n            ENDDOC: 0x000b,\n            GETPHYSPAGESIZE: 0x000c,\n            GETPRINTINGOFFSET: 0x000d,\n            GETSCALINGFACTOR: 0x000e,\n            META_ESCAPE_ENHANCED_METAFILE: 0x000f,\n            SETPENWIDTH: 0x0010,\n            SETCOPYCOUNT: 0x0011,\n            SETPAPERSOURCE: 0x0012,\n            PASSTHROUGH: 0x0013,\n            GETTECHNOLOGY: 0x0014,\n            SETLINECAP: 0x0015,\n            SETLINEJOIN: 0x0016,\n            SETMITERLIMIT: 0x0017,\n            BANDINFO: 0x0018,\n            DRAWPATTERNRECT: 0x0019,\n            GETVECTORPENSIZE: 0x001a,\n            GETVECTORBRUSHSIZE: 0x001b,\n            ENABLEDUPLEX: 0x001c,\n            GETSETPAPERBINS: 0x001d,\n            GETSETPRINTORIENT: 0x001e,\n            ENUMPAPERBINS: 0x001f,\n            SETDIBSCALING: 0x0020,\n            EPSPRINTING: 0x0021,\n            ENUMPAPERMETRICS: 0x0022,\n            GETSETPAPERMETRICS: 0x0023,\n            POSTSCRIPT_DATA: 0x0025,\n            POSTSCRIPT_IGNORE: 0x0026,\n            GETDEVICEUNITS: 0x002a,\n            GETEXTENDEDTEXTMETRICS: 0x0100,\n            GETPAIRKERNTABLE: 0x0102,\n            EXTTEXTOUT: 0x0200,\n            GETFACENAME: 0x0201,\n            DOWNLOADFACE: 0x0202,\n            METAFILE_DRIVER: 0x0801,\n            QUERYDIBSUPPORT: 0x0c01,\n            BEGIN_PATH: 0x1000,\n            CLIP_TO_PATH: 0x1001,\n            END_PATH: 0x1002,\n            OPEN_CHANNEL: 0x100e,\n            DOWNLOADHEADER: 0x100f,\n            CLOSE_CHANNEL: 0x1010,\n            POSTSCRIPT_PASSTHROUGH: 0x1013,\n            ENCAPSULATED_POSTSCRIPT: 0x1014,\n            POSTSCRIPT_IDENTIFY: 0x1015,\n            POSTSCRIPT_INJECTION: 0x1016,\n            CHECKJPEGFORMAT: 0x1017,\n            CHECKPNGFORMAT: 0x1018,\n            GET_PS_FEATURESETTING: 0x1019,\n            MXDC_ESCAPE: 0x101a,\n            SPCLPASSTHROUGH2: 0x11d8,\n        },\n        MapMode: {\n            MM_TEXT: 1,\n            MM_LOMETRIC: 2,\n            MM_HIMETRIC: 3,\n            MM_LOENGLISH: 4,\n            MM_HIENGLISH: 5,\n            MM_TWIPS: 6,\n            MM_ISOTROPIC: 7,\n            MM_ANISOTROPIC: 8,\n        },\n        StretchMode: {\n            BLACKONWHITE: 1,\n            WHITEONBLACK: 2,\n            COLORONCOLOR: 3,\n            HALFTONE: 4,\n        },\n        TextAlignmentMode: {\n            TA_UPDATECP: 1,\n            TA_RIGHT: 2,\n            TA_CENTER: 6,\n            TA_BOTTOM: 8,\n            TA_BASELINE: 24,\n            TA_RTLREADING: 256,\n        },\n        MixMode: {\n            TRANSPARENT: 1,\n            OPAQUE: 2,\n        },\n        VerticalTextAlignmentMode: {\n            VTA_BOTTOM: 2,\n            VTA_CENTER: 6,\n            VTA_LEFT: 8,\n            VTA_BASELINE: 24,\n        },\n        BrushStyle: {\n            BS_SOLID: 0,\n            BS_NULL: 1,\n            BS_HATCHED: 2,\n            BS_PATTERN: 3,\n            BS_INDEXED: 4,\n            BS_DIBPATTERN: 5,\n            BS_DIBPATTERNPT: 6,\n            BS_PATTERN8X8: 7,\n            BS_DIBPATTERN8X8: 8,\n            BS_MONOPATTERN: 9,\n        },\n        PenStyle: {\n            PS_SOLID: 0,\n            PS_DASH: 1,\n            PS_DOT: 2,\n            PS_DASHDOT: 3,\n            PS_DASHDOTDOT: 4,\n            PS_NULL: 5,\n            PS_INSIDEFRAME: 6,\n            PS_USERSTYLE: 7,\n            PS_ALTERNATE: 8,\n            PS_ENDCAP_SQUARE: 256,\n            PS_ENDCAP_FLAT: 512,\n            PS_JOIN_BEVEL: 4096,\n            PS_JOIN_MITER: 8192,\n        },\n        PolyFillMode: {\n            ALTERNATE: 1,\n            WINDING: 2,\n        },\n        ColorUsage: {\n            DIB_RGB_COLORS: 0,\n            DIB_PAL_COLORS: 1,\n            DIB_PAL_INDICES: 2,\n        },\n        PaletteEntryFlag: {\n            PC_RESERVED: 1,\n            PC_EXPLICIT: 2,\n            PC_NOCOLLAPSE: 4,\n        },\n        BitmapCompression: {\n            BI_RGB: 0,\n            BI_RLE8: 1,\n            BI_RLE4: 2,\n            BI_BITFIELDS: 3,\n            BI_JPEG: 4,\n            BI_PNG: 5,\n        },\n    };\n    public static _uniqueId = 0;\n\n    public static log(message: string) {\n        if (isLoggingEnabled) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        }\n    }\n\n    public static _makeUniqueId(prefix: string) {\n        return \"wmfjs_\" + prefix + (this._uniqueId++);\n    }\n\n    public static _writeUint32Val(uint8arr: Uint8Array, pos: number, val: number) {\n        uint8arr[pos++] = val & 0xff;\n        uint8arr[pos++] = (val >>> 8) & 0xff;\n        uint8arr[pos++] = (val >>> 16) & 0xff;\n        uint8arr[pos++] = (val >>> 24) & 0xff;\n    }\n\n    public static _blobToBinary(blob: Uint8Array) {\n        let ret = \"\";\n        const len = blob.length;\n        for (let i = 0; i < len; i++) {\n            ret += String.fromCharCode(blob[i]);\n        }\n        return ret;\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { SVG } from \"../util/SVG\";\nimport { DIBitmap } from \"./Bitmap\";\nimport { Blob } from \"./Blob\";\nimport { Helper, WMFJSError } from \"./Helper\";\nimport { Obj, PointS, Rect } from \"./Primitives\";\nimport { CreateSimpleRegion, Region } from \"./Region\";\nimport { Brush, ColorRef, Font, Palette, Pen } from \"./Style\";\n\nexport interface ISelectedStyle {\n    brush?: Brush;\n    pen?: Pen;\n    font?: Font;\n    palette?: Palette;\n    region?: Region;\n    [key: string]: Obj;\n}\n\nexport class GDIContextState {\n    public _svggroup: SVGElement;\n    public _svgclipChanged: boolean;\n    public _svgtextbkfilter: SVGFilterElement;\n    public mapmode: number;\n    public stretchmode: number;\n    public textalign: number;\n    public bkmode: number;\n    public textcolor: ColorRef;\n    public bkcolor: ColorRef;\n    public polyfillmode: number;\n    public wx: number;\n    public wy: number;\n    public ww: number;\n    public wh: number;\n    public vx: number;\n    public vy: number;\n    public vw: number;\n    public vh: number;\n    public x: number;\n    public y: number;\n    public clip: Region;\n    public ownclip: boolean;\n    public selected: ISelectedStyle;\n\n    constructor(copy: GDIContextState, defObjects?: ISelectedStyle) {\n        if (copy != null) {\n            this._svggroup = copy._svggroup;\n            this._svgclipChanged = copy._svgclipChanged;\n            this._svgtextbkfilter = copy._svgtextbkfilter;\n            this.mapmode = copy.mapmode;\n            this.stretchmode = copy.stretchmode;\n            this.textalign = copy.textalign;\n            this.bkmode = copy.bkmode;\n            this.textcolor = copy.textcolor.clone();\n            this.bkcolor = copy.bkcolor.clone();\n            this.polyfillmode = copy.polyfillmode;\n            this.wx = copy.wx;\n            this.wy = copy.wy;\n            this.ww = copy.ww;\n            this.wh = copy.wh;\n            this.vx = copy.vx;\n            this.vy = copy.vy;\n            this.vw = copy.vw;\n            this.vh = copy.vh;\n            this.x = copy.x;\n            this.y = copy.y;\n\n            this.clip = copy.clip;\n            this.ownclip = false;\n\n            this.selected = {};\n            for (const type in copy.selected) {\n                this.selected[type] = copy.selected[type];\n            }\n        } else {\n            this._svggroup = null;\n            this._svgclipChanged = false;\n            this._svgtextbkfilter = null;\n            this.mapmode = Helper.GDI.MapMode.MM_ANISOTROPIC;\n            this.stretchmode = Helper.GDI.StretchMode.COLORONCOLOR;\n            this.textalign = 0; // TA_LEFT | TA_TOP | TA_NOUPDATECP\n            this.bkmode = Helper.GDI.MixMode.OPAQUE;\n            this.textcolor = new ColorRef(null, 0, 0, 0);\n            this.bkcolor = new ColorRef(null, 255, 255, 255);\n            this.polyfillmode = Helper.GDI.PolyFillMode.ALTERNATE;\n            this.wx = 0;\n            this.wy = 0;\n            this.ww = 0;\n            this.wh = 0;\n            this.vx = 0;\n            this.vy = 0;\n            this.vw = 0;\n            this.vh = 0;\n            this.x = 0;\n            this.y = 0;\n\n            this.clip = null;\n            this.ownclip = false;\n\n            this.selected = {};\n            for (const type in defObjects) {\n                const defObj = defObjects[type];\n                this.selected[type] = defObj != null ? defObj.clone() : null;\n            }\n        }\n    }\n}\n\nexport class GDIContext {\n    private _svg: SVG;\n    private _svgdefs: SVGDefsElement;\n    private _svgPatterns: {[key: string]: Brush};\n    private _svgClipPaths: {[key: string]: Region};\n    private defObjects: ISelectedStyle;\n    private state: GDIContextState;\n    private statestack: GDIContextState[];\n    private objects: {[key: string]: Obj};\n\n    constructor(svg: SVG) {\n        this._svg = svg;\n        this._svgdefs = null;\n        this._svgPatterns = {};\n        this._svgClipPaths = {};\n\n        this.defObjects = {\n            brush: new Brush(null, null),\n            pen: new Pen(null, Helper.GDI.PenStyle.PS_SOLID, new PointS(null, 1, 1), new ColorRef(null, 0, 0, 0), 0, 0),\n            font: new Font(null, null),\n            palette: null,\n            region: null,\n        };\n\n        this.state = new GDIContextState(null, this.defObjects);\n        this.statestack = [this.state];\n        this.objects = {};\n    }\n\n    public setMapMode(mode: number) {\n        Helper.log(\"[gdi] setMapMode: mode=\" + mode);\n        this.state.mapmode = mode;\n        this.state._svggroup = null;\n    }\n\n    public setWindowOrg(x: number, y: number) {\n        Helper.log(\"[gdi] setWindowOrg: x=\" + x + \" y=\" + y);\n        this.state.wx = x;\n        this.state.wy = y;\n        this.state._svggroup = null;\n    }\n\n    public setWindowExt(x: number, y: number) {\n        Helper.log(\"[gdi] setWindowExt: x=\" + x + \" y=\" + y);\n        this.state.ww = x;\n        this.state.wh = y;\n        this.state._svggroup = null;\n    }\n\n    public offsetWindowOrg(offX: number, offY: number) {\n        Helper.log(\"[gdi] offsetWindowOrg: offX=\" + offX + \" offY=\" + offY);\n        this.state.wx += offX;\n        this.state.wy += offY;\n        this.state._svggroup = null;\n    }\n\n    public setViewportOrg(x: number, y: number) {\n        Helper.log(\"[gdi] setViewportOrg: x=\" + x + \" y=\" + y);\n        this.state.vx = x;\n        this.state.vy = y;\n        this.state._svggroup = null;\n    }\n\n    public setViewportExt(x: number, y: number) {\n        Helper.log(\"[gdi] setViewportExt: x=\" + x + \" y=\" + y);\n        this.state.vw = x;\n        this.state.vh = y;\n        this.state._svggroup = null;\n    }\n\n    public offsetViewportOrg(offX: number, offY: number) {\n        Helper.log(\"[gdi] offsetViewportOrg: offX=\" + offX + \" offY=\" + offY);\n        this.state.vx += offX;\n        this.state.vy += offY;\n        this.state._svggroup = null;\n    }\n\n    public saveDC() {\n        Helper.log(\"[gdi] saveDC\");\n        const prevstate = this.state;\n        this.state = new GDIContextState(this.state);\n        this.statestack.push(prevstate);\n        this.state._svggroup = null;\n    }\n\n    public restoreDC(saved: number) {\n        Helper.log(\"[gdi] restoreDC: saved=\" + saved);\n        if (this.statestack.length > 1) {\n            if (saved === -1) {\n                this.state = this.statestack.pop();\n            } else if (saved < -1) {\n                throw new WMFJSError(\"restoreDC: relative restore not implemented\");\n            } else if (saved > 1) {\n                throw new WMFJSError(\"restoreDC: absolute restore not implemented\");\n            }\n        } else {\n            throw new WMFJSError(\"No saved contexts\");\n        }\n\n        this.state._svggroup = null;\n    }\n\n    public escape(func: number, blob: Blob, offset: number, count: number) {\n        Helper.log(\"[gdi] escape: func=\" + func + \" offset=\" + offset + \" count=\" + count);\n    }\n\n    public setStretchBltMode(stretchMode: number) {\n        Helper.log(\"[gdi] setStretchBltMode: stretchMode=\" + stretchMode);\n    }\n\n    public stretchDib(srcX: number, srcY: number, srcW: number, srcH: number,\n                      dstX: number, dstY: number, dstW: number, dstH: number,\n                      rasterOp: number, colorUsage: number, dib: DIBitmap) {\n        Helper.log(\"[gdi] stretchDib: srcX=\" + srcX + \" srcY=\" + srcY + \" srcW=\" + srcW + \" srcH=\" + srcH\n            + \" dstX=\" + dstX + \" dstY=\" + dstY + \" dstW=\" + dstW + \" dstH=\" + dstH\n            + \" rasterOp=0x\" + rasterOp.toString(16));\n        srcX = this._todevX(srcX);\n        srcY = this._todevY(srcY);\n        srcW = this._todevW(srcW);\n        srcH = this._todevH(srcH);\n        dstX = this._todevX(dstX);\n        dstY = this._todevY(dstY);\n        dstW = this._todevW(dstW);\n        dstH = this._todevH(dstH);\n        Helper.log(\"[gdi] stretchDib: TRANSLATED: srcX=\" + srcX + \" srcY=\" + srcY + \" srcW=\" + srcW + \" srcH=\" + srcH\n            + \" dstX=\" + dstX + \" dstY=\" + dstY + \" dstW=\" + dstW + \" dstH=\" + dstH\n            + \" rasterOp=0x\" + rasterOp.toString(16) + \" colorUsage=0x\" + colorUsage.toString(16));\n        this._pushGroup();\n        this._svg.image(this.state._svggroup, dstX, dstY, dstW, dstH, dib.base64ref());\n    }\n\n    public stretchDibBits(srcX: number, srcY: number, srcW: number, srcH: number,\n                          dstX: number, dstY: number, dstW: number, dstH: number,\n                          rasterOp: number, dib: DIBitmap) {\n        Helper.log(\"[gdi] stretchDibBits: srcX=\" + srcX + \" srcY=\" + srcY + \" srcW=\" + srcW + \" srcH=\" + srcH\n            + \" dstX=\" + dstX + \" dstY=\" + dstY + \" dstW=\" + dstW + \" dstH=\" + dstH\n            + \" rasterOp=0x\" + rasterOp.toString(16));\n        srcX = this._todevX(srcX);\n        srcY = this._todevY(srcY);\n        srcW = this._todevW(srcW);\n        srcH = this._todevH(srcH);\n        dstX = this._todevX(dstX);\n        dstY = this._todevY(dstY);\n        dstW = this._todevW(dstW);\n        dstH = this._todevH(dstH);\n        Helper.log(\"[gdi] stretchDibBits: TRANSLATED:\"\n            + \" srcX=\" + srcX + \" srcY=\" + srcY + \" srcW=\" + srcW + \" srcH=\" + srcH\n            + \" dstX=\" + dstX + \" dstY=\" + dstY + \" dstW=\" + dstW + \" dstH=\" + dstH\n            + \" rasterOp=0x\" + rasterOp.toString(16));\n        this._pushGroup();\n        this._svg.image(this.state._svggroup, dstX, dstY, dstW, dstH, dib.base64ref());\n    }\n\n    public rectangle(rect: Rect, rw: number, rh: number) {\n        Helper.log(\"[gdi] rectangle: rect=\" + rect.toString() + \" with pen \" + this.state.selected.pen.toString()\n            + \" and brush \" + this.state.selected.brush.toString());\n        const bottom = this._todevY(rect.bottom);\n        const right = this._todevX(rect.right);\n        const top = this._todevY(rect.top);\n        const left = this._todevX(rect.left);\n        rw = this._todevH(rw);\n        rh = this._todevH(rh);\n        Helper.log(\"[gdi] rectangle: TRANSLATED: bottom=\" + bottom + \" right=\" + right + \" top=\" + top\n            + \" left=\" + left + \" rh=\" + rh + \" rw=\" + rw);\n        this._pushGroup();\n\n        const opts = this._applyOpts(null, true, true, false);\n        this._svg.rect(this.state._svggroup, left, top, right - left, bottom - top, rw / 2, rh / 2, opts);\n    }\n\n    public textOut(x: number, y: number, text: string) {\n        Helper.log(\"[gdi] textOut: x=\" + x + \" y=\" + y + \" text=\" + text\n            + \" with font \" + this.state.selected.font.toString());\n        x = this._todevX(x);\n        y = this._todevY(y);\n        Helper.log(\"[gdi] textOut: TRANSLATED: x=\" + x + \" y=\" + y);\n        this._pushGroup();\n\n        const opts = this._applyOpts(null, false, false, true);\n        if (this.state.selected.font.escapement !== 0) {\n            opts.transform = \"rotate(\" + [(-this.state.selected.font.escapement / 10), x, y] + \")\";\n            opts.style = \"dominant-baseline: middle; text-anchor: start;\";\n        }\n        if (this.state.bkmode === Helper.GDI.MixMode.OPAQUE) {\n            if (this.state._svgtextbkfilter == null) {\n                const filterId = Helper._makeUniqueId(\"f\");\n                const filter = this._svg.filter(this._getSvgDef(), filterId, 0, 0, 1, 1);\n                this._svg.filters.flood(filter, null, \"#\" + this.state.bkcolor.toHex(), 1.0);\n                this._svg.filters.composite(filter, null, null, \"SourceGraphic\");\n                this.state._svgtextbkfilter = filter;\n            }\n\n            opts.filter = \"url(#\" + this.state._svgtextbkfilter.id + \")\";\n        }\n        this._svg.text(this.state._svggroup, x, y, text, opts);\n    }\n\n    public extTextOut(x: number, y: number, text: string, fwOpts: number, rect: Rect, dx: number[]) {\n        Helper.log(\"[gdi] extTextOut: x=\" + x + \" y=\" + y + \" text=\" + text\n            + \" with font \" + this.state.selected.font.toString());\n        x = this._todevX(x);\n        y = this._todevY(y);\n        Helper.log(\"[gdi] extTextOut: TRANSLATED: x=\" + x + \" y=\" + y);\n        this._pushGroup();\n\n        const opts = this._applyOpts(null, false, false, true);\n        if (this.state.selected.font.escapement !== 0) {\n            opts.transform = \"rotate(\" + [(-this.state.selected.font.escapement / 10), x, y] + \")\";\n            opts.style = \"dominant-baseline: middle; text-anchor: start;\";\n        }\n        if (this.state.bkmode === Helper.GDI.MixMode.OPAQUE) {\n            if (this.state._svgtextbkfilter == null) {\n                const filterId = Helper._makeUniqueId(\"f\");\n                const filter = this._svg.filter(this._getSvgDef(), filterId, 0, 0, 1, 1);\n                this._svg.filters.flood(filter, null, \"#\" + this.state.bkcolor.toHex(), 1.0);\n                this._svg.filters.composite(filter, null, null, \"SourceGraphic\");\n                this.state._svgtextbkfilter = filter;\n            }\n\n            opts.filter = \"url(#\" + this.state._svgtextbkfilter.id + \")\";\n        }\n        this._svg.text(this.state._svggroup, x, y, text, opts);\n    }\n\n    public lineTo(x: number, y: number) {\n        Helper.log(\"[gdi] lineTo: x=\" + x + \" y=\" + y + \" with pen \" + this.state.selected.pen.toString());\n        const toX = this._todevX(x);\n        const toY = this._todevY(y);\n        const fromX = this._todevX(this.state.x);\n        const fromY = this._todevY(this.state.y);\n\n        // Update position\n        this.state.x = x;\n        this.state.y = y;\n\n        Helper.log(\"[gdi] lineTo: TRANSLATED: toX=\" + toX + \" toY=\" + toY + \" fromX=\" + fromX + \" fromY=\" + fromY);\n        this._pushGroup();\n\n        const opts = this._applyOpts(null, true, false, false);\n        this._svg.line(this.state._svggroup, fromX, fromY, toX, toY, opts);\n    }\n\n    public moveTo(x: number, y: number) {\n        Helper.log(\"[gdi] moveTo: x=\" + x + \" y=\" + y);\n        this.state.x = x;\n        this.state.y = y;\n    }\n\n    public polygon(points: PointS[], first: boolean) {\n        Helper.log(\"[gdi] polygon: points=\" + points + \" with pen \" + this.state.selected.pen.toString()\n            + \" and brush \" + this.state.selected.brush.toString());\n        const pts = [];\n        for (let i = 0; i < points.length; i++) {\n            const point = points[i];\n            pts.push([this._todevX(point.x), this._todevY(point.y)]);\n        }\n        Helper.log(\"[gdi] polygon: TRANSLATED: pts=\" + pts);\n        if (first) {\n            this._pushGroup();\n        }\n        const opts = {\n            \"fill-rule\": this.state.polyfillmode === Helper.GDI.PolyFillMode.ALTERNATE ? \"evenodd\" : \"nonzero\",\n        };\n        this._applyOpts(opts, true, true, false);\n        this._svg.polygon(this.state._svggroup, pts, opts);\n    }\n\n    public polyPolygon(polygons: PointS[][]) {\n        Helper.log(\"[gdi] polyPolygon: polygons.length=\" + polygons.length\n            + \" with pen \" + this.state.selected.pen.toString()\n            + \" and brush \" + this.state.selected.brush.toString());\n\n        const cnt = polygons.length;\n        for (let i = 0; i < cnt; i++) {\n            this.polygon(polygons[i], i === 0);\n        }\n    }\n\n    public polyline(points: PointS[]) {\n        Helper.log(\"[gdi] polyline: points=\" + points + \" with pen \" + this.state.selected.pen.toString());\n        const pts = [];\n        for (let i = 0; i < points.length; i++) {\n            const point = points[i];\n            pts.push([this._todevX(point.x), this._todevY(point.y)]);\n        }\n        Helper.log(\"[gdi] polyline: TRANSLATED: pts=\" + pts);\n        this._pushGroup();\n        const opts = this._applyOpts({fill: \"none\"}, true, false, false);\n        this._svg.polyline(this.state._svggroup, pts, opts);\n    }\n\n    public ellipse(rect: Rect) {\n        Helper.log(\"[gdi] ellipse: rect=\" + rect.toString() + \" with pen \" + this.state.selected.pen.toString()\n            + \" and brush \" + this.state.selected.brush.toString());\n        const bottom = this._todevY(rect.bottom);\n        const right = this._todevX(rect.right);\n        const top = this._todevY(rect.top);\n        const left = this._todevX(rect.left);\n        Helper.log(\"[gdi] ellipse: TRANSLATED: bottom=\" + bottom + \" right=\" + right + \" top=\" + top + \" left=\" + left);\n        this._pushGroup();\n        const width2 = (right - left) / 2;\n        const height2 = (bottom - top) / 2;\n        const opts = this._applyOpts(null, true, true, false);\n        this._svg.ellipse(this.state._svggroup, left + width2, top + height2, width2, height2, opts);\n    }\n\n    public excludeClipRect(rect: Rect) {\n        Helper.log(\"[gdi] excludeClipRect: rect=\" + rect.toString());\n        this._getClipRgn().subtract(rect);\n    }\n\n    public intersectClipRect(rect: Rect) {\n        Helper.log(\"[gdi] intersectClipRect: rect=\" + rect.toString());\n        this._getClipRgn().intersect(rect);\n    }\n\n    public offsetClipRgn(offX: number, offY: number) {\n        Helper.log(\"[gdi] offsetClipRgn: offX=\" + offX + \" offY=\" + offY);\n        this._getClipRgn().offset(offX, offY);\n    }\n\n    public setTextAlign(textAlignmentMode: number) {\n        Helper.log(\"[gdi] setTextAlign: textAlignmentMode=0x\" + textAlignmentMode.toString(16));\n        this.state.textalign = textAlignmentMode;\n    }\n\n    public setBkMode(bkMode: number) {\n        Helper.log(\"[gdi] setBkMode: bkMode=0x\" + bkMode.toString(16));\n        this.state.bkmode = bkMode;\n    }\n\n    public setTextColor(textColor: ColorRef) {\n        Helper.log(\"[gdi] setTextColor: textColor=\" + textColor.toString());\n        this.state.textcolor = textColor;\n    }\n\n    public setBkColor(bkColor: ColorRef) {\n        Helper.log(\"[gdi] setBkColor: bkColor=\" + bkColor.toString());\n        this.state.bkcolor = bkColor;\n        this.state._svgtextbkfilter = null;\n    }\n\n    public setPolyFillMode(polyFillMode: number) {\n        Helper.log(\"[gdi] setPolyFillMode: polyFillMode=\" + polyFillMode);\n        this.state.polyfillmode = polyFillMode;\n    }\n\n    public createBrush(brush: Brush) {\n        const idx = this._storeObject(brush);\n        Helper.log(\"[gdi] createBrush: brush=\" + brush.toString() + \" with handle \" + idx);\n    }\n\n    public createFont(font: Font) {\n        const idx = this._storeObject(font);\n        Helper.log(\"[gdi] createFont: font=\" + font.toString() + \" with handle \" + idx);\n    }\n\n    public createPen(pen: Pen) {\n        const idx = this._storeObject(pen);\n        Helper.log(\"[gdi] createPen: pen=\" + pen.toString() + \" width handle \" + idx);\n    }\n\n    public createPalette(palette: Palette) {\n        const idx = this._storeObject(palette);\n        Helper.log(\"[gdi] createPalette: palette=\" + palette.toString() + \" width handle \" + idx);\n    }\n\n    public createRegion(region: Region) {\n        const idx = this._storeObject(region);\n        Helper.log(\"[gdi] createRegion: region=\" + region.toString() + \" width handle \" + idx);\n    }\n\n    public createPatternBrush(patternBrush: Brush) {\n        const idx = this._storeObject(patternBrush);\n        Helper.log(\"[gdi] createRegion: region=\" + patternBrush.toString() + \" width handle \" + idx);\n    }\n\n    public selectObject(objIdx: number, checkType: string) {\n        const obj = this._getObject(objIdx);\n        if (obj != null && (checkType == null || obj.type === checkType)) {\n            this._selectObject(obj);\n            Helper.log(\"[gdi] selectObject: objIdx=\" + objIdx\n                + (obj ? \" selected \" + obj.type + \": \" + obj.toString() : \"[invalid index]\"));\n        } else {\n            Helper.log(\"[gdi] selectObject: objIdx=\" + objIdx\n                + (obj ? \" invalid object type: \" + obj.type : \"[invalid index]\"));\n        }\n    }\n\n    public deleteObject(objIdx: number) {\n        const ret = this._deleteObject(objIdx);\n        Helper.log(\"[gdi] deleteObject: objIdx=\" + objIdx + (ret ? \" deleted object\" : \"[invalid index]\"));\n    }\n\n    private _pushGroup() {\n        if (this.state._svggroup == null || this.state._svgclipChanged) {\n            this.state._svgclipChanged = false;\n            this.state._svgtextbkfilter = null;\n\n            const settings: any = {\n                viewBox: [this.state.vx, this.state.vy, this.state.vw, this.state.vh].join(\" \"),\n                preserveAspectRatio: \"none\",\n            };\n            if (this.state.clip != null) {\n                Helper.log(\"[gdi] new svg x=\" + this.state.vx + \" y=\" + this.state.vy\n                    + \" width=\" + this.state.vw + \" height=\" + this.state.vh + \" with clipping\");\n                settings[\"clip-path\"] = \"url(#\" + this._getSvgClipPathForRegion(this.state.clip) + \")\";\n            } else {\n                Helper.log(\"[gdi] new svg x=\" + this.state.vx + \" y=\" + this.state.vy\n                    + \" width=\" + this.state.vw + \" height=\" + this.state.vh + \" without clipping\");\n            }\n            this.state._svggroup = this._svg.svg(this.state._svggroup,\n                this.state.vx, this.state.vy, this.state.vw, this.state.vh, settings);\n        }\n    }\n\n    private _storeObject(obj: Obj) {\n        let i = 0;\n        while (this.objects[i.toString()] != null && i <= 65535) {\n            i++;\n        }\n        if (i > 65535) {\n            Helper.log(\"[gdi] Too many objects!\");\n            return -1;\n        }\n\n        this.objects[i.toString()] = obj;\n        return i;\n    }\n\n    private _getObject(objIdx: number) {\n        const obj = this.objects[objIdx.toString()];\n        if (obj == null) {\n            Helper.log(\"[gdi] No object with handle \" + objIdx);\n        }\n        return obj;\n    }\n\n    private _getSvgDef() {\n        if (this._svgdefs == null) {\n            this._svgdefs = this._svg.defs();\n        }\n        return this._svgdefs;\n    }\n\n    private _getSvgClipPathForRegion(region: Region) {\n        for (const existingId in this._svgClipPaths) {\n            const rgn = this._svgClipPaths[existingId];\n            if (rgn === region) {\n                return existingId;\n            }\n        }\n\n        const id = Helper._makeUniqueId(\"c\");\n        const sclip = this._svg.clipPath(this._getSvgDef(), id, \"userSpaceOnUse\");\n        switch (region.complexity) {\n            case 1:\n                this._svg.rect(sclip, this._todevX(region.bounds.left), this._todevY(region.bounds.top),\n                    this._todevW(region.bounds.right - region.bounds.left),\n                    this._todevH(region.bounds.bottom - region.bounds.top),\n                    { \"fill\": \"black\", \"stroke-width\": 0 });\n                break;\n            case 2:\n                for (let i = 0; i < region.scans.length; i++) {\n                    const scan = region.scans[i];\n                    for (let j = 0; j < scan.scanlines.length; j++) {\n                        const scanline = scan.scanlines[j];\n                        this._svg.rect(sclip, this._todevX(scanline.left), this._todevY(scan.top),\n                            this._todevW(scanline.right - scanline.left), this._todevH(scan.bottom - scan.top),\n                            { \"fill\": \"black\", \"stroke-width\": 0 });\n                    }\n                }\n                break;\n        }\n        this._svgClipPaths[id] = region;\n        return id;\n    }\n\n    private _getSvgPatternForBrush(brush: Brush) {\n        for (const existingId in this._svgPatterns) {\n            const pat = this._svgPatterns[existingId];\n            if (pat === brush) {\n                return existingId;\n            }\n        }\n\n        let width;\n        let height;\n        let img;\n        switch (brush.style) {\n            case Helper.GDI.BrushStyle.BS_PATTERN:\n                width = brush.pattern.getWidth();\n                height = brush.pattern.getHeight();\n                break;\n            case Helper.GDI.BrushStyle.BS_DIBPATTERNPT:\n                width = brush.dibpatternpt.getWidth();\n                height = brush.dibpatternpt.getHeight();\n                img = brush.dibpatternpt.base64ref();\n                break;\n            default:\n                throw new WMFJSError(\"Invalid brush style\");\n        }\n\n        const id = Helper._makeUniqueId(\"p\");\n        const spat = this._svg.pattern(this._getSvgDef(), id, 0, 0, width, height, {patternUnits: \"userSpaceOnUse\"});\n        this._svg.image(spat, 0, 0, width, height, img);\n        this._svgPatterns[id] = brush;\n        return id;\n    }\n\n    private _selectObject(obj: Obj) {\n        this.state.selected[obj.type] = obj;\n        if (obj.type === \"region\") {\n            this.state._svgclipChanged = true;\n        }\n    }\n\n    private _deleteObject(objIdx: number) {\n        const obj = this.objects[objIdx.toString()];\n        if (obj != null) {\n            for (let i = 0; i < this.statestack.length; i++) {\n                const state = this.statestack[i];\n                if (state.selected[obj.type] === obj) {\n                    state.selected[obj.type] = this.defObjects[obj.type].clone();\n                }\n            }\n            delete this.objects[objIdx.toString()];\n            return true;\n        }\n\n        Helper.log(\"[gdi] Cannot delete object with invalid handle \" + objIdx);\n        return false;\n    }\n\n    private _getClipRgn() {\n        if (this.state.clip != null) {\n            if (!this.state.ownclip) {\n                this.state.clip = this.state.clip.clone();\n            }\n        } else {\n            if (this.state.selected.region != null) {\n                this.state.clip = this.state.selected.region.clone();\n            } else {\n                this.state.clip = CreateSimpleRegion(this.state.wx, this.state.wy, this.state.wx + this.state.ww,\n                    this.state.wy + this.state.wh);\n            }\n        }\n        this.state.ownclip = true;\n        return this.state.clip;\n    }\n\n    private _todevX(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor((val - this.state.wx) * (this.state.vw / this.state.ww)) + this.state.vx;\n    }\n\n    private _todevY(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor((val - this.state.wy) * (this.state.vh / this.state.wh)) + this.state.vy;\n    }\n\n    private _todevW(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor(val * (this.state.vw / this.state.ww)) + this.state.vx;\n    }\n\n    private _todevH(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor(val * (this.state.vh / this.state.wh)) + this.state.vy;\n    }\n\n    private _tologicalX(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor((val - this.state.vx) / (this.state.vw / this.state.ww)) + this.state.wx;\n    }\n\n    private _tologicalY(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor((val - this.state.vy) / (this.state.vh / this.state.wh)) + this.state.wy;\n    }\n\n    private _tologicalW(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor(val / (this.state.vw / this.state.ww)) + this.state.wx;\n    }\n\n    private _tologicalH(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor(val / (this.state.vh / this.state.wh)) + this.state.wy;\n    }\n\n    private _applyOpts(opts: any, usePen: boolean, useBrush: boolean, useFont: boolean) {\n        if (opts == null) {\n            opts = {};\n        }\n        if (usePen) {\n            const pen = this.state.selected.pen;\n            if (pen.style !== Helper.GDI.PenStyle.PS_NULL) {\n                opts.stroke =  \"#\" + pen.color.toHex(), // TODO: pen style\n                    opts[\"stroke-width\"] = this._todevW(pen.width.x); // TODO: is .y ever used?\n\n                let dotWidth;\n                if ((pen.linecap & Helper.GDI.PenStyle.PS_ENDCAP_SQUARE) !== 0) {\n                    opts[\"stroke-linecap\"] = \"square\";\n                    dotWidth = 1;\n                } else if ((pen.linecap & Helper.GDI.PenStyle.PS_ENDCAP_FLAT) !== 0) {\n                    opts[\"stroke-linecap\"] = \"butt\";\n                    dotWidth = opts[\"stroke-width\"];\n                } else {\n                    opts[\"stroke-linecap\"] = \"round\";\n                    dotWidth = 1;\n                }\n\n                if ((pen.join & Helper.GDI.PenStyle.PS_JOIN_BEVEL) !== 0) {\n                    opts[\"stroke-linejoin\"] = \"bevel\";\n                } else if ((pen.join & Helper.GDI.PenStyle.PS_JOIN_MITER) !== 0) {\n                    opts[\"stroke-linejoin\"] = \"miter\";\n                } else {\n                    opts[\"stroke-linejoin\"] = \"round\";\n                }\n\n                const dashWidth = opts[\"stroke-width\"] * 4;\n                const dotSpacing = opts[\"stroke-width\"]  * 2;\n                switch (pen.style) {\n                    case Helper.GDI.PenStyle.PS_DASH:\n                        opts[\"stroke-dasharray\"] = [dashWidth, dotSpacing].toString();\n                        break;\n                    case Helper.GDI.PenStyle.PS_DOT:\n                        opts[\"stroke-dasharray\"] = [dotWidth, dotSpacing].toString();\n                        break;\n                    case Helper.GDI.PenStyle.PS_DASHDOT:\n                        opts[\"stroke-dasharray\"] = [dashWidth, dotSpacing, dotWidth, dotSpacing].toString();\n                        break;\n                    case Helper.GDI.PenStyle.PS_DASHDOTDOT:\n                        opts[\"stroke-dasharray\"]\n                            = [dashWidth, dotSpacing, dotWidth, dotSpacing, dotWidth, dotSpacing].toString();\n                        break;\n                }\n            }\n        }\n        if (useBrush) {\n            const brush = this.state.selected.brush;\n            switch (brush.style) {\n                case Helper.GDI.BrushStyle.BS_SOLID:\n                    opts.fill = \"#\" + brush.color.toHex();\n                    break;\n                case Helper.GDI.BrushStyle.BS_PATTERN:\n                case Helper.GDI.BrushStyle.BS_DIBPATTERNPT:\n                    opts.fill = \"url(#\" + this._getSvgPatternForBrush(brush) + \")\";\n                    break;\n                case Helper.GDI.BrushStyle.BS_NULL:\n                    opts.fill = \"none\";\n                    break;\n                default:\n                    Helper.log(\"[gdi] unsupported brush style: \" + brush.style);\n                    opts.fill = \"none\";\n                    break;\n            }\n        }\n        if (useFont) {\n            const font = this.state.selected.font;\n            opts[\"font-family\"] = font.facename;\n            opts[\"font-size\"] = this._todevH(Math.abs(font.height));\n            opts.fill = \"#\" + this.state.textcolor.toHex();\n        }\n        return opts;\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { Blob } from \"./Blob\";\nimport { WMFJSError } from \"./Helper\";\n\nexport class PointS {\n    public x: number;\n    public y: number;\n\n    constructor(reader: Blob, x?: number, y?: number) {\n        if (reader != null) {\n            this.x = reader.readInt16();\n            this.y = reader.readInt16();\n        } else {\n            this.x = x;\n            this.y = y;\n        }\n    }\n\n    public clone() {\n        return new PointS(null, this.x, this.y);\n    }\n\n    public toString() {\n        return \"{x: \" + this.x + \", y: \" + this.y + \"}\";\n    }\n}\n\nexport class Rect {\n    public bottom: number;\n    public right: number;\n    public top: number;\n    public left: number;\n\n    constructor(reader: Blob, left?: number, top?: number, right?: number, bottom?: number) {\n        if (reader != null) {\n            this.bottom = reader.readInt16();\n            this.right = reader.readInt16();\n            this.top = reader.readInt16();\n            this.left = reader.readInt16();\n        } else {\n            this.bottom = bottom;\n            this.right = right;\n            this.top = top;\n            this.left = left;\n        }\n    }\n\n    public clone() {\n        return new Rect(null, this.left, this.top, this.right, this.bottom);\n    }\n\n    public toString() {\n        return \"{left: \" + this.left + \", top: \" + this.top + \", right: \" + this.right\n            + \", bottom: \" + this.bottom + \"}\";\n    }\n\n    public empty() {\n        return this.left >= this.right || this.top >= this.bottom;\n    }\n\n    public intersect(rect: Rect) {\n        if (this.empty() || rect.empty()) {\n            return null;\n        }\n        if (this.left >= rect.right || this.top >= rect.bottom ||\n            this.right <= rect.left || this.bottom <= rect.top) {\n            return null;\n        }\n        return new Rect(null, Math.max(this.left, rect.left), Math.max(this.top, rect.top),\n            Math.min(this.right, rect.right), Math.min(this.bottom, rect.bottom));\n    }\n}\n\nexport class Obj {\n    public type: string;\n\n    constructor(type: string) {\n        this.type = type;\n    }\n\n    public clone(): Obj {\n        throw new WMFJSError(\"clone not implemented\");\n    }\n\n    public toString() {\n        throw new WMFJSError(\"toString not implemented\");\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { Blob } from \"./Blob\";\nimport { Helper, WMFJSError } from \"./Helper\";\nimport { Obj, Rect } from \"./Primitives\";\n\nexport class Region extends Obj {\n    public bounds: Rect;\n    public scans: Scan[];\n    public complexity: number;\n\n    constructor(reader: Blob, copy?: Region) {\n        super(\"region\");\n        if (reader != null) {\n            reader.skip(2);\n            if (reader.readInt16() !== 6) {\n                throw new WMFJSError(\"Invalid region identifier\");\n            }\n            reader.skip(2);\n            const rgnSize = reader.readInt16();\n            const scanCnt = reader.readInt16();\n            reader.skip(2);\n            // note, Rect in reverse, can't use Rect(reader) directly\n            const left = reader.readInt16();\n            const top = reader.readInt16();\n            const right = reader.readInt16();\n            const bottom = reader.readInt16();\n            this.bounds = new Rect(null, left, top, right, bottom);\n            this.scans = [];\n            for (let i = 0; i < scanCnt; i++) {\n                this.scans.push(new Scan(reader));\n            }\n            this._updateComplexity();\n        } else if (copy != null) {\n            this.bounds = copy.bounds != null ? copy.bounds.clone() : null;\n            if (copy.scans != null) {\n                this.scans = [];\n                for (let i = 0; i < copy.scans.length; i++) {\n                    this.scans.push(copy.scans[i].clone());\n                }\n            } else {\n                this.scans = null;\n            }\n            this.complexity = copy.complexity;\n        } else {\n            this.bounds = null;\n            this.scans = null;\n            this.complexity = 0;\n        }\n    }\n\n    public clone() {\n        return new Region(null, this);\n    }\n\n    public toString() {\n        const _complexity = [\"null\", \"simple\", \"complex\"];\n        return \"{complexity: \" + _complexity[this.complexity]\n            + \" bounds: \" + (this.bounds != null ? this.bounds.toString() : \"[none]\")\n            + \" #scans: \" + (this.scans != null ? this.scans.length : \"[none]\") + \"}\";\n    }\n\n    public _updateComplexity() {\n        if (this.bounds == null) {\n            this.complexity = 0;\n            this.scans = null;\n        } else if (this.bounds.empty()) {\n            this.complexity = 0;\n            this.scans = null;\n            this.bounds = null;\n        } else if (this.scans == null) {\n            this.complexity = 1;\n        } else {\n            this.complexity = 2;\n            if (this.scans.length === 1) {\n                const scan = this.scans[0];\n                if (scan.top === this.bounds.top && scan.bottom === this.bounds.bottom && scan.scanlines.length === 1) {\n                    const scanline = scan.scanlines[0];\n                    if (scanline.left === this.bounds.left && scanline.right === this.bounds.right) {\n                        this.scans = null;\n                        this.complexity = 1;\n                    }\n                }\n            }\n        }\n    }\n\n    public subtract(rect: Rect) {\n        Helper.log(\"[wmf] Region \" + this.toString() + \" subtract \" + rect.toString());\n\n        if (this.bounds != null) {\n            const isect = this.bounds.intersect(rect);\n            if (isect != null) { // Only need to do anything if there is any chance of an overlap\n                if (this.scans == null) {\n                    // We currently have a simple region and there is some kind of an overlap.\n                    // We need to create scanlines now.  Simplest method is to fake one scan line\n                    // that equals the simple region and re-use the same logic as for complex regions\n                    this.scans = [];\n                    this.scans.push( new Scan(null, null, this.bounds.top, this.bounds.bottom,\n                        [{left: this.bounds.left, right: this.bounds.right}]));\n                    this.complexity = 2;\n                }\n\n                // We (now) have a complex region.  First we skip any scans that are entirely above rect.top\n                // The first scan that falls partially below rect.top needs to be split into two scans.\n                let si = 0;\n                while (si < this.scans.length) {\n                    const scan = this.scans[si];\n                    if (scan.bottom >= rect.top) {\n                        // We need to clone this scan into two so that we can subtract from the second one\n                        const cloned = scan.clone();\n                        scan.bottom = rect.top - 1;\n                        cloned.top = rect.top;\n                        if (scan.top >= scan.bottom) {\n                            this.scans[si] = cloned;\n                        } else {\n                            Helper.log(\"[wmf] Region split top scan \" + si + \" for substraction\");\n                            this.scans.splice(++si, 0, cloned);\n                        }\n                        break;\n                    }\n                    si++;\n                }\n\n                // Now find the first one that falls at least partially below rect.bottom, which needs to be\n                // split if it is only partially below rect.bottom\n                const first = si;\n                while (si < this.scans.length) {\n                    const scan = this.scans[si];\n                    if (scan.top > rect.bottom) {\n                        break;\n                    }\n                    if (scan.bottom > rect.bottom) {\n                        // We need to clone this scan into two so that we can subtract from the first one\n                        const cloned = scan.clone();\n                        scan.bottom = rect.bottom;\n                        cloned.top = rect.bottom + 1;\n                        if (scan.top >= scan.bottom) {\n                            this.scans[si] = cloned;\n                        } else {\n                            Helper.log(\"[wmf] Region split bottom scan \" + si + \" for substraction\");\n                            this.scans.splice(++si, 0, cloned);\n                        }\n                        break;\n                    }\n                    si++;\n                }\n\n                // Now perform a subtraction on each scan in between rect.top and rect.bottom.  Because we\n                // cloned scans that partially overlapped rect.top and rect.bottom, we don't have to\n                // account for this anymore.\n                if (first < this.scans.length) {\n                    let last = si;\n                    si = first;\n                    while (si < last) {\n                        const scan = this.scans[si];\n                        if (!scan.subtract(rect.left, rect.right)) {\n                            Helper.log(\"[wmf] Region remove now empty scan \" + si + \" due to subtraction\");\n                            this.scans.splice(si, 1);\n                            last--;\n                            continue;\n                        }\n\n                        si++;\n                    }\n                }\n\n                // Update bounds\n                if (this.scans != null) {\n                    let left;\n                    let top;\n                    let right;\n                    let bottom;\n                    const len = this.scans.length;\n                    for (let i = 0; i < len; i++) {\n                        const scan = this.scans[i];\n                        if (i === 0) {\n                            top = scan.top;\n                        }\n                        if (i === len - 1) {\n                            bottom = scan.bottom;\n                        }\n\n                        const slen = scan.scanlines.length;\n                        if (slen > 0) {\n                            let scanline = scan.scanlines[0];\n                            if (left == null || scanline.left < left) {\n                                left = scanline.left;\n                            }\n                            scanline = scan.scanlines[slen - 1];\n                            if (right == null || scanline.right > right) {\n                                right = scanline.right;\n                            }\n                        }\n                    }\n\n                    if (left != null && top != null && right != null && bottom != null) {\n                        this.bounds = new Rect(null, left, top, right, bottom);\n                        this._updateComplexity();\n                    } else {\n                        // This has to be a null region now\n                        this.bounds = null;\n                        this.scans = null;\n                        this.complexity = 0;\n                    }\n                } else {\n                    this._updateComplexity();\n                }\n            }\n        }\n\n        Helper.log(\"[wmf] Region subtraction -> \" + this.toString());\n    }\n\n    public intersect(rect: Rect) {\n        Helper.log(\"[wmf] Region \" + this.toString() + \" intersect with \" + rect.toString());\n        if (this.bounds != null) {\n            this.bounds = this.bounds.intersect(rect);\n            if (this.bounds != null) {\n                if (this.scans != null) {\n                    let si = 0;\n                    // Remove any scans that are entirely above the new bounds.top\n                    while (si < this.scans.length) {\n                        const scan = this.scans[si];\n                        if (scan.bottom < this.bounds.top) {\n                            si++;\n                        } else {\n                            break;\n                        }\n                    }\n                    if (si > 0) {\n                        Helper.log(\"[wmf] Region remove \" + si + \" scans from top\");\n                        this.scans.splice(0, si);\n\n                        // Adjust the first scan's top to match the new bounds.top\n                        if (this.scans.length > 0) {\n                            this.scans[0].top = this.bounds.top;\n                        }\n                    }\n\n                    // Get rid of anything that falls outside the new bounds.left/bounds.right\n                    si = 0;\n                    while (si < this.scans.length) {\n                        const scan = this.scans[si];\n                        if (scan.top > this.bounds.bottom) {\n                            // Remove this and all remaining scans that fall entirely below the new bounds.bottom\n                            Helper.log(\"[wmf] Region remove \" + (this.scans.length - si) + \" scans from bottom\");\n                            this.scans.splice(si, this.scans.length - si);\n                            break;\n                        }\n                        if (!scan.intersect(this.bounds.left, this.bounds.right)) {\n                            // Remove now empty scan\n                            Helper.log(\"[wmf] Region remove now empty scan \" + si + \" due to intersection\");\n                            this.scans.splice(si, 1);\n                            continue;\n                        }\n                        si++;\n                    }\n\n                    // If there are any scans left, adjust the last one's bottom to the new bounds.bottom\n                    if (this.scans.length > 0) {\n                        this.scans[this.scans.length - 1].bottom = this.bounds.bottom;\n                    }\n\n                    this._updateComplexity();\n                }\n            } else {\n                this.scans = null;\n                this.complexity = 0;\n            }\n        }\n        Helper.log(\"[wmf] Region intersection -> \" + this.toString());\n    }\n\n    public offset(offX: number, offY: number) {\n        if (this.bounds != null) {\n            this.bounds.left += offX;\n            this.bounds.top += offY;\n            this.bounds.right += offX;\n            this.bounds.bottom += offY;\n        }\n\n        if (this.scans != null) {\n            const slen = this.scans.length;\n            for (let si = 0; si < slen; si++) {\n                const scan = this.scans[si];\n                scan.top += offY;\n                scan.bottom += offY;\n\n                const len = scan.scanlines.length;\n                for (let i = 0; i < len; i++) {\n                    const scanline = scan.scanlines[i];\n                    scanline.left += offX;\n                    scanline.right += offX;\n                }\n            }\n        }\n    }\n}\n\nexport function CreateSimpleRegion(left: number, top: number, right: number, bottom: number) {\n    const rgn = new Region(null, null);\n    rgn.bounds = new Rect(null, left, top, right, bottom);\n    rgn._updateComplexity();\n    return rgn;\n}\n\nexport class Scan {\n    public top: number;\n    public bottom: number;\n    public scanlines: Array<{left: number, right: number}>;\n\n    constructor(reader: Blob, copy?: Scan, top?: number, bottom?: number,\n                scanlines?: Array<{left: number, right: number}>) {\n        if (reader != null) {\n            const cnt = reader.readUint16();\n            this.top = reader.readUint16();\n            this.bottom = reader.readUint16();\n            this.scanlines = [];\n            for (let i = 0; i < cnt; i++) {\n                const left = reader.readUint16();\n                const right = reader.readUint16();\n                this.scanlines.push({left, right});\n            }\n            reader.skip(2);\n        } else if (copy != null) {\n            this.top = copy.top;\n            this.bottom = copy.bottom;\n            this.scanlines = [];\n            for (let i = 0; i < copy.scanlines.length; i++) {\n                const scanline = copy.scanlines[i];\n                this.scanlines.push({left: scanline.left, right: scanline.right});\n            }\n        } else {\n            this.top = top;\n            this.bottom = bottom;\n            this.scanlines = scanlines;\n        }\n    }\n\n    public clone() {\n        return new Scan(null, this);\n    }\n\n    public subtract(left: number, right: number) {\n        let i;\n\n        // Keep everything on the left side\n        i = 0;\n        while (i < this.scanlines.length) {\n            const scanline = this.scanlines[i];\n            if (scanline.left <= left) {\n                if (scanline.right >= left) {\n                    scanline.right = left - 1;\n                    if (scanline.left >= scanline.right) {\n                        this.scanlines.splice(i, 1);\n                        continue;\n                    }\n                }\n                i++;\n            } else {\n                break;\n            }\n        }\n\n        // Find the first one that may exceed to the right side\n        const first = i;\n        let cnt = 0;\n        while (i < this.scanlines.length) {\n            const scanline = this.scanlines[i];\n            if (scanline.right > right) {\n                scanline.left = right;\n                cnt = i - first;\n                if (scanline.left >= scanline.right) {\n                    cnt++;\n                }\n                break;\n            }\n            i++;\n        }\n\n        // Delete everything we're subtracting\n        if (cnt > 0 && first < this.scanlines.length) {\n            this.scanlines.splice(first, cnt);\n        }\n\n        return this.scanlines.length > 0;\n    }\n\n    public intersect(left: number, right: number) {\n        // Get rid of anything that falls entirely outside to the left\n        for (let i = 0; i < this.scanlines.length; i++) {\n            const scanline = this.scanlines[i];\n            if (scanline.left >= left || scanline.right >= left) {\n                if (i > 0) {\n                    this.scanlines.splice(0, i);\n                }\n                break;\n            }\n        }\n\n        if (this.scanlines.length > 0) {\n            // Adjust the first to match the left, if needed\n            let scanline = this.scanlines[0];\n            if (scanline.left < left) {\n                scanline.left = left;\n            }\n\n            // Get rid of anything that falls entirely outside to the right\n            for (let i = 0; i < this.scanlines.length; i++) {\n                scanline = this.scanlines[i];\n                if (scanline.left > right) {\n                    this.scanlines.splice(i, this.scanlines.length - i);\n                    break;\n                }\n            }\n\n            if (this.scanlines.length > 0) {\n                // Adjust the last to match the right, if needed\n                scanline = this.scanlines[this.scanlines.length - 1];\n                if (scanline.right > right) {\n                    scanline.right = right;\n                }\n            }\n        }\n        return this.scanlines.length > 0;\n    }\n\n    public toString() {\n        return \"{ #scanlines: \" + this.scanlines.length + \"}\";\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { Bitmap16, DIBitmap, PatternBitmap16 } from \"./Bitmap\";\nimport { Blob } from \"./Blob\";\nimport { Helper } from \"./Helper\";\nimport { Obj, PointS } from \"./Primitives\";\n\nexport class ColorRef {\n    public r: number;\n    public g: number;\n    public b: number;\n\n    constructor(reader: Blob, r?: number, g?: number, b?: number) {\n        if (reader != null) {\n            this.r = reader.readUint8();\n            this.g = reader.readUint8();\n            this.b = reader.readUint8();\n            reader.skip(1);\n        } else {\n            this.r = r;\n            this.g = g;\n            this.b = b;\n        }\n    }\n\n    public clone() {\n        return new ColorRef(null, this.r, this.g, this.b);\n    }\n\n    public toHex() {\n        const rgb = (this.r << 16) | (this.g << 8) | this.b;\n        return (0x1000000 + rgb).toString(16).slice(1);\n    }\n\n    public toString() {\n        return \"{r: \" + this.r + \", g: \" + this.g + \", b: \" + this.b + \"}\";\n    }\n}\n\nexport class Font extends Obj {\n    public height: number;\n    public width: number;\n    public escapement: number;\n    public orientation: number;\n    public weight: number;\n    public italic: number;\n    public underline: number;\n    public strikeout: number;\n    public charset: number;\n    public outprecision: number;\n    public clipprecision: number;\n    public quality: number;\n    public pitch: number;\n    public family: number;\n    public facename: string;\n\n    constructor(reader: Blob, copy: Font | number) {\n        super(\"font\");\n        if (reader != null) {\n            this.height = reader.readInt16();\n            this.width = reader.readInt16();\n            this.escapement = reader.readInt16();\n            this.orientation = reader.readInt16();\n            this.weight = reader.readInt16();\n            this.italic = reader.readUint8();\n            this.underline = reader.readUint8();\n            this.strikeout = reader.readUint8();\n            this.charset = reader.readUint8();\n            this.outprecision = reader.readUint8();\n            this.clipprecision = reader.readUint8();\n            this.quality = reader.readUint8();\n            const pitchAndFamily = reader.readUint8();\n            this.pitch = pitchAndFamily & 0xf; // TODO: double check\n            this.family = (pitchAndFamily >> 6) & 0x3; // TODO: double check\n\n            const dataLength = copy as number;\n            const start = reader.pos;\n            this.facename = reader.readNullTermString(Math.min(dataLength - (reader.pos - start), 32));\n        } else if (copy != null) {\n            copy = copy as Font;\n            this.height = copy.height;\n            this.width = copy.width;\n            this.escapement = copy.escapement;\n            this.orientation = copy.orientation;\n            this.weight = copy.weight;\n            this.italic = copy.italic;\n            this.underline = copy.underline;\n            this.strikeout = copy.strikeout;\n            this.charset = copy.charset;\n            this.outprecision = copy.outprecision;\n            this.clipprecision = copy.clipprecision;\n            this.quality = copy.quality;\n            this.pitch = copy.pitch;\n            this.family = copy.family;\n            this.facename = copy.facename;\n        } else {\n            // TODO: Values for a default font?\n            this.height = -80;\n            this.width = 0;\n            this.escapement = 0;\n            this.orientation = 0;\n            this.weight = 400;\n            this.italic = 0;\n            this.underline = 0;\n            this.strikeout = 0;\n            this.charset = 0;\n            this.outprecision = 0;\n            this.clipprecision = 0;\n            this.quality = 0;\n            this.pitch = 0;\n            this.family = 0;\n            this.facename = \"Helvetica\";\n        }\n    }\n\n    public clone() {\n        return new Font(null, this);\n    }\n\n    public toString() {\n        return JSON.stringify(this);\n    }\n}\n\nexport class Brush extends Obj {\n    public style: number;\n    public color: ColorRef;\n    public pattern: Bitmap16;\n    public colorusage: number;\n    public dibpatternpt: DIBitmap;\n    public hatchstyle: number;\n\n    constructor(reader: Blob, copy: Brush | number, forceDibPattern?: boolean | PatternBitmap16) {\n        super(\"brush\");\n        if (reader != null) {\n            const dataLength = copy as number;\n            const start = reader.pos;\n\n            if (forceDibPattern === true || forceDibPattern === false) {\n                this.style = reader.readUint16();\n                if (forceDibPattern && this.style !== Helper.GDI.BrushStyle.BS_PATTERN) {\n                    this.style = Helper.GDI.BrushStyle.BS_DIBPATTERNPT;\n                }\n                switch (this.style) {\n                    case Helper.GDI.BrushStyle.BS_SOLID:\n                        this.color = new ColorRef(reader);\n                        break;\n                    case Helper.GDI.BrushStyle.BS_PATTERN:\n                        reader.skip(forceDibPattern ? 2 : 6);\n                        this.pattern = new Bitmap16(reader, dataLength - (reader.pos - start));\n                        break;\n                    case Helper.GDI.BrushStyle.BS_DIBPATTERNPT:\n                        this.colorusage = forceDibPattern ? reader.readUint16() : reader.readUint32();\n                        if (!forceDibPattern) {\n                            reader.skip(2);\n                        }\n                        this.dibpatternpt = new DIBitmap(reader, dataLength - (reader.pos - start));\n                        break;\n                    case Helper.GDI.BrushStyle.BS_HATCHED:\n                        this.color = new ColorRef(reader);\n                        this.hatchstyle = reader.readUint16();\n                        break;\n                }\n            } else if (forceDibPattern instanceof PatternBitmap16) {\n                this.style = Helper.GDI.BrushStyle.BS_PATTERN;\n                this.pattern = forceDibPattern;\n            }\n        } else if (copy != null) {\n            copy = copy as Brush;\n            this.style = copy.style;\n            switch (this.style) {\n                case Helper.GDI.BrushStyle.BS_SOLID:\n                    this.color = copy.color.clone();\n                    break;\n                case Helper.GDI.BrushStyle.BS_PATTERN:\n                    this.pattern = copy.pattern.clone();\n                    break;\n                case Helper.GDI.BrushStyle.BS_DIBPATTERNPT:\n                    this.colorusage = copy.colorusage;\n                    this.dibpatternpt = copy.dibpatternpt;\n                    break;\n                case Helper.GDI.BrushStyle.BS_HATCHED:\n                    this.color = copy.color.clone();\n                    this.hatchstyle = copy.hatchstyle;\n                    break;\n            }\n        }\n    }\n\n    public clone() {\n        return new Brush(null, this);\n    }\n\n    public toString() {\n        let ret = \"{style: \" + this.style;\n        switch (this.style) {\n            case Helper.GDI.BrushStyle.BS_SOLID:\n                ret += \", color: \" + this.color.toString();\n                break;\n            case Helper.GDI.BrushStyle.BS_DIBPATTERNPT:\n                ret += \", colorusage: \" + this.colorusage;\n                break;\n            case Helper.GDI.BrushStyle.BS_HATCHED:\n                ret += \", color: \" + this.color.toString() + \", hatchstyle: \" + this.hatchstyle;\n                break;\n        }\n        return ret + \"}\";\n    }\n}\n\nexport class Pen extends Obj {\n    public style: number;\n    public width: PointS;\n    public color: ColorRef;\n    public linecap: number;\n    public join: number;\n\n    constructor(reader: Blob, style?: number, width?: PointS, color?: ColorRef, linecap?: number, join?: number) {\n        super(\"pen\");\n        if (reader != null) {\n            style = reader.readUint16();\n            this.style = style & 0xFF;\n            this.width = new PointS(reader);\n            this.color = new ColorRef(reader);\n            this.linecap = (style & (Helper.GDI.PenStyle.PS_ENDCAP_SQUARE | Helper.GDI.PenStyle.PS_ENDCAP_FLAT));\n            this.join = (style & (Helper.GDI.PenStyle.PS_JOIN_BEVEL | Helper.GDI.PenStyle.PS_JOIN_MITER));\n        } else {\n            this.style = style;\n            this.width = width;\n            this.color = color;\n            this.linecap = linecap;\n            this.join = join;\n        }\n    }\n\n    public clone() {\n        return new Pen(null, this.style, this.width.clone(), this.color.clone(), this.linecap, this.join);\n    }\n\n    public toString() {\n        return \"{style: \" + this.style + \", width: \" + this.width.toString() + \", color: \" + this.color.toString()\n            + \", linecap: \" + this.linecap + \", join: \" + this.join + \"}\";\n    }\n}\n\nexport class PaletteEntry {\n    public flag: number;\n    public b: number;\n    public g: number;\n    public r: number;\n\n    constructor(reader: Blob, copy?: PaletteEntry) {\n        if (reader != null) {\n            this.flag = reader.readUint8();\n            this.b = reader.readUint8();\n            this.g = reader.readUint8();\n            this.r = reader.readUint8();\n        } else {\n            this.flag = copy.flag;\n            this.b = copy.b;\n            this.g = copy.g;\n            this.r = copy.r;\n        }\n    }\n\n    public clone() {\n        return new PaletteEntry(null, this);\n    }\n}\n\nexport class Palette extends Obj {\n    public start: number;\n    public entries: PaletteEntry[];\n\n    constructor(reader: Blob, copy?: Palette) {\n        super(\"palette\");\n        if (reader != null) {\n            this.start = reader.readUint16();\n            let cnt = reader.readUint16();\n            this.entries = [];\n            while (cnt > 0) {\n                this.entries.push(new PaletteEntry(reader));\n                cnt--;\n            }\n        } else {\n            this.start = copy.start;\n            this.entries = [];\n            const len = copy.entries.length;\n            for (let i = 0; i < len; i++) {\n                this.entries.push(copy.entries[i]);\n            }\n        }\n    }\n\n    public clone() {\n        return new Palette(null, this);\n    }\n\n    public toString() {\n        return \"{ #entries: \" + this.entries.length + \"}\"; // TODO\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { Blob } from \"./Blob\";\nimport { Helper, WMFJSError } from \"./Helper\";\n\nexport class BitmapBase {\n    public getWidth() {\n        throw new WMFJSError(\"getWidth not implemented\");\n    }\n\n    public getHeight() {\n        throw new WMFJSError(\"getHeight not implemented\");\n    }\n}\n\nexport class BitmapCoreHeader {\n    public width: number;\n    public height: number;\n    public planes: number;\n    public bitcount: number;\n\n    constructor(reader: Blob, skipsize: boolean) {\n        if (skipsize) {\n            reader.skip(4);\n        }\n        this.width = reader.readUint16();\n        this.height = reader.readUint16();\n        this.planes = reader.readUint16();\n        this.bitcount = reader.readUint16();\n    }\n\n    public colors() {\n        return this.bitcount <= 8 ? 1 << this.bitcount : 0;\n    }\n}\n\nexport class BitmapInfoHeader {\n    public width: number;\n    public height: number;\n    public planes: number;\n    public bitcount: number;\n    public compression: number;\n    public sizeimage: number;\n    public xpelspermeter: number;\n    public ypelspermeter: number;\n    public clrused: number;\n    public clrimportant: number;\n\n    constructor(reader: Blob, skipsize: boolean) {\n        if (skipsize) {\n            reader.skip(4);\n        }\n        this.width = reader.readInt32();\n        this.height = reader.readInt32();\n        this.planes = reader.readUint16();\n        this.bitcount = reader.readUint16();\n        this.compression = reader.readUint32();\n        this.sizeimage = reader.readUint32();\n        this.xpelspermeter = reader.readInt32();\n        this.ypelspermeter = reader.readInt32();\n        this.clrused = reader.readUint32();\n        this.clrimportant = reader.readUint32();\n    }\n\n    public colors() {\n        if (this.clrused !== 0) {\n            return this.clrused < 256 ? this.clrused : 256;\n        } else {\n            return this.bitcount > 8 ? 0 : 1 << this.bitcount;\n        }\n    }\n}\n\nexport class BitmapInfo extends BitmapBase {\n    private _reader: Blob;\n    private _offset: number;\n    private _usergb: boolean;\n    private _infosize: number;\n    private _header: BitmapCoreHeader | BitmapInfoHeader;\n\n    constructor(reader: Blob, usergb: boolean) {\n        super();\n        this._reader = reader;\n        this._offset = reader.pos;\n        this._usergb = usergb;\n        const hdrsize = reader.readUint32();\n        this._infosize = hdrsize;\n        if (hdrsize === Helper.GDI.BITMAPCOREHEADER_SIZE) {\n            this._header = new BitmapCoreHeader(reader, false);\n            this._infosize += this._header.colors() * (usergb ? 3 : 2);\n        } else {\n            this._header = new BitmapInfoHeader(reader, false);\n            const masks =\n                (this._header as BitmapInfoHeader).compression === Helper.GDI.BitmapCompression.BI_BITFIELDS ? 3 : 0;\n            if (hdrsize <= Helper.GDI.BITMAPINFOHEADER_SIZE + (masks * 4)) {\n                this._infosize = Helper.GDI.BITMAPINFOHEADER_SIZE + (masks * 4);\n            }\n            this._infosize += this._header.colors() * (usergb ? 4 : 2);\n        }\n    }\n\n    public getWidth() {\n        return this._header.width;\n    }\n\n    public getHeight() {\n        return Math.abs(this._header.height);\n    }\n\n    public infosize() {\n        return this._infosize;\n    }\n\n    public header() {\n        return this._header;\n    }\n}\n\nexport class DIBitmap extends BitmapBase {\n    private _reader: Blob;\n    private _offset: number;\n    private _size: number;\n    private _info: BitmapInfo;\n\n    constructor(reader: Blob, size: number) {\n        super();\n        this._reader = reader;\n        this._offset = reader.pos;\n        this._size = size;\n        this._info = new BitmapInfo(reader, true);\n    }\n\n    public getWidth() {\n        return this._info.getWidth();\n    }\n\n    public getHeight() {\n        return this._info.getHeight();\n    }\n\n    public base64ref() {\n        const prevpos = this._reader.pos;\n        this._reader.seek(this._offset);\n        let mime = \"image/bmp\";\n        const header = this._info.header();\n        let data;\n        if (header instanceof  BitmapInfoHeader && header.compression != null) {\n            switch (header.compression) {\n                case Helper.GDI.BitmapCompression.BI_JPEG:\n                    mime = \"data:image/jpeg\";\n                    break;\n                case Helper.GDI.BitmapCompression.BI_PNG:\n                    mime = \"data:image/png\";\n                    break;\n                default:\n                    data = this.makeBitmapFileHeader();\n                    break;\n            }\n        } else {\n            data = this.makeBitmapFileHeader();\n        }\n\n        if (data != null) {\n            data += this._reader.readBinary(this._size);\n        } else {\n            data = this._reader.readBinary(this._size);\n        }\n\n        const ref = \"data:\" + mime + \";base64,\" + btoa(data);\n        this._reader.seek(prevpos);\n        return ref;\n    }\n\n    private makeBitmapFileHeader() {\n        const buf = new ArrayBuffer(14);\n        const view = new Uint8Array(buf);\n        view[0] = 0x42;\n        view[1] = 0x4d;\n        Helper._writeUint32Val(view, 2, this._size + 14);\n        Helper._writeUint32Val(view, 10, this._info.infosize() + 14);\n        return Helper._blobToBinary(view);\n    }\n}\n\nexport class Bitmap16 extends BitmapBase {\n    public type: number;\n    public width: number;\n    public height: number;\n    public widthBytes: number;\n    public planes: number;\n    public bitsPixel: number;\n    public bitsOffset: number;\n    public bitsSize: number;\n    private _reader: Blob;\n    private _offset: number;\n    private _size: number;\n\n    constructor(reader: Blob, size: number | Bitmap16) {\n        super();\n        if (reader != null) {\n            size = size as number;\n            this._reader = reader;\n            this._offset = reader.pos;\n            this._size = size;\n            this.type = reader.readInt16();\n            this.width = reader.readInt16();\n            this.height = reader.readInt16();\n            this.widthBytes = reader.readInt16();\n            this.planes = reader.readUint8();\n            this.bitsPixel = reader.readUint8();\n            this.bitsOffset = reader.pos;\n            this.bitsSize = (((this.width * this.bitsPixel + 15) >> 4) << 1) * this.height;\n            if (this.bitsSize > size - 10) {\n                throw new WMFJSError(\"Bitmap should have \" + this.bitsSize + \" bytes, but has \" + (size - 10));\n            }\n        } else {\n            const copy = size as Bitmap16;\n            this._reader = copy._reader;\n            this._offset = copy._offset;\n            this._size = copy._size;\n            this.type = copy.type;\n            this.width = copy.width;\n            this.height = copy.height;\n            this.widthBytes = copy.widthBytes;\n            this.planes = copy.planes;\n            this.bitsPixel = copy.bitsPixel;\n            this.bitsOffset = copy.bitsOffset;\n            this.bitsSize = copy.bitsSize;\n        }\n    }\n\n    public getWidth() {\n        return this.width;\n    }\n\n    public getHeight() {\n        return this.height;\n    }\n\n    public clone() {\n        return new Bitmap16(null, this);\n    }\n}\n\nexport class PatternBitmap16 extends Bitmap16 {\n    constructor(reader: Blob, size: number | Bitmap16) {\n        super(reader, size);\n        if (reader != null) {\n            this.bitsOffset += 22; // skip bits (4 bytes) + reserved (18 bytes)\n        }\n    }\n\n    public clone(): PatternBitmap16 {\n        return new PatternBitmap16(null, this);\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { DIBitmap, PatternBitmap16 } from \"./Bitmap\";\nimport { Blob } from \"./Blob\";\nimport { GDIContext } from \"./GDIContext\";\nimport { Helper, WMFJSError } from \"./Helper\";\nimport { PointS, Rect } from \"./Primitives\";\nimport { Region } from \"./Region\";\nimport { Brush, ColorRef, Font, Palette, Pen } from \"./Style\";\n\nexport class WMFRecords {\n    private _records: Array<(gdi: GDIContext) => void>;\n\n    constructor(reader: Blob, first: number) {\n        this._records = [];\n\n        let all = false;\n        let curpos = first;\n        main_loop: while (!all) {\n            reader.seek(curpos);\n            const size = reader.readUint32();\n            if (size < 3) {\n                throw new WMFJSError(\"Invalid record size\");\n            }\n            const type = reader.readUint16();\n            switch (type) {\n                case Helper.GDI.RecordType.META_EOF:\n                    all = true;\n                    break main_loop;\n                case Helper.GDI.RecordType.META_SETMAPMODE: {\n                    const mapMode = reader.readUint16();\n                    this._records.push((gdi) => {\n                        gdi.setMapMode(mapMode);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SETWINDOWORG: {\n                    const y = reader.readInt16();\n                    const x = reader.readInt16();\n                    this._records.push((gdi) => {\n                        gdi.setWindowOrg(x, y);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SETWINDOWEXT: {\n                    const y = reader.readInt16();\n                    const x = reader.readInt16();\n                    this._records.push((gdi) => {\n                        gdi.setWindowExt(x, y);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_OFFSETWINDOWORG: {\n                    const offY = reader.readInt16();\n                    const offX = reader.readInt16();\n                    this._records.push((gdi) => {\n                        gdi.offsetWindowOrg(offX, offY);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SETVIEWPORTORG: {\n                    const y = reader.readInt16();\n                    const x = reader.readInt16();\n                    this._records.push((gdi) => {\n                        gdi.setViewportOrg(x, y);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SETVIEWPORTEXT: {\n                    const y = reader.readInt16();\n                    const x = reader.readInt16();\n                    this._records.push((gdi) => {\n                        gdi.setViewportExt(x, y);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_OFFSETVIEWPORTORG: {\n                    const offY = reader.readInt16();\n                    const offX = reader.readInt16();\n                    this._records.push((gdi) => {\n                        gdi.offsetViewportOrg(offX, offY);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SAVEDC: {\n                    this._records.push((gdi) => {\n                        gdi.saveDC();\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_RESTOREDC: {\n                    const saved = reader.readInt16();\n                    this._records.push((gdi) => {\n                        gdi.restoreDC(saved);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SETSTRETCHBLTMODE: {\n                    const stretchMode = reader.readUint16();\n                    this._records.push((gdi) => {\n                        gdi.setStretchBltMode(stretchMode);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_DIBSTRETCHBLT: {\n                    const haveSrcDib = ((type >> 8) + 3 !== size);\n                    const rasterOp = reader.readUint16() | (reader.readUint16() << 16);\n                    const srcH = reader.readInt16();\n                    const srcW = reader.readInt16();\n                    const srcY = reader.readInt16();\n                    const srcX = reader.readInt16();\n                    const destH = reader.readInt16();\n                    const destW = reader.readInt16();\n                    const destY = reader.readInt16();\n                    const destX = reader.readInt16();\n                    const datalength = size * 2 - (reader.pos - curpos);\n                    const dib = new DIBitmap(reader, datalength);\n                    this._records.push((gdi) => {\n                        gdi.stretchDibBits(srcX, srcY, srcW, srcH, destX, destY, destW, destH, rasterOp, dib);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_STRETCHDIB: {\n                    const rasterOp = reader.readUint16() | (reader.readUint16() << 16);\n                    const colorUsage = reader.readInt16();\n                    const srcH = reader.readInt16();\n                    const srcW = reader.readInt16();\n                    const srcY = reader.readInt16();\n                    const srcX = reader.readInt16();\n                    const destH = reader.readInt16();\n                    const destW = reader.readInt16();\n                    const destY = reader.readInt16();\n                    const destX = reader.readInt16();\n                    const datalength = size * 2 - (reader.pos - curpos);\n                    const dib = new DIBitmap(reader, datalength);\n                    this._records.push((gdi) => {\n                        gdi.stretchDib(srcX, srcY, srcW, srcH, destX, destY, destW, destH, rasterOp, colorUsage, dib);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_ESCAPE: {\n                    const func = reader.readUint16();\n                    const count = reader.readUint16();\n                    const offset = reader.pos;\n                    const blob = new Blob(reader, offset);\n                    this._records.push((gdi) => {\n                        gdi.escape(func, blob, offset, count);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SETTEXTALIGN: {\n                    const textAlign = reader.readUint16();\n                    this._records.push((gdi) => {\n                        gdi.setTextAlign(textAlign);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SETBKMODE: {\n                    const bkMode = reader.readUint16();\n                    this._records.push((gdi) => {\n                        gdi.setBkMode(bkMode);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SETTEXTCOLOR: {\n                    const textColor = new ColorRef(reader);\n                    this._records.push((gdi) => {\n                        gdi.setTextColor(textColor);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SETBKCOLOR: {\n                    const bkColor = new ColorRef(reader);\n                    this._records.push((gdi) => {\n                        gdi.setBkColor(bkColor);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_CREATEBRUSHINDIRECT: {\n                    const datalength = size * 2 - (reader.pos - curpos);\n                    const brush = new Brush(reader, datalength, false);\n                    this._records.push((gdi) => {\n                        gdi.createBrush(brush);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_DIBCREATEPATTERNBRUSH: {\n                    const datalength = size * 2 - (reader.pos - curpos);\n                    const brush = new Brush(reader, datalength, true);\n                    this._records.push((gdi) => {\n                        gdi.createBrush(brush);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_CREATEPENINDIRECT: {\n                    const pen = new Pen(reader);\n                    this._records.push((gdi) => {\n                        gdi.createPen(pen);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_CREATEFONTINDIRECT: {\n                    const datalength = size * 2 - (reader.pos - curpos);\n                    const font = new Font(reader, datalength);\n                    this._records.push((gdi) => {\n                        gdi.createFont(font);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SELECTOBJECT: {\n                    const idx = reader.readUint16();\n                    this._records.push((gdi) => {\n                        gdi.selectObject(idx, null);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SELECTPALETTE: {\n                    const idx = reader.readUint16();\n                    this._records.push((gdi) => {\n                        gdi.selectObject(idx, \"palette\");\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SELECTCLIPREGION: {\n                    const idx = reader.readUint16();\n                    this._records.push((gdi) => {\n                        gdi.selectObject(idx, \"region\");\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_DELETEOBJECT: {\n                    const idx = reader.readUint16();\n                    this._records.push((gdi) => {\n                        gdi.deleteObject(idx);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_RECTANGLE: {\n                    const rect = new Rect(reader);\n                    this._records.push((gdi) => {\n                        gdi.rectangle(rect, 0, 0);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_ROUNDRECT: {\n                    const rh = reader.readInt16();\n                    const rw = reader.readInt16();\n                    const rect = new Rect(reader);\n                    this._records.push((gdi) => {\n                        gdi.rectangle(rect, rw, rh);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_LINETO: {\n                    const y = reader.readInt16();\n                    const x = reader.readInt16();\n                    this._records.push((gdi) => {\n                        gdi.lineTo(x, y);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_MOVETO: {\n                    const y = reader.readInt16();\n                    const x = reader.readInt16();\n                    this._records.push((gdi) => {\n                        gdi.moveTo(x, y);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_TEXTOUT: {\n                    const len = reader.readInt16();\n                    if (len > 0) {\n                        const text = reader.readString(len);\n                        reader.skip(len % 2);\n                        const y = reader.readInt16();\n                        const x = reader.readInt16();\n                        this._records.push((gdi) => {\n                            gdi.textOut(x, y, text);\n                        });\n                    }\n                    break;\n                }\n                case Helper.GDI.RecordType.META_EXTTEXTOUT: {\n                    const y = reader.readInt16();\n                    const x = reader.readInt16();\n                    const len = reader.readInt16();\n                    const fwOpts = reader.readUint16();\n\n                    let hasRect = null;\n                    let hasDx = null;\n                    if (size * 2 === 14 + len + len % 2) {\n                        hasRect = false;\n                        hasDx = false;\n                    }\n                    if (size * 2 === 14 + 8 + len + len % 2) {\n                        hasRect = true;\n                        hasDx = false;\n                    }\n                    if (size * 2 === 14 + len + len % 2 + len * 2) {\n                        hasRect = false;\n                        hasDx = true;\n                    }\n                    if (size * 2 === 14 + 8 + len + len % 2 + len * 2) {\n                        hasRect = true;\n                        hasDx = true;\n                    }\n\n                    const rect = hasRect ? new Rect(reader) : null;\n                    if (len > 0) {\n                        const text = reader.readString(len);\n                        reader.skip(len % 2);\n\n                        const dx: number[] = [];\n                        if (hasDx) {\n                            for (let i = 0; i < text.length; i++) {\n                                dx.push(reader.readInt16());\n                            }\n                        }\n\n                        this._records.push((gdi) => {\n                            gdi.extTextOut(x, y, text, fwOpts, rect, dx);\n                        });\n                    }\n                    break;\n                }\n                case Helper.GDI.RecordType.META_EXCLUDECLIPRECT: {\n                    const rect = new Rect(reader);\n                    this._records.push((gdi) => {\n                        gdi.excludeClipRect(rect);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_INTERSECTCLIPRECT: {\n                    const rect = new Rect(reader);\n                    this._records.push((gdi) => {\n                        gdi.intersectClipRect(rect);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_POLYGON: {\n                    let cnt = reader.readInt16();\n                    const points: PointS[] = [];\n                    while (cnt > 0) {\n                        points.push(new PointS(reader));\n                        cnt--;\n                    }\n                    this._records.push((gdi) => {\n                        gdi.polygon(points, true);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_SETPOLYFILLMODE: {\n                    const polyfillmode = reader.readUint16();\n                    this._records.push((gdi) => {\n                        gdi.setPolyFillMode(polyfillmode);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_POLYPOLYGON: {\n                    const cnt = reader.readUint16();\n                    const polygonsPtCnts = [];\n                    for (let i = 0; i < cnt; i++) {\n                        polygonsPtCnts.push(reader.readUint16());\n                    }\n\n                    const polygons: PointS[][] = [];\n                    for (let i = 0; i < cnt; i++) {\n                        const ptCnt = polygonsPtCnts[i];\n\n                        const p = [];\n                        for (let ip = 0; ip < ptCnt; ip++) {\n                            p.push(new PointS(reader));\n                        }\n                        polygons.push(p);\n                    }\n                    this._records.push((gdi) => {\n                        gdi.polyPolygon(polygons);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_POLYLINE: {\n                    let cnt = reader.readInt16();\n                    const points: PointS[] = [];\n                    while (cnt > 0) {\n                        points.push(new PointS(reader));\n                        cnt--;\n                    }\n                    this._records.push((gdi) => {\n                        gdi.polyline(points);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_ELLIPSE: {\n                    const rect = new Rect(reader);\n                    this._records.push((gdi) => {\n                        gdi.ellipse(rect);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_CREATEPALETTE: {\n                    const palette = new Palette(reader);\n                    this._records.push((gdi) => {\n                        gdi.createPalette(palette);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_CREATEREGION: {\n                    const region = new Region(reader);\n                    this._records.push((gdi) => {\n                        gdi.createRegion(region);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_CREATEPATTERNBRUSH: {\n                    const datalength = size * 2 - (reader.pos - curpos);\n                    const patternBitmap = new PatternBitmap16(reader, datalength);\n                    const brush = new Brush(reader, datalength, patternBitmap);\n                    this._records.push((gdi) => {\n                        gdi.createPatternBrush(brush);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_OFFSETCLIPRGN: {\n                    const offY = reader.readInt16();\n                    const offX = reader.readInt16();\n                    this._records.push((gdi) => {\n                        gdi.offsetClipRgn(offX, offY);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.META_REALIZEPALETTE:\n                case Helper.GDI.RecordType.META_SETPALENTRIES:\n                case Helper.GDI.RecordType.META_SETROP2:\n                case Helper.GDI.RecordType.META_SETRELABS:\n                case Helper.GDI.RecordType.META_SETTEXTCHAREXTRA:\n                case Helper.GDI.RecordType.META_RESIZEPALETTE:\n                case Helper.GDI.RecordType.META_SETLAYOUT:\n                case Helper.GDI.RecordType.META_FILLREGION:\n                case Helper.GDI.RecordType.META_SETMAPPERFLAGS:\n                case Helper.GDI.RecordType.META_SETTEXTJUSTIFICATION:\n                case Helper.GDI.RecordType.META_SCALEWINDOWEXT:\n                case Helper.GDI.RecordType.META_SCALEVIEWPORTEXT:\n                case Helper.GDI.RecordType.META_FLOODFILL:\n                case Helper.GDI.RecordType.META_FRAMEREGION:\n                case Helper.GDI.RecordType.META_ANIMATEPALETTE:\n                case Helper.GDI.RecordType.META_EXTFLOODFILL:\n                case Helper.GDI.RecordType.META_SETPIXEL:\n                case Helper.GDI.RecordType.META_PATBLT:\n                case Helper.GDI.RecordType.META_PIE:\n                case Helper.GDI.RecordType.META_STRETCHBLT:\n                case Helper.GDI.RecordType.META_INVERTREGION:\n                case Helper.GDI.RecordType.META_PAINTREGION:\n                case Helper.GDI.RecordType.META_ARC:\n                case Helper.GDI.RecordType.META_CHORD:\n                case Helper.GDI.RecordType.META_BITBLT:\n                case Helper.GDI.RecordType.META_SETDIBTODEV:\n                case Helper.GDI.RecordType.META_DIBBITBLT:\n                default: {\n                    let recordName = \"UNKNOWN\";\n                    for (const name in Helper.GDI.RecordType) {\n                        const recordTypes: any = Helper.GDI.RecordType;\n                        if (recordTypes[name] === type) {\n                            recordName = name;\n                            break;\n                        }\n                    }\n                    Helper.log(\"[WMF] \" + recordName + \" record (0x\" + type.toString(16) + \") at offset 0x\"\n                        + curpos.toString(16) + \" with \" + (size * 2) + \" bytes\");\n                    break;\n                }\n            }\n\n            curpos += size * 2;\n        }\n\n        if (!all) {\n            throw new WMFJSError(\"Could not read all records\");\n        }\n    }\n\n    public play(gdi: GDIContext) {\n        const len = this._records.length;\n        for (let i = 0; i < len; i++) {\n            this._records[i](gdi);\n        }\n    }\n}\n"],"sourceRoot":""}